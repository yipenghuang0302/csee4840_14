// megafunction wizard: %LPM_MULT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altsquare 

// ============================================================
// File Name: mult_27_square.v
// Megafunction Name(s):
// 			altsquare
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.1.3 Build 178 02/12/2014 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2014 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altsquare DATA_WIDTH=27 DEVICE_FAMILY="Cyclone V" PIPELINE=3 REPRESENTATION="SIGNED" RESULT_ALIGNMENT="MSB" RESULT_WIDTH=35 clock data ena result
//VERSION_BEGIN 13.1 cbx_altsquare 2014:02:12:20:59:45:SJ cbx_cycloneii 2014:02:12:20:59:46:SJ cbx_lpm_add_sub 2014:02:12:20:59:46:SJ cbx_mgl 2014:02:12:21:04:28:SJ cbx_padd 2014:02:12:20:59:46:SJ cbx_stratix 2014:02:12:20:59:46:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//adder DEVICE_FAMILY="Cyclone V" WIDTH=53 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=44 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=36 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=28 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=20 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=12 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone V" WIDTH=4 dataa datab datac result
//VERSION_BEGIN 13.1 cbx_mgl 2014:02:12:21:04:28:SJ cbx_stratixii 2014:02:12:20:59:46:SJ cbx_util_mgl 2014:02:12:20:59:46:SJ  VERSION_END

//synthesis_resources = lut 394 reg 543 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mult_27_square_altsquare
	( 
	clock,
	data,
	ena,
	result) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [26:0]  data;
	input   ena;
	output   [34:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clock;
	tri1   ena;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[52:0]	wire_add542_result;
	wire	[43:0]	wire_add547_result;
	wire	[35:0]	wire_add552_result;
	wire	[27:0]	wire_add557_result;
	wire	[19:0]	wire_add562_result;
	wire	[11:0]	wire_add567_result;
	wire	[3:0]	wire_add572_result;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe10;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe100;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe101;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe102;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe103;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe104;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe105;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe106;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe107;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe108;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe109;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe11;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe110;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe111;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe112;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe113;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe114;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe115;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe116;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe117;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe118;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe119;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe12;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe120;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe121;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe122;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe123;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe124;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe125;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe126;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe127;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe128;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe129;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe13;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe130;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe131;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe132;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe133;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe134;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe135;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe136;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe137;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe138;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe139;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe14;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe140;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe141;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe142;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe143;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe144;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe145;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe146;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe147;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe148;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe149;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe15;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe150;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe151;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe152;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe153;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe154;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe155;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe156;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe157;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe158;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe159;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe16;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe160;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe161;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe162;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe163;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe164;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe165;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe166;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe167;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe168;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe169;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe17;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe170;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe171;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe172;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe173;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe174;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe175;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe176;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe177;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe178;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe179;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe18;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe180;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe181;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe182;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe183;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe184;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe185;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe186;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe187;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe188;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe189;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe19;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe190;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe191;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe192;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe193;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe194;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe195;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe196;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe197;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe198;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe199;
	reg	[0:0]	dffe1a0;
	reg	[0:0]	dffe1a1;
	reg	[0:0]	dffe1a2;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe2;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe20;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe200;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe201;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe202;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe203;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe204;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe205;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe206;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe207;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe208;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe209;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe21;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe210;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe211;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe212;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe213;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe214;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe215;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe216;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe217;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe218;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe219;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe22;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe220;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe221;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe222;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe223;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe224;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe225;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe226;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe227;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe228;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe229;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe23;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe230;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe231;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe232;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe233;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe234;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe235;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe236;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe237;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe238;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe239;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe24;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe240;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe241;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe242;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe243;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe244;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe245;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe246;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe247;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe248;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe249;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe25;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe250;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe251;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe252;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe253;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe254;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe255;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe256;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe257;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe258;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe259;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe26;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe260;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe261;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe262;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe263;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe264;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe265;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe266;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe267;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe268;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe269;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe27;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe270;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe271;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe272;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe273;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe274;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe275;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe276;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe277;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe278;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe279;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe28;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe280;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe281;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe282;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe283;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe284;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe285;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe286;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe287;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe288;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe289;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe29;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe290;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe291;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe292;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe293;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe294;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe295;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe296;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe297;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe298;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe299;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe3;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe30;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe300;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe301;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe302;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe303;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe304;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe305;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe306;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe307;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe308;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe309;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe31;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe310;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe311;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe312;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe313;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe314;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe315;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe316;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe317;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe318;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe319;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe32;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe320;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe321;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe322;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe323;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe324;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe325;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe326;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe327;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe328;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe329;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe33;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe330;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe331;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe332;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe333;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe334;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe335;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe336;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe337;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe338;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe339;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe34;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe340;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe341;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe342;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe343;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe344;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe345;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe346;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe347;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe348;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe349;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe35;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe350;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe351;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe352;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe353;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe354;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe355;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe356;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe357;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe358;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe359;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe36;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe360;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe361;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe362;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe363;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe364;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe365;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe366;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe367;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe368;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe369;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe37;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe370;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe371;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe372;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe373;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe374;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe375;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe376;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe377;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe378;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe379;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe38;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe380;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe381;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe382;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe383;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe384;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe385;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe386;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe387;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe388;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe389;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe39;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe390;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe391;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe392;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe393;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe394;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe395;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe396;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe397;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe398;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe399;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe4;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe40;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe400;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe401;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe402;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe403;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe404;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe405;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe406;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe407;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe408;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe409;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe41;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe410;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe411;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe412;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe413;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe414;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe415;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe416;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe417;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe418;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe419;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe42;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe420;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe421;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe422;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe423;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe424;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe425;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe426;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe427;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe428;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe429;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe43;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe430;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe431;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe432;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe433;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe434;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe435;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe436;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe437;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe438;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe439;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe44;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe440;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe441;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe442;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe443;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe444;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe445;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe446;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe447;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe448;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe449;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe45;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe450;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe451;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe452;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe453;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe454;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe455;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe456;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe457;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe458;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe459;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe46;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe460;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe461;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe462;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe463;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe464;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe465;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe466;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe467;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe468;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe469;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe47;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe470;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe471;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe472;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe473;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe474;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe475;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe476;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe477;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe478;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe479;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe48;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe480;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe481;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe482;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe483;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe484;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe485;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe486;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe487;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe488;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe489;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe49;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe490;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe491;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe492;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe493;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe494;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe495;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe496;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe497;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe498;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe499;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe5;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe50;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe500;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe501;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe502;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe503;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe504;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe505;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe506;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe507;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe508;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe509;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe51;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe510;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe511;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe512;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe513;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe514;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe515;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe516;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe517;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe518;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe519;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe52;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe520;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe521;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe522;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe523;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe524;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe525;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe526;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe527;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe528;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe529;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe53;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe530;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe531;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe532;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe533;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe534;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe535;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe536;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe537;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe538;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe539;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe54;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe540;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe541;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe55;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe56;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe57;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe58;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe59;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe6;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe60;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe61;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe62;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe63;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe64;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe65;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe66;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe67;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe68;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe69;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe7;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe70;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe71;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe72;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe73;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe74;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe75;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe76;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe77;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe78;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe79;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe8;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe80;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe81;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe82;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe83;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe84;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe85;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe86;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe87;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe88;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe89;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe9;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe90;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe91;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe92;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe93;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe94;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe95;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe96;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe97;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe98;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe99;
	wire  [52:0]   wire_sft543a_in;
	wire  [52:0]   wire_sft543a_out;
	wire  [52:0]   wire_sft544a_in;
	wire  [52:0]   wire_sft544a_out;
	wire  [52:0]   wire_sft545a_in;
	wire  [52:0]   wire_sft545a_out;
	wire  [52:0]   wire_sft546a_in;
	wire  [52:0]   wire_sft546a_out;
	wire  [43:0]   wire_sft548a_in;
	wire  [43:0]   wire_sft548a_out;
	wire  [43:0]   wire_sft549a_in;
	wire  [43:0]   wire_sft549a_out;
	wire  [43:0]   wire_sft550a_in;
	wire  [43:0]   wire_sft550a_out;
	wire  [43:0]   wire_sft551a_in;
	wire  [43:0]   wire_sft551a_out;
	wire  [35:0]   wire_sft553a_in;
	wire  [35:0]   wire_sft553a_out;
	wire  [35:0]   wire_sft554a_in;
	wire  [35:0]   wire_sft554a_out;
	wire  [35:0]   wire_sft555a_in;
	wire  [35:0]   wire_sft555a_out;
	wire  [35:0]   wire_sft556a_in;
	wire  [35:0]   wire_sft556a_out;
	wire  [27:0]   wire_sft558a_in;
	wire  [27:0]   wire_sft558a_out;
	wire  [27:0]   wire_sft559a_in;
	wire  [27:0]   wire_sft559a_out;
	wire  [27:0]   wire_sft560a_in;
	wire  [27:0]   wire_sft560a_out;
	wire  [27:0]   wire_sft561a_in;
	wire  [27:0]   wire_sft561a_out;
	wire  [19:0]   wire_sft563a_in;
	wire  [19:0]   wire_sft563a_out;
	wire  [19:0]   wire_sft564a_in;
	wire  [19:0]   wire_sft564a_out;
	wire  [19:0]   wire_sft565a_in;
	wire  [19:0]   wire_sft565a_out;
	wire  [19:0]   wire_sft566a_in;
	wire  [19:0]   wire_sft566a_out;
	wire  [11:0]   wire_sft568a_in;
	wire  [11:0]   wire_sft568a_out;
	wire  [11:0]   wire_sft569a_in;
	wire  [11:0]   wire_sft569a_out;
	wire  [11:0]   wire_sft570a_in;
	wire  [11:0]   wire_sft570a_out;
	wire  [11:0]   wire_sft571a_in;
	wire  [11:0]   wire_sft571a_out;
	wire  [3:0]   wire_sft573a_in;
	wire  [3:0]   wire_sft573a_out;
	wire  [3:0]   wire_sft574a_in;
	wire  [3:0]   wire_sft574a_out;
	wire  [3:0]   wire_sft575a_in;
	wire  [3:0]   wire_sft575a_out;
	wire  [3:0]   wire_sft576a_in;
	wire  [3:0]   wire_sft576a_out;
	wire aclr;
	wire  [0:0]  w1000w;
	wire  [0:0]  w1004w;
	wire  [0:0]  w1008w;
	wire  [0:0]  w100w;
	wire  [0:0]  w1012w;
	wire  [0:0]  w1016w;
	wire  [0:0]  w1019w;
	wire  [0:0]  w1022w;
	wire  [0:0]  w1026w;
	wire  [0:0]  w1030w;
	wire  [0:0]  w1033w;
	wire  [0:0]  w1036w;
	wire  [0:0]  w103w;
	wire  [0:0]  w1040w;
	wire  [0:0]  w1044w;
	wire  [0:0]  w1047w;
	wire  [0:0]  w1050w;
	wire  [0:0]  w1054w;
	wire  [0:0]  w1058w;
	wire  [0:0]  w1061w;
	wire  [0:0]  w1064w;
	wire  [0:0]  w1068w;
	wire  [0:0]  w1072w;
	wire  [0:0]  w1075w;
	wire  [0:0]  w1078w;
	wire  [0:0]  w1081w;
	wire  [0:0]  w1086w;
	wire  [0:0]  w108w;
	wire  [0:0]  w1090w;
	wire  [0:0]  w1094w;
	wire  [0:0]  w1097w;
	wire  [0:0]  w1101w;
	wire  [0:0]  w1105w;
	wire  [0:0]  w1108w;
	wire  [0:0]  w1111w;
	wire  [0:0]  w1115w;
	wire  [0:0]  w1119w;
	wire  [0:0]  w1122w;
	wire  [0:0]  w1125w;
	wire  [0:0]  w1129w;
	wire  [0:0]  w112w;
	wire  [0:0]  w1133w;
	wire  [0:0]  w1136w;
	wire  [0:0]  w1139w;
	wire  [0:0]  w1143w;
	wire  [0:0]  w1147w;
	wire  [0:0]  w1150w;
	wire  [0:0]  w1153w;
	wire  [0:0]  w1157w;
	wire  [0:0]  w1161w;
	wire  [0:0]  w1164w;
	wire  [0:0]  w1167w;
	wire  [0:0]  w116w;
	wire  [0:0]  w1170w;
	wire  [0:0]  w1175w;
	wire  [0:0]  w1179w;
	wire  [0:0]  w1183w;
	wire  [0:0]  w1186w;
	wire  [0:0]  w1189w;
	wire  [0:0]  w1193w;
	wire  [0:0]  w1197w;
	wire  [0:0]  w1200w;
	wire  [0:0]  w1203w;
	wire  [0:0]  w1207w;
	wire  [0:0]  w120w;
	wire  [0:0]  w1211w;
	wire  [0:0]  w1214w;
	wire  [0:0]  w1217w;
	wire  [0:0]  w1221w;
	wire  [0:0]  w1225w;
	wire  [0:0]  w1228w;
	wire  [0:0]  w1231w;
	wire  [0:0]  w1235w;
	wire  [0:0]  w1239w;
	wire  [0:0]  w1242w;
	wire  [0:0]  w1245w;
	wire  [0:0]  w1249w;
	wire  [0:0]  w124w;
	wire  [0:0]  w1253w;
	wire  [0:0]  w1256w;
	wire  [0:0]  w1259w;
	wire  [0:0]  w1262w;
	wire  [0:0]  w1267w;
	wire  [0:0]  w1271w;
	wire  [0:0]  w1275w;
	wire  [0:0]  w127w;
	wire  [0:0]  w1280w;
	wire  [0:0]  w1284w;
	wire  [0:0]  w1288w;
	wire  [0:0]  w1293w;
	wire  [0:0]  w1298w;
	wire  [0:0]  w12w;
	wire  [0:0]  w1302w;
	wire  [0:0]  w1306w;
	wire  [0:0]  w130w;
	wire  [0:0]  w1311w;
	wire  [0:0]  w1316w;
	wire  [0:0]  w1320w;
	wire  [0:0]  w1324w;
	wire  [0:0]  w1329w;
	wire  [0:0]  w1334w;
	wire  [0:0]  w1338w;
	wire  [0:0]  w133w;
	wire  [0:0]  w1342w;
	wire  [0:0]  w1347w;
	wire  [0:0]  w1352w;
	wire  [0:0]  w1356w;
	wire  [0:0]  w1360w;
	wire  [0:0]  w1365w;
	wire  [0:0]  w1370w;
	wire  [0:0]  w1374w;
	wire  [0:0]  w1378w;
	wire  [0:0]  w1382w;
	wire  [0:0]  w1388w;
	wire  [0:0]  w138w;
	wire  w1390w;
	wire  w1412w;
	wire  [0:0]  w142w;
	wire  [0:0]  w146w;
	wire  [0:0]  w149w;
	wire  [0:0]  w153w;
	wire  [0:0]  w157w;
	wire  [0:0]  w160w;
	wire  [0:0]  w163w;
	wire  [0:0]  w166w;
	wire  [0:0]  w16w;
	wire  [0:0]  w171w;
	wire  [0:0]  w175w;
	wire  [0:0]  w179w;
	wire  [0:0]  w182w;
	wire  [0:0]  w185w;
	wire  [0:0]  w189w;
	wire  [0:0]  w193w;
	wire  [0:0]  w196w;
	wire  [0:0]  w199w;
	wire  [53:0]  w1w;
	wire  [0:0]  w202w;
	wire  [0:0]  w207w;
	wire  [0:0]  w20w;
	wire  [0:0]  w211w;
	wire  [0:0]  w215w;
	wire  [55:0]  w2180w;
	wire  [0:0]  w219w;
	wire  [0:0]  w222w;
	wire  [0:0]  w225w;
	wire  [0:0]  w229w;
	wire  [0:0]  w233w;
	wire  [0:0]  w236w;
	wire  [0:0]  w239w;
	wire  [0:0]  w242w;
	wire  [0:0]  w247w;
	wire  [0:0]  w251w;
	wire  [0:0]  w255w;
	wire  [0:0]  w259w;
	wire  [0:0]  w25w;
	wire  [0:0]  w263w;
	wire  [0:0]  w266w;
	wire  [0:0]  w269w;
	wire  [0:0]  w273w;
	wire  [0:0]  w277w;
	wire  [0:0]  w280w;
	wire  [0:0]  w283w;
	wire  [0:0]  w286w;
	wire  [0:0]  w291w;
	wire  [0:0]  w295w;
	wire  [0:0]  w299w;
	wire  [0:0]  w29w;
	wire  [0:0]  w302w;
	wire  [0:0]  w306w;
	wire  [0:0]  w310w;
	wire  [0:0]  w313w;
	wire  [0:0]  w316w;
	wire  [0:0]  w320w;
	wire  [0:0]  w324w;
	wire  [0:0]  w327w;
	wire  [0:0]  w330w;
	wire  [0:0]  w333w;
	wire  [0:0]  w338w;
	wire  [0:0]  w33w;
	wire  [0:0]  w342w;
	wire  [0:0]  w346w;
	wire  [0:0]  w349w;
	wire  [0:0]  w352w;
	wire  [0:0]  w356w;
	wire  [0:0]  w360w;
	wire  [0:0]  w363w;
	wire  [0:0]  w366w;
	wire  [0:0]  w36w;
	wire  [0:0]  w370w;
	wire  [0:0]  w374w;
	wire  [0:0]  w377w;
	wire  [0:0]  w380w;
	wire  [0:0]  w383w;
	wire  [0:0]  w388w;
	wire  [0:0]  w392w;
	wire  [0:0]  w396w;
	wire  [0:0]  w400w;
	wire  [0:0]  w403w;
	wire  [0:0]  w406w;
	wire  [0:0]  w410w;
	wire  [0:0]  w414w;
	wire  [0:0]  w417w;
	wire  [0:0]  w41w;
	wire  [0:0]  w420w;
	wire  [0:0]  w424w;
	wire  [0:0]  w428w;
	wire  [0:0]  w431w;
	wire  [0:0]  w434w;
	wire  [0:0]  w437w;
	wire  [0:0]  w442w;
	wire  [0:0]  w446w;
	wire  [0:0]  w450w;
	wire  [0:0]  w454w;
	wire  [0:0]  w458w;
	wire  [0:0]  w45w;
	wire  [0:0]  w461w;
	wire  [0:0]  w464w;
	wire  [0:0]  w468w;
	wire  [0:0]  w472w;
	wire  [0:0]  w475w;
	wire  [0:0]  w478w;
	wire  [0:0]  w482w;
	wire  [0:0]  w486w;
	wire  [0:0]  w489w;
	wire  [0:0]  w492w;
	wire  [0:0]  w495w;
	wire  [0:0]  w49w;
	wire  [0:0]  w500w;
	wire  [0:0]  w504w;
	wire  [0:0]  w508w;
	wire  [0:0]  w511w;
	wire  [0:0]  w515w;
	wire  [0:0]  w519w;
	wire  [0:0]  w522w;
	wire  [0:0]  w525w;
	wire  [0:0]  w529w;
	wire  [0:0]  w52w;
	wire  [0:0]  w533w;
	wire  [0:0]  w536w;
	wire  [0:0]  w539w;
	wire  [0:0]  w543w;
	wire  [0:0]  w547w;
	wire  [0:0]  w550w;
	wire  [0:0]  w553w;
	wire  [0:0]  w556w;
	wire  [0:0]  w55w;
	wire  [0:0]  w561w;
	wire  [0:0]  w565w;
	wire  [0:0]  w569w;
	wire  [0:0]  w572w;
	wire  [0:0]  w575w;
	wire  [0:0]  w579w;
	wire  [0:0]  w583w;
	wire  [0:0]  w586w;
	wire  [0:0]  w589w;
	wire  [0:0]  w593w;
	wire  [0:0]  w597w;
	wire  [0:0]  w600w;
	wire  [0:0]  w603w;
	wire  [0:0]  w607w;
	wire  [0:0]  w60w;
	wire  [0:0]  w611w;
	wire  [0:0]  w614w;
	wire  [0:0]  w617w;
	wire  [0:0]  w620w;
	wire  [0:0]  w625w;
	wire  [0:0]  w629w;
	wire  [0:0]  w633w;
	wire  [0:0]  w637w;
	wire  [0:0]  w640w;
	wire  [0:0]  w643w;
	wire  [0:0]  w647w;
	wire  [0:0]  w64w;
	wire  [0:0]  w651w;
	wire  [0:0]  w654w;
	wire  [0:0]  w657w;
	wire  [0:0]  w661w;
	wire  [0:0]  w665w;
	wire  [0:0]  w668w;
	wire  [0:0]  w671w;
	wire  [0:0]  w675w;
	wire  [0:0]  w679w;
	wire  [0:0]  w682w;
	wire  [0:0]  w685w;
	wire  [0:0]  w688w;
	wire  [0:0]  w68w;
	wire  [0:0]  w693w;
	wire  [0:0]  w697w;
	wire  [0:0]  w701w;
	wire  [0:0]  w705w;
	wire  [0:0]  w709w;
	wire  [0:0]  w712w;
	wire  [0:0]  w715w;
	wire  [0:0]  w719w;
	wire  [0:0]  w71w;
	wire  [0:0]  w723w;
	wire  [0:0]  w726w;
	wire  [0:0]  w729w;
	wire  [0:0]  w733w;
	wire  [0:0]  w737w;
	wire  [0:0]  w740w;
	wire  [0:0]  w743w;
	wire  [0:0]  w747w;
	wire  [0:0]  w74w;
	wire  [0:0]  w751w;
	wire  [0:0]  w754w;
	wire  [0:0]  w757w;
	wire  [0:0]  w760w;
	wire  [0:0]  w765w;
	wire  [0:0]  w769w;
	wire  [0:0]  w773w;
	wire  [0:0]  w776w;
	wire  [0:0]  w77w;
	wire  [0:0]  w780w;
	wire  [0:0]  w784w;
	wire  [0:0]  w787w;
	wire  [0:0]  w790w;
	wire  [0:0]  w794w;
	wire  [0:0]  w798w;
	wire  [0:0]  w801w;
	wire  [0:0]  w804w;
	wire  [0:0]  w808w;
	wire  [0:0]  w812w;
	wire  [0:0]  w815w;
	wire  [0:0]  w818w;
	wire  [0:0]  w822w;
	wire  [0:0]  w826w;
	wire  [0:0]  w829w;
	wire  [0:0]  w82w;
	wire  [0:0]  w832w;
	wire  [0:0]  w835w;
	wire  [0:0]  w840w;
	wire  [0:0]  w844w;
	wire  [0:0]  w848w;
	wire  [0:0]  w851w;
	wire  [0:0]  w854w;
	wire  [0:0]  w858w;
	wire  [0:0]  w862w;
	wire  [0:0]  w865w;
	wire  [0:0]  w868w;
	wire  [0:0]  w86w;
	wire  [0:0]  w872w;
	wire  [0:0]  w876w;
	wire  [0:0]  w879w;
	wire  [0:0]  w882w;
	wire  [0:0]  w886w;
	wire  [0:0]  w890w;
	wire  [0:0]  w893w;
	wire  [0:0]  w896w;
	wire  [0:0]  w900w;
	wire  [0:0]  w904w;
	wire  [0:0]  w907w;
	wire  [0:0]  w90w;
	wire  [0:0]  w910w;
	wire  [0:0]  w913w;
	wire  [0:0]  w918w;
	wire  [0:0]  w922w;
	wire  [0:0]  w926w;
	wire  [0:0]  w930w;
	wire  [0:0]  w933w;
	wire  [0:0]  w936w;
	wire  [0:0]  w940w;
	wire  [0:0]  w944w;
	wire  [0:0]  w947w;
	wire  [0:0]  w94w;
	wire  [0:0]  w950w;
	wire  [0:0]  w954w;
	wire  [0:0]  w958w;
	wire  [0:0]  w961w;
	wire  [0:0]  w964w;
	wire  [0:0]  w968w;
	wire  [0:0]  w972w;
	wire  [0:0]  w975w;
	wire  [0:0]  w978w;
	wire  [0:0]  w97w;
	wire  [0:0]  w982w;
	wire  [0:0]  w986w;
	wire  [0:0]  w989w;
	wire  [0:0]  w992w;
	wire  [0:0]  w995w;

	assign
		wire_add542_result = wire_sft543a_out + wire_sft544a_out + wire_sft545a_out;
	assign
		wire_add547_result = wire_sft548a_out + wire_sft549a_out + wire_sft550a_out;
	assign
		wire_add552_result = wire_sft553a_out + wire_sft554a_out + wire_sft555a_out;
	assign
		wire_add557_result = wire_sft558a_out + wire_sft559a_out + wire_sft560a_out;
	assign
		wire_add562_result = wire_sft563a_out + wire_sft564a_out + wire_sft565a_out;
	assign
		wire_add567_result = wire_sft568a_out + wire_sft569a_out + wire_sft570a_out;
	assign
		wire_add572_result = wire_sft573a_out + wire_sft574a_out + wire_sft575a_out;
	// synopsys translate_off
	initial
		dffe10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe10 <= 1'b0;
		else if  (ena == 1'b1)   dffe10 <= wire_sft546a_out[1];
	// synopsys translate_off
	initial
		dffe100 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe100 <= 1'b0;
		else if  (ena == 1'b1)   dffe100 <= w263w[0];
	// synopsys translate_off
	initial
		dffe101 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe101 <= 1'b0;
		else if  (ena == 1'b1)   dffe101 <= wire_sft556a_out[3];
	// synopsys translate_off
	initial
		dffe102 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe102 <= 1'b0;
		else if  (ena == 1'b1)   dffe102 <= w302w[0];
	// synopsys translate_off
	initial
		dffe103 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe103 <= 1'b0;
		else if  (ena == 1'b1)   dffe103 <= w163w[0];
	// synopsys translate_off
	initial
		dffe104 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe104 <= 1'b0;
		else if  (ena == 1'b1)   dffe104 <= w346w[0];
	// synopsys translate_off
	initial
		dffe105 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe105 <= 1'b0;
		else if  (ena == 1'b1)   dffe105 <= wire_sft546a_out[12];
	// synopsys translate_off
	initial
		dffe106 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe106 <= 1'b0;
		else if  (ena == 1'b1)   dffe106 <= wire_sft551a_out[8];
	// synopsys translate_off
	initial
		dffe107 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe107 <= 1'b0;
		else if  (ena == 1'b1)   dffe107 <= w229w[0];
	// synopsys translate_off
	initial
		dffe108 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe108 <= 1'b0;
		else if  (ena == 1'b1)   dffe108 <= w196w[0];
	// synopsys translate_off
	initial
		dffe109 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe109 <= 1'b0;
		else if  (ena == 1'b1)   dffe109 <= w266w[0];
	// synopsys translate_off
	initial
		dffe11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe11 <= 1'b0;
		else if  (ena == 1'b1)   dffe11 <= w25w[0];
	// synopsys translate_off
	initial
		dffe110 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe110 <= 1'b0;
		else if  (ena == 1'b1)   dffe110 <= wire_sft556a_out[4];
	// synopsys translate_off
	initial
		dffe111 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe111 <= 1'b0;
		else if  (ena == 1'b1)   dffe111 <= w306w[0];
	// synopsys translate_off
	initial
		dffe112 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe112 <= 1'b0;
		else if  (ena == 1'b1)   dffe112 <= w166w[0];
	// synopsys translate_off
	initial
		dffe113 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe113 <= 1'b0;
		else if  (ena == 1'b1)   dffe113 <= w349w[0];
	// synopsys translate_off
	initial
		dffe114 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe114 <= 1'b0;
		else if  (ena == 1'b1)   dffe114 <= wire_sft561a_out[0];
	// synopsys translate_off
	initial
		dffe115 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe115 <= 1'b0;
		else if  (ena == 1'b1)   dffe115 <= w396w[0];
	// synopsys translate_off
	initial
		dffe116 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe116 <= 1'b0;
		else if  (ena == 1'b1)   dffe116 <= w142w[0];
	// synopsys translate_off
	initial
		dffe117 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe117 <= 1'b0;
		else if  (ena == 1'b1)   dffe117 <= wire_sft546a_out[13];
	// synopsys translate_off
	initial
		dffe118 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe118 <= 1'b0;
		else if  (ena == 1'b1)   dffe118 <= wire_sft551a_out[9];
	// synopsys translate_off
	initial
		dffe119 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe119 <= 1'b0;
		else if  (ena == 1'b1)   dffe119 <= w269w[0];
	// synopsys translate_off
	initial
		dffe12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe12 <= 1'b0;
		else if  (ena == 1'b1)   dffe12 <= dffe11;
	// synopsys translate_off
	initial
		dffe120 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe120 <= 1'b0;
		else if  (ena == 1'b1)   dffe120 <= w233w[0];
	// synopsys translate_off
	initial
		dffe121 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe121 <= 1'b0;
		else if  (ena == 1'b1)   dffe121 <= w310w[0];
	// synopsys translate_off
	initial
		dffe122 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe122 <= 1'b0;
		else if  (ena == 1'b1)   dffe122 <= wire_sft556a_out[5];
	// synopsys translate_off
	initial
		dffe123 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe123 <= 1'b0;
		else if  (ena == 1'b1)   dffe123 <= w352w[0];
	// synopsys translate_off
	initial
		dffe124 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe124 <= 1'b0;
		else if  (ena == 1'b1)   dffe124 <= w199w[0];
	// synopsys translate_off
	initial
		dffe125 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe125 <= 1'b0;
		else if  (ena == 1'b1)   dffe125 <= w400w[0];
	// synopsys translate_off
	initial
		dffe126 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe126 <= 1'b0;
		else if  (ena == 1'b1)   dffe126 <= wire_sft561a_out[1];
	// synopsys translate_off
	initial
		dffe127 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe127 <= 1'b0;
		else if  (ena == 1'b1)   dffe127 <= w450w[0];
	// synopsys translate_off
	initial
		dffe128 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe128 <= 1'b0;
		else if  (ena == 1'b1)   dffe128 <= w171w[0];
	// synopsys translate_off
	initial
		dffe129 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe129 <= 1'b0;
		else if  (ena == 1'b1)   dffe129 <= wire_sft546a_out[14];
	// synopsys translate_off
	initial
		dffe13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe13 <= 1'b0;
		else if  (ena == 1'b1)   dffe13 <= w33w[0];
	// synopsys translate_off
	initial
		dffe130 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe130 <= 1'b0;
		else if  (ena == 1'b1)   dffe130 <= wire_sft551a_out[10];
	// synopsys translate_off
	initial
		dffe131 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe131 <= 1'b0;
		else if  (ena == 1'b1)   dffe131 <= w273w[0];
	// synopsys translate_off
	initial
		dffe132 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe132 <= 1'b0;
		else if  (ena == 1'b1)   dffe132 <= w236w[0];
	// synopsys translate_off
	initial
		dffe133 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe133 <= 1'b0;
		else if  (ena == 1'b1)   dffe133 <= w313w[0];
	// synopsys translate_off
	initial
		dffe134 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe134 <= 1'b0;
		else if  (ena == 1'b1)   dffe134 <= wire_sft556a_out[6];
	// synopsys translate_off
	initial
		dffe135 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe135 <= 1'b0;
		else if  (ena == 1'b1)   dffe135 <= w356w[0];
	// synopsys translate_off
	initial
		dffe136 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe136 <= 1'b0;
		else if  (ena == 1'b1)   dffe136 <= w202w[0];
	// synopsys translate_off
	initial
		dffe137 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe137 <= 1'b0;
		else if  (ena == 1'b1)   dffe137 <= w403w[0];
	// synopsys translate_off
	initial
		dffe138 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe138 <= 1'b0;
		else if  (ena == 1'b1)   dffe138 <= wire_sft561a_out[2];
	// synopsys translate_off
	initial
		dffe139 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe139 <= 1'b0;
		else if  (ena == 1'b1)   dffe139 <= w454w[0];
	// synopsys translate_off
	initial
		dffe14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe14 <= 1'b0;
		else if  (ena == 1'b1)   dffe14 <= dffe13;
	// synopsys translate_off
	initial
		dffe140 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe140 <= 1'b0;
		else if  (ena == 1'b1)   dffe140 <= w175w[0];
	// synopsys translate_off
	initial
		dffe141 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe141 <= 1'b0;
		else if  (ena == 1'b1)   dffe141 <= w508w[0];
	// synopsys translate_off
	initial
		dffe142 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe142 <= 1'b0;
		else if  (ena == 1'b1)   dffe142 <= wire_sft546a_out[15];
	// synopsys translate_off
	initial
		dffe143 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe143 <= 1'b0;
		else if  (ena == 1'b1)   dffe143 <= wire_sft551a_out[11];
	// synopsys translate_off
	initial
		dffe144 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe144 <= 1'b0;
		else if  (ena == 1'b1)   dffe144 <= w316w[0];
	// synopsys translate_off
	initial
		dffe145 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe145 <= 1'b0;
		else if  (ena == 1'b1)   dffe145 <= w277w[0];
	// synopsys translate_off
	initial
		dffe146 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe146 <= 1'b0;
		else if  (ena == 1'b1)   dffe146 <= w360w[0];
	// synopsys translate_off
	initial
		dffe147 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe147 <= 1'b0;
		else if  (ena == 1'b1)   dffe147 <= wire_sft556a_out[7];
	// synopsys translate_off
	initial
		dffe148 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe148 <= 1'b0;
		else if  (ena == 1'b1)   dffe148 <= w406w[0];
	// synopsys translate_off
	initial
		dffe149 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe149 <= 1'b0;
		else if  (ena == 1'b1)   dffe149 <= w239w[0];
	// synopsys translate_off
	initial
		dffe15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe15 <= 1'b0;
		else if  (ena == 1'b1)   dffe15 <= wire_sft546a_out[2];
	// synopsys translate_off
	initial
		dffe150 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe150 <= 1'b0;
		else if  (ena == 1'b1)   dffe150 <= w458w[0];
	// synopsys translate_off
	initial
		dffe151 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe151 <= 1'b0;
		else if  (ena == 1'b1)   dffe151 <= wire_sft561a_out[3];
	// synopsys translate_off
	initial
		dffe152 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe152 <= 1'b0;
		else if  (ena == 1'b1)   dffe152 <= w511w[0];
	// synopsys translate_off
	initial
		dffe153 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe153 <= 1'b0;
		else if  (ena == 1'b1)   dffe153 <= w207w[0];
	// synopsys translate_off
	initial
		dffe154 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe154 <= 1'b0;
		else if  (ena == 1'b1)   dffe154 <= w569w[0];
	// synopsys translate_off
	initial
		dffe155 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe155 <= 1'b0;
		else if  (ena == 1'b1)   dffe155 <= wire_sft546a_out[16];
	// synopsys translate_off
	initial
		dffe156 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe156 <= 1'b0;
		else if  (ena == 1'b1)   dffe156 <= wire_sft551a_out[12];
	// synopsys translate_off
	initial
		dffe157 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe157 <= 1'b0;
		else if  (ena == 1'b1)   dffe157 <= w320w[0];
	// synopsys translate_off
	initial
		dffe158 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe158 <= 1'b0;
		else if  (ena == 1'b1)   dffe158 <= w280w[0];
	// synopsys translate_off
	initial
		dffe159 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe159 <= 1'b0;
		else if  (ena == 1'b1)   dffe159 <= wire_sft566a_out[0];
	// synopsys translate_off
	initial
		dffe16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe16 <= 1'b0;
		else if  (ena == 1'b1)   dffe16 <= w29w[0];
	// synopsys translate_off
	initial
		dffe160 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe160 <= 1'b0;
		else if  (ena == 1'b1)   dffe160 <= wire_sft556a_out[8];
	// synopsys translate_off
	initial
		dffe161 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe161 <= 1'b0;
		else if  (ena == 1'b1)   dffe161 <= w410w[0];
	// synopsys translate_off
	initial
		dffe162 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe162 <= 1'b0;
		else if  (ena == 1'b1)   dffe162 <= w242w[0];
	// synopsys translate_off
	initial
		dffe163 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe163 <= 1'b0;
		else if  (ena == 1'b1)   dffe163 <= w461w[0];
	// synopsys translate_off
	initial
		dffe164 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe164 <= 1'b0;
		else if  (ena == 1'b1)   dffe164 <= wire_sft561a_out[4];
	// synopsys translate_off
	initial
		dffe165 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe165 <= 1'b0;
		else if  (ena == 1'b1)   dffe165 <= w515w[0];
	// synopsys translate_off
	initial
		dffe166 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe166 <= 1'b0;
		else if  (ena == 1'b1)   dffe166 <= w211w[0];
	// synopsys translate_off
	initial
		dffe167 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe167 <= 1'b0;
		else if  (ena == 1'b1)   dffe167 <= w572w[0];
	// synopsys translate_off
	initial
		dffe168 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe168 <= 1'b0;
		else if  (ena == 1'b1)   dffe168 <= wire_sft546a_out[17];
	// synopsys translate_off
	initial
		dffe169 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe169 <= 1'b0;
		else if  (ena == 1'b1)   dffe169 <= wire_sft551a_out[13];
	// synopsys translate_off
	initial
		dffe17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe17 <= 1'b0;
		else if  (ena == 1'b1)   dffe17 <= dffe16;
	// synopsys translate_off
	initial
		dffe170 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe170 <= 1'b0;
		else if  (ena == 1'b1)   dffe170 <= w366w[0];
	// synopsys translate_off
	initial
		dffe171 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe171 <= 1'b0;
		else if  (ena == 1'b1)   dffe171 <= w324w[0];
	// synopsys translate_off
	initial
		dffe172 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe172 <= 1'b0;
		else if  (ena == 1'b1)   dffe172 <= wire_sft566a_out[1];
	// synopsys translate_off
	initial
		dffe173 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe173 <= 1'b0;
		else if  (ena == 1'b1)   dffe173 <= wire_sft556a_out[9];
	// synopsys translate_off
	initial
		dffe174 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe174 <= 1'b0;
		else if  (ena == 1'b1)   dffe174 <= w464w[0];
	// synopsys translate_off
	initial
		dffe175 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe175 <= 1'b0;
		else if  (ena == 1'b1)   dffe175 <= w283w[0];
	// synopsys translate_off
	initial
		dffe176 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe176 <= 1'b0;
		else if  (ena == 1'b1)   dffe176 <= w519w[0];
	// synopsys translate_off
	initial
		dffe177 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe177 <= 1'b0;
		else if  (ena == 1'b1)   dffe177 <= wire_sft561a_out[5];
	// synopsys translate_off
	initial
		dffe178 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe178 <= 1'b0;
		else if  (ena == 1'b1)   dffe178 <= w575w[0];
	// synopsys translate_off
	initial
		dffe179 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe179 <= 1'b0;
		else if  (ena == 1'b1)   dffe179 <= w247w[0];
	// synopsys translate_off
	initial
		dffe18 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe18 <= 1'b0;
		else if  (ena == 1'b1)   dffe18 <= w36w[0];
	// synopsys translate_off
	initial
		dffe180 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe180 <= 1'b0;
		else if  (ena == 1'b1)   dffe180 <= w637w[0];
	// synopsys translate_off
	initial
		dffe181 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe181 <= 1'b0;
		else if  (ena == 1'b1)   dffe181 <= wire_sft546a_out[18];
	// synopsys translate_off
	initial
		dffe182 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe182 <= 1'b0;
		else if  (ena == 1'b1)   dffe182 <= wire_sft551a_out[14];
	// synopsys translate_off
	initial
		dffe183 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe183 <= 1'b0;
		else if  (ena == 1'b1)   dffe183 <= w370w[0];
	// synopsys translate_off
	initial
		dffe184 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe184 <= 1'b0;
		else if  (ena == 1'b1)   dffe184 <= w327w[0];
	// synopsys translate_off
	initial
		dffe185 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe185 <= 1'b0;
		else if  (ena == 1'b1)   dffe185 <= wire_sft566a_out[2];
	// synopsys translate_off
	initial
		dffe186 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe186 <= 1'b0;
		else if  (ena == 1'b1)   dffe186 <= wire_sft556a_out[10];
	// synopsys translate_off
	initial
		dffe187 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe187 <= 1'b0;
		else if  (ena == 1'b1)   dffe187 <= w468w[0];
	// synopsys translate_off
	initial
		dffe188 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe188 <= 1'b0;
		else if  (ena == 1'b1)   dffe188 <= w286w[0];
	// synopsys translate_off
	initial
		dffe189 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe189 <= 1'b0;
		else if  (ena == 1'b1)   dffe189 <= w522w[0];
	// synopsys translate_off
	initial
		dffe19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe19 <= 1'b0;
		else if  (ena == 1'b1)   dffe19 <= dffe18;
	// synopsys translate_off
	initial
		dffe190 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe190 <= 1'b0;
		else if  (ena == 1'b1)   dffe190 <= wire_sft561a_out[6];
	// synopsys translate_off
	initial
		dffe191 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe191 <= 1'b0;
		else if  (ena == 1'b1)   dffe191 <= w579w[0];
	// synopsys translate_off
	initial
		dffe192 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe192 <= 1'b0;
		else if  (ena == 1'b1)   dffe192 <= w251w[0];
	// synopsys translate_off
	initial
		dffe193 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe193 <= 1'b0;
		else if  (ena == 1'b1)   dffe193 <= w640w[0];
	// synopsys translate_off
	initial
		dffe194 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe194 <= 1'b0;
		else if  (ena == 1'b1)   dffe194 <= wire_sft546a_out[19];
	// synopsys translate_off
	initial
		dffe195 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe195 <= 1'b0;
		else if  (ena == 1'b1)   dffe195 <= wire_sft551a_out[15];
	// synopsys translate_off
	initial
		dffe196 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe196 <= 1'b0;
		else if  (ena == 1'b1)   dffe196 <= w420w[0];
	// synopsys translate_off
	initial
		dffe197 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe197 <= 1'b0;
		else if  (ena == 1'b1)   dffe197 <= w374w[0];
	// synopsys translate_off
	initial
		dffe198 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe198 <= 1'b0;
		else if  (ena == 1'b1)   dffe198 <= wire_sft566a_out[3];
	// synopsys translate_off
	initial
		dffe199 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe199 <= 1'b0;
		else if  (ena == 1'b1)   dffe199 <= wire_sft556a_out[11];
	// synopsys translate_off
	initial
		dffe1a0 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe1a0 <= 1'b0;
		else if  (ena == 1'b1)   dffe1a0 <= data[0];
	// synopsys translate_off
	initial
		dffe1a1 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe1a1 <= 1'b0;
		else if  (ena == 1'b1)   dffe1a1 <= dffe1a0[0:0];
	// synopsys translate_off
	initial
		dffe1a2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe1a2 <= 1'b0;
		else if  (ena == 1'b1)   dffe1a2 <= dffe1a1[0:0];
	// synopsys translate_off
	initial
		dffe2 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe2 <= 1'b0;
		else if  (ena == 1'b1)   dffe2 <= dffe4;
	// synopsys translate_off
	initial
		dffe20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe20 <= 1'b0;
		else if  (ena == 1'b1)   dffe20 <= w49w[0];
	// synopsys translate_off
	initial
		dffe200 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe200 <= 1'b0;
		else if  (ena == 1'b1)   dffe200 <= w525w[0];
	// synopsys translate_off
	initial
		dffe201 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe201 <= 1'b0;
		else if  (ena == 1'b1)   dffe201 <= w330w[0];
	// synopsys translate_off
	initial
		dffe202 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe202 <= 1'b0;
		else if  (ena == 1'b1)   dffe202 <= w583w[0];
	// synopsys translate_off
	initial
		dffe203 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe203 <= 1'b0;
		else if  (ena == 1'b1)   dffe203 <= wire_sft561a_out[7];
	// synopsys translate_off
	initial
		dffe204 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe204 <= 1'b0;
		else if  (ena == 1'b1)   dffe204 <= w643w[0];
	// synopsys translate_off
	initial
		dffe205 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe205 <= 1'b0;
		else if  (ena == 1'b1)   dffe205 <= w291w[0];
	// synopsys translate_off
	initial
		dffe206 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe206 <= 1'b0;
		else if  (ena == 1'b1)   dffe206 <= w709w[0];
	// synopsys translate_off
	initial
		dffe207 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe207 <= 1'b0;
		else if  (ena == 1'b1)   dffe207 <= wire_sft546a_out[20];
	// synopsys translate_off
	initial
		dffe208 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe208 <= 1'b0;
		else if  (ena == 1'b1)   dffe208 <= wire_sft551a_out[16];
	// synopsys translate_off
	initial
		dffe209 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe209 <= 1'b0;
		else if  (ena == 1'b1)   dffe209 <= w424w[0];
	// synopsys translate_off
	initial
		dffe21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe21 <= 1'b0;
		else if  (ena == 1'b1)   dffe21 <= dffe20;
	// synopsys translate_off
	initial
		dffe210 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe210 <= 1'b0;
		else if  (ena == 1'b1)   dffe210 <= w377w[0];
	// synopsys translate_off
	initial
		dffe211 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe211 <= 1'b0;
		else if  (ena == 1'b1)   dffe211 <= wire_sft566a_out[4];
	// synopsys translate_off
	initial
		dffe212 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe212 <= 1'b0;
		else if  (ena == 1'b1)   dffe212 <= wire_sft556a_out[12];
	// synopsys translate_off
	initial
		dffe213 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe213 <= 1'b0;
		else if  (ena == 1'b1)   dffe213 <= w529w[0];
	// synopsys translate_off
	initial
		dffe214 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe214 <= 1'b0;
		else if  (ena == 1'b1)   dffe214 <= w333w[0];
	// synopsys translate_off
	initial
		dffe215 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe215 <= 1'b0;
		else if  (ena == 1'b1)   dffe215 <= wire_sft571a_out[0];
	// synopsys translate_off
	initial
		dffe216 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe216 <= 1'b0;
		else if  (ena == 1'b1)   dffe216 <= wire_sft561a_out[8];
	// synopsys translate_off
	initial
		dffe217 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe217 <= 1'b0;
		else if  (ena == 1'b1)   dffe217 <= w647w[0];
	// synopsys translate_off
	initial
		dffe218 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe218 <= 1'b0;
		else if  (ena == 1'b1)   dffe218 <= w295w[0];
	// synopsys translate_off
	initial
		dffe219 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe219 <= 1'b0;
		else if  (ena == 1'b1)   dffe219 <= w712w[0];
	// synopsys translate_off
	initial
		dffe22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe22 <= 1'b0;
		else if  (ena == 1'b1)   dffe22 <= wire_sft546a_out[3];
	// synopsys translate_off
	initial
		dffe220 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe220 <= 1'b0;
		else if  (ena == 1'b1)   dffe220 <= wire_sft546a_out[21];
	// synopsys translate_off
	initial
		dffe221 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe221 <= 1'b0;
		else if  (ena == 1'b1)   dffe221 <= wire_sft551a_out[17];
	// synopsys translate_off
	initial
		dffe222 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe222 <= 1'b0;
		else if  (ena == 1'b1)   dffe222 <= w478w[0];
	// synopsys translate_off
	initial
		dffe223 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe223 <= 1'b0;
		else if  (ena == 1'b1)   dffe223 <= w428w[0];
	// synopsys translate_off
	initial
		dffe224 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe224 <= 1'b0;
		else if  (ena == 1'b1)   dffe224 <= wire_sft566a_out[5];
	// synopsys translate_off
	initial
		dffe225 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe225 <= 1'b0;
		else if  (ena == 1'b1)   dffe225 <= wire_sft556a_out[13];
	// synopsys translate_off
	initial
		dffe226 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe226 <= 1'b0;
		else if  (ena == 1'b1)   dffe226 <= w589w[0];
	// synopsys translate_off
	initial
		dffe227 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe227 <= 1'b0;
		else if  (ena == 1'b1)   dffe227 <= w380w[0];
	// synopsys translate_off
	initial
		dffe228 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe228 <= 1'b0;
		else if  (ena == 1'b1)   dffe228 <= wire_sft571a_out[1];
	// synopsys translate_off
	initial
		dffe229 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe229 <= 1'b0;
		else if  (ena == 1'b1)   dffe229 <= wire_sft561a_out[9];
	// synopsys translate_off
	initial
		dffe23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe23 <= 1'b0;
		else if  (ena == 1'b1)   dffe23 <= w41w[0];
	// synopsys translate_off
	initial
		dffe230 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe230 <= 1'b0;
		else if  (ena == 1'b1)   dffe230 <= w715w[0];
	// synopsys translate_off
	initial
		dffe231 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe231 <= 1'b0;
		else if  (ena == 1'b1)   dffe231 <= w338w[0];
	// synopsys translate_off
	initial
		dffe232 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe232 <= 1'b0;
		else if  (ena == 1'b1)   dffe232 <= w784w[0];
	// synopsys translate_off
	initial
		dffe233 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe233 <= 1'b0;
		else if  (ena == 1'b1)   dffe233 <= wire_sft546a_out[22];
	// synopsys translate_off
	initial
		dffe234 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe234 <= 1'b0;
		else if  (ena == 1'b1)   dffe234 <= wire_sft551a_out[18];
	// synopsys translate_off
	initial
		dffe235 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe235 <= 1'b0;
		else if  (ena == 1'b1)   dffe235 <= w482w[0];
	// synopsys translate_off
	initial
		dffe236 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe236 <= 1'b0;
		else if  (ena == 1'b1)   dffe236 <= w431w[0];
	// synopsys translate_off
	initial
		dffe237 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe237 <= 1'b0;
		else if  (ena == 1'b1)   dffe237 <= wire_sft566a_out[6];
	// synopsys translate_off
	initial
		dffe238 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe238 <= 1'b0;
		else if  (ena == 1'b1)   dffe238 <= wire_sft556a_out[14];
	// synopsys translate_off
	initial
		dffe239 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe239 <= 1'b0;
		else if  (ena == 1'b1)   dffe239 <= w593w[0];
	// synopsys translate_off
	initial
		dffe24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe24 <= 1'b0;
		else if  (ena == 1'b1)   dffe24 <= dffe23;
	// synopsys translate_off
	initial
		dffe240 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe240 <= 1'b0;
		else if  (ena == 1'b1)   dffe240 <= w383w[0];
	// synopsys translate_off
	initial
		dffe241 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe241 <= 1'b0;
		else if  (ena == 1'b1)   dffe241 <= wire_sft571a_out[2];
	// synopsys translate_off
	initial
		dffe242 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe242 <= 1'b0;
		else if  (ena == 1'b1)   dffe242 <= wire_sft561a_out[10];
	// synopsys translate_off
	initial
		dffe243 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe243 <= 1'b0;
		else if  (ena == 1'b1)   dffe243 <= w719w[0];
	// synopsys translate_off
	initial
		dffe244 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe244 <= 1'b0;
		else if  (ena == 1'b1)   dffe244 <= w342w[0];
	// synopsys translate_off
	initial
		dffe245 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe245 <= 1'b0;
		else if  (ena == 1'b1)   dffe245 <= w787w[0];
	// synopsys translate_off
	initial
		dffe246 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe246 <= 1'b0;
		else if  (ena == 1'b1)   dffe246 <= wire_sft546a_out[23];
	// synopsys translate_off
	initial
		dffe247 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe247 <= 1'b0;
		else if  (ena == 1'b1)   dffe247 <= wire_sft551a_out[19];
	// synopsys translate_off
	initial
		dffe248 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe248 <= 1'b0;
		else if  (ena == 1'b1)   dffe248 <= w539w[0];
	// synopsys translate_off
	initial
		dffe249 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe249 <= 1'b0;
		else if  (ena == 1'b1)   dffe249 <= w486w[0];
	// synopsys translate_off
	initial
		dffe25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe25 <= 1'b0;
		else if  (ena == 1'b1)   dffe25 <= w52w[0];
	// synopsys translate_off
	initial
		dffe250 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe250 <= 1'b0;
		else if  (ena == 1'b1)   dffe250 <= wire_sft566a_out[7];
	// synopsys translate_off
	initial
		dffe251 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe251 <= 1'b0;
		else if  (ena == 1'b1)   dffe251 <= wire_sft556a_out[15];
	// synopsys translate_off
	initial
		dffe252 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe252 <= 1'b0;
		else if  (ena == 1'b1)   dffe252 <= w657w[0];
	// synopsys translate_off
	initial
		dffe253 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe253 <= 1'b0;
		else if  (ena == 1'b1)   dffe253 <= w434w[0];
	// synopsys translate_off
	initial
		dffe254 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe254 <= 1'b0;
		else if  (ena == 1'b1)   dffe254 <= wire_sft571a_out[3];
	// synopsys translate_off
	initial
		dffe255 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe255 <= 1'b0;
		else if  (ena == 1'b1)   dffe255 <= wire_sft561a_out[11];
	// synopsys translate_off
	initial
		dffe256 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe256 <= 1'b0;
		else if  (ena == 1'b1)   dffe256 <= w790w[0];
	// synopsys translate_off
	initial
		dffe257 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe257 <= 1'b0;
		else if  (ena == 1'b1)   dffe257 <= w388w[0];
	// synopsys translate_off
	initial
		dffe258 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe258 <= 1'b0;
		else if  (ena == 1'b1)   dffe258 <= w862w[0];
	// synopsys translate_off
	initial
		dffe259 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe259 <= 1'b0;
		else if  (ena == 1'b1)   dffe259 <= wire_sft546a_out[24];
	// synopsys translate_off
	initial
		dffe26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe26 <= 1'b0;
		else if  (ena == 1'b1)   dffe26 <= dffe25;
	// synopsys translate_off
	initial
		dffe260 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe260 <= 1'b0;
		else if  (ena == 1'b1)   dffe260 <= wire_sft551a_out[20];
	// synopsys translate_off
	initial
		dffe261 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe261 <= 1'b0;
		else if  (ena == 1'b1)   dffe261 <= w543w[0];
	// synopsys translate_off
	initial
		dffe262 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe262 <= 1'b0;
		else if  (ena == 1'b1)   dffe262 <= w489w[0];
	// synopsys translate_off
	initial
		dffe263 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe263 <= 1'b0;
		else if  (ena == 1'b1)   dffe263 <= wire_sft566a_out[8];
	// synopsys translate_off
	initial
		dffe264 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe264 <= 1'b0;
		else if  (ena == 1'b1)   dffe264 <= wire_sft556a_out[16];
	// synopsys translate_off
	initial
		dffe265 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe265 <= 1'b0;
		else if  (ena == 1'b1)   dffe265 <= w661w[0];
	// synopsys translate_off
	initial
		dffe266 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe266 <= 1'b0;
		else if  (ena == 1'b1)   dffe266 <= w437w[0];
	// synopsys translate_off
	initial
		dffe267 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe267 <= 1'b0;
		else if  (ena == 1'b1)   dffe267 <= wire_sft571a_out[4];
	// synopsys translate_off
	initial
		dffe268 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe268 <= 1'b0;
		else if  (ena == 1'b1)   dffe268 <= wire_sft561a_out[12];
	// synopsys translate_off
	initial
		dffe269 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe269 <= 1'b0;
		else if  (ena == 1'b1)   dffe269 <= w794w[0];
	// synopsys translate_off
	initial
		dffe27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe27 <= 1'b0;
		else if  (ena == 1'b1)   dffe27 <= w68w[0];
	// synopsys translate_off
	initial
		dffe270 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe270 <= 1'b0;
		else if  (ena == 1'b1)   dffe270 <= w392w[0];
	// synopsys translate_off
	initial
		dffe271 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe271 <= 1'b0;
		else if  (ena == 1'b1)   dffe271 <= wire_sft576a_out[0];
	// synopsys translate_off
	initial
		dffe272 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe272 <= 1'b0;
		else if  (ena == 1'b1)   dffe272 <= wire_sft546a_out[25];
	// synopsys translate_off
	initial
		dffe273 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe273 <= 1'b0;
		else if  (ena == 1'b1)   dffe273 <= wire_sft551a_out[21];
	// synopsys translate_off
	initial
		dffe274 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe274 <= 1'b0;
		else if  (ena == 1'b1)   dffe274 <= w603w[0];
	// synopsys translate_off
	initial
		dffe275 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe275 <= 1'b0;
		else if  (ena == 1'b1)   dffe275 <= w547w[0];
	// synopsys translate_off
	initial
		dffe276 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe276 <= 1'b0;
		else if  (ena == 1'b1)   dffe276 <= wire_sft566a_out[9];
	// synopsys translate_off
	initial
		dffe277 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe277 <= 1'b0;
		else if  (ena == 1'b1)   dffe277 <= wire_sft556a_out[17];
	// synopsys translate_off
	initial
		dffe278 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe278 <= 1'b0;
		else if  (ena == 1'b1)   dffe278 <= w729w[0];
	// synopsys translate_off
	initial
		dffe279 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe279 <= 1'b0;
		else if  (ena == 1'b1)   dffe279 <= w492w[0];
	// synopsys translate_off
	initial
		dffe28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe28 <= 1'b0;
		else if  (ena == 1'b1)   dffe28 <= dffe27;
	// synopsys translate_off
	initial
		dffe280 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe280 <= 1'b0;
		else if  (ena == 1'b1)   dffe280 <= wire_sft571a_out[5];
	// synopsys translate_off
	initial
		dffe281 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe281 <= 1'b0;
		else if  (ena == 1'b1)   dffe281 <= wire_sft561a_out[13];
	// synopsys translate_off
	initial
		dffe282 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe282 <= 1'b0;
		else if  (ena == 1'b1)   dffe282 <= w944w[0];
	// synopsys translate_off
	initial
		dffe283 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe283 <= 1'b0;
		else if  (ena == 1'b1)   dffe283 <= w442w[0];
	// synopsys translate_off
	initial
		dffe284 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe284 <= 1'b0;
		else if  (ena == 1'b1)   dffe284 <= wire_sft576a_out[1];
	// synopsys translate_off
	initial
		dffe285 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe285 <= 1'b0;
		else if  (ena == 1'b1)   dffe285 <= wire_sft546a_out[26];
	// synopsys translate_off
	initial
		dffe286 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe286 <= 1'b0;
		else if  (ena == 1'b1)   dffe286 <= wire_sft551a_out[22];
	// synopsys translate_off
	initial
		dffe287 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe287 <= 1'b0;
		else if  (ena == 1'b1)   dffe287 <= w607w[0];
	// synopsys translate_off
	initial
		dffe288 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe288 <= 1'b0;
		else if  (ena == 1'b1)   dffe288 <= w550w[0];
	// synopsys translate_off
	initial
		dffe289 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe289 <= 1'b0;
		else if  (ena == 1'b1)   dffe289 <= wire_sft566a_out[10];
	// synopsys translate_off
	initial
		dffe29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe29 <= 1'b0;
		else if  (ena == 1'b1)   dffe29 <= wire_sft546a_out[4];
	// synopsys translate_off
	initial
		dffe290 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe290 <= 1'b0;
		else if  (ena == 1'b1)   dffe290 <= wire_sft556a_out[18];
	// synopsys translate_off
	initial
		dffe291 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe291 <= 1'b0;
		else if  (ena == 1'b1)   dffe291 <= w733w[0];
	// synopsys translate_off
	initial
		dffe292 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe292 <= 1'b0;
		else if  (ena == 1'b1)   dffe292 <= w495w[0];
	// synopsys translate_off
	initial
		dffe293 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe293 <= 1'b0;
		else if  (ena == 1'b1)   dffe293 <= wire_sft571a_out[6];
	// synopsys translate_off
	initial
		dffe294 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe294 <= 1'b0;
		else if  (ena == 1'b1)   dffe294 <= wire_sft561a_out[14];
	// synopsys translate_off
	initial
		dffe295 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe295 <= 1'b0;
		else if  (ena == 1'b1)   dffe295 <= w947w[0];
	// synopsys translate_off
	initial
		dffe296 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe296 <= 1'b0;
		else if  (ena == 1'b1)   dffe296 <= w446w[0];
	// synopsys translate_off
	initial
		dffe297 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe297 <= 1'b0;
		else if  (ena == 1'b1)   dffe297 <= wire_sft576a_out[2];
	// synopsys translate_off
	initial
		dffe298 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe298 <= 1'b0;
		else if  (ena == 1'b1)   dffe298 <= wire_sft546a_out[27];
	// synopsys translate_off
	initial
		dffe299 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe299 <= 1'b0;
		else if  (ena == 1'b1)   dffe299 <= wire_sft551a_out[23];
	// synopsys translate_off
	initial
		dffe3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe3 <= 1'b0;
		else if  (ena == 1'b1)   dffe3 <= w12w[0];
	// synopsys translate_off
	initial
		dffe30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe30 <= 1'b0;
		else if  (ena == 1'b1)   dffe30 <= w45w[0];
	// synopsys translate_off
	initial
		dffe300 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe300 <= 1'b0;
		else if  (ena == 1'b1)   dffe300 <= w671w[0];
	// synopsys translate_off
	initial
		dffe301 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe301 <= 1'b0;
		else if  (ena == 1'b1)   dffe301 <= w611w[0];
	// synopsys translate_off
	initial
		dffe302 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe302 <= 1'b0;
		else if  (ena == 1'b1)   dffe302 <= wire_sft566a_out[11];
	// synopsys translate_off
	initial
		dffe303 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe303 <= 1'b0;
		else if  (ena == 1'b1)   dffe303 <= wire_sft556a_out[19];
	// synopsys translate_off
	initial
		dffe304 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe304 <= 1'b0;
		else if  (ena == 1'b1)   dffe304 <= w804w[0];
	// synopsys translate_off
	initial
		dffe305 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe305 <= 1'b0;
		else if  (ena == 1'b1)   dffe305 <= w553w[0];
	// synopsys translate_off
	initial
		dffe306 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe306 <= 1'b0;
		else if  (ena == 1'b1)   dffe306 <= wire_sft571a_out[7];
	// synopsys translate_off
	initial
		dffe307 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe307 <= 1'b0;
		else if  (ena == 1'b1)   dffe307 <= wire_sft561a_out[15];
	// synopsys translate_off
	initial
		dffe308 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe308 <= 1'b0;
		else if  (ena == 1'b1)   dffe308 <= w1030w[0];
	// synopsys translate_off
	initial
		dffe309 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe309 <= 1'b0;
		else if  (ena == 1'b1)   dffe309 <= w500w[0];
	// synopsys translate_off
	initial
		dffe31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe31 <= 1'b0;
		else if  (ena == 1'b1)   dffe31 <= dffe30;
	// synopsys translate_off
	initial
		dffe310 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe310 <= 1'b0;
		else if  (ena == 1'b1)   dffe310 <= wire_sft576a_out[3];
	// synopsys translate_off
	initial
		dffe311 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe311 <= 1'b0;
		else if  (ena == 1'b1)   dffe311 <= wire_sft546a_out[28];
	// synopsys translate_off
	initial
		dffe312 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe312 <= 1'b0;
		else if  (ena == 1'b1)   dffe312 <= wire_sft551a_out[24];
	// synopsys translate_off
	initial
		dffe313 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe313 <= 1'b0;
		else if  (ena == 1'b1)   dffe313 <= w675w[0];
	// synopsys translate_off
	initial
		dffe314 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe314 <= 1'b0;
		else if  (ena == 1'b1)   dffe314 <= w614w[0];
	// synopsys translate_off
	initial
		dffe315 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe315 <= 1'b0;
		else if  (ena == 1'b1)   dffe315 <= wire_sft566a_out[12];
	// synopsys translate_off
	initial
		dffe316 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe316 <= 1'b0;
		else if  (ena == 1'b1)   dffe316 <= wire_sft556a_out[20];
	// synopsys translate_off
	initial
		dffe317 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe317 <= 1'b0;
		else if  (ena == 1'b1)   dffe317 <= w808w[0];
	// synopsys translate_off
	initial
		dffe318 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe318 <= 1'b0;
		else if  (ena == 1'b1)   dffe318 <= w556w[0];
	// synopsys translate_off
	initial
		dffe319 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe319 <= 1'b0;
		else if  (ena == 1'b1)   dffe319 <= wire_sft571a_out[8];
	// synopsys translate_off
	initial
		dffe32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe32 <= 1'b0;
		else if  (ena == 1'b1)   dffe32 <= w55w[0];
	// synopsys translate_off
	initial
		dffe320 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe320 <= 1'b0;
		else if  (ena == 1'b1)   dffe320 <= wire_sft561a_out[16];
	// synopsys translate_off
	initial
		dffe321 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe321 <= 1'b0;
		else if  (ena == 1'b1)   dffe321 <= w954w[0];
	// synopsys translate_off
	initial
		dffe322 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe322 <= 1'b0;
		else if  (ena == 1'b1)   dffe322 <= w504w[0];
	// synopsys translate_off
	initial
		dffe323 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe323 <= 1'b0;
		else if  (ena == 1'b1)   dffe323 <= w1033w[0];
	// synopsys translate_off
	initial
		dffe324 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe324 <= 1'b0;
		else if  (ena == 1'b1)   dffe324 <= wire_sft546a_out[29];
	// synopsys translate_off
	initial
		dffe325 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe325 <= 1'b0;
		else if  (ena == 1'b1)   dffe325 <= wire_sft551a_out[25];
	// synopsys translate_off
	initial
		dffe326 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe326 <= 1'b0;
		else if  (ena == 1'b1)   dffe326 <= w743w[0];
	// synopsys translate_off
	initial
		dffe327 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe327 <= 1'b0;
		else if  (ena == 1'b1)   dffe327 <= w679w[0];
	// synopsys translate_off
	initial
		dffe328 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe328 <= 1'b0;
		else if  (ena == 1'b1)   dffe328 <= wire_sft566a_out[13];
	// synopsys translate_off
	initial
		dffe329 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe329 <= 1'b0;
		else if  (ena == 1'b1)   dffe329 <= wire_sft556a_out[21];
	// synopsys translate_off
	initial
		dffe33 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe33 <= 1'b0;
		else if  (ena == 1'b1)   dffe33 <= dffe32;
	// synopsys translate_off
	initial
		dffe330 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe330 <= 1'b0;
		else if  (ena == 1'b1)   dffe330 <= w958w[0];
	// synopsys translate_off
	initial
		dffe331 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe331 <= 1'b0;
		else if  (ena == 1'b1)   dffe331 <= w617w[0];
	// synopsys translate_off
	initial
		dffe332 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe332 <= 1'b0;
		else if  (ena == 1'b1)   dffe332 <= wire_sft571a_out[9];
	// synopsys translate_off
	initial
		dffe333 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe333 <= 1'b0;
		else if  (ena == 1'b1)   dffe333 <= wire_sft561a_out[17];
	// synopsys translate_off
	initial
		dffe334 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe334 <= 1'b0;
		else if  (ena == 1'b1)   dffe334 <= w1036w[0];
	// synopsys translate_off
	initial
		dffe335 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe335 <= 1'b0;
		else if  (ena == 1'b1)   dffe335 <= w561w[0];
	// synopsys translate_off
	initial
		dffe336 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe336 <= 1'b0;
		else if  (ena == 1'b1)   dffe336 <= w1119w[0];
	// synopsys translate_off
	initial
		dffe337 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe337 <= 1'b0;
		else if  (ena == 1'b1)   dffe337 <= wire_sft546a_out[30];
	// synopsys translate_off
	initial
		dffe338 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe338 <= 1'b0;
		else if  (ena == 1'b1)   dffe338 <= wire_sft551a_out[26];
	// synopsys translate_off
	initial
		dffe339 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe339 <= 1'b0;
		else if  (ena == 1'b1)   dffe339 <= w747w[0];
	// synopsys translate_off
	initial
		dffe34 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe34 <= 1'b0;
		else if  (ena == 1'b1)   dffe34 <= wire_sft551a_out[0];
	// synopsys translate_off
	initial
		dffe340 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe340 <= 1'b0;
		else if  (ena == 1'b1)   dffe340 <= w682w[0];
	// synopsys translate_off
	initial
		dffe341 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe341 <= 1'b0;
		else if  (ena == 1'b1)   dffe341 <= wire_sft566a_out[14];
	// synopsys translate_off
	initial
		dffe342 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe342 <= 1'b0;
		else if  (ena == 1'b1)   dffe342 <= wire_sft556a_out[22];
	// synopsys translate_off
	initial
		dffe343 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe343 <= 1'b0;
		else if  (ena == 1'b1)   dffe343 <= w961w[0];
	// synopsys translate_off
	initial
		dffe344 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe344 <= 1'b0;
		else if  (ena == 1'b1)   dffe344 <= w620w[0];
	// synopsys translate_off
	initial
		dffe345 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe345 <= 1'b0;
		else if  (ena == 1'b1)   dffe345 <= wire_sft571a_out[10];
	// synopsys translate_off
	initial
		dffe346 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe346 <= 1'b0;
		else if  (ena == 1'b1)   dffe346 <= wire_sft561a_out[18];
	// synopsys translate_off
	initial
		dffe347 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe347 <= 1'b0;
		else if  (ena == 1'b1)   dffe347 <= w1040w[0];
	// synopsys translate_off
	initial
		dffe348 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe348 <= 1'b0;
		else if  (ena == 1'b1)   dffe348 <= w565w[0];
	// synopsys translate_off
	initial
		dffe349 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe349 <= 1'b0;
		else if  (ena == 1'b1)   dffe349 <= w1122w[0];
	// synopsys translate_off
	initial
		dffe35 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe35 <= 1'b0;
		else if  (ena == 1'b1)   dffe35 <= w90w[0];
	// synopsys translate_off
	initial
		dffe350 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe350 <= 1'b0;
		else if  (ena == 1'b1)   dffe350 <= wire_sft546a_out[31];
	// synopsys translate_off
	initial
		dffe351 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe351 <= 1'b0;
		else if  (ena == 1'b1)   dffe351 <= wire_sft551a_out[27];
	// synopsys translate_off
	initial
		dffe352 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe352 <= 1'b0;
		else if  (ena == 1'b1)   dffe352 <= w818w[0];
	// synopsys translate_off
	initial
		dffe353 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe353 <= 1'b0;
		else if  (ena == 1'b1)   dffe353 <= w751w[0];
	// synopsys translate_off
	initial
		dffe354 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe354 <= 1'b0;
		else if  (ena == 1'b1)   dffe354 <= wire_sft566a_out[15];
	// synopsys translate_off
	initial
		dffe355 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe355 <= 1'b0;
		else if  (ena == 1'b1)   dffe355 <= wire_sft556a_out[23];
	// synopsys translate_off
	initial
		dffe356 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe356 <= 1'b0;
		else if  (ena == 1'b1)   dffe356 <= w1044w[0];
	// synopsys translate_off
	initial
		dffe357 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe357 <= 1'b0;
		else if  (ena == 1'b1)   dffe357 <= w685w[0];
	// synopsys translate_off
	initial
		dffe358 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe358 <= 1'b0;
		else if  (ena == 1'b1)   dffe358 <= wire_sft571a_out[11];
	// synopsys translate_off
	initial
		dffe359 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe359 <= 1'b0;
		else if  (ena == 1'b1)   dffe359 <= wire_sft561a_out[19];
	// synopsys translate_off
	initial
		dffe36 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe36 <= 1'b0;
		else if  (ena == 1'b1)   dffe36 <= w71w[0];
	// synopsys translate_off
	initial
		dffe360 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe360 <= 1'b0;
		else if  (ena == 1'b1)   dffe360 <= w1125w[0];
	// synopsys translate_off
	initial
		dffe361 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe361 <= 1'b0;
		else if  (ena == 1'b1)   dffe361 <= w625w[0];
	// synopsys translate_off
	initial
		dffe362 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe362 <= 1'b0;
		else if  (ena == 1'b1)   dffe362 <= w1211w[0];
	// synopsys translate_off
	initial
		dffe363 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe363 <= 1'b0;
		else if  (ena == 1'b1)   dffe363 <= wire_sft546a_out[32];
	// synopsys translate_off
	initial
		dffe364 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe364 <= 1'b0;
		else if  (ena == 1'b1)   dffe364 <= wire_sft551a_out[28];
	// synopsys translate_off
	initial
		dffe365 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe365 <= 1'b0;
		else if  (ena == 1'b1)   dffe365 <= w822w[0];
	// synopsys translate_off
	initial
		dffe366 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe366 <= 1'b0;
		else if  (ena == 1'b1)   dffe366 <= w754w[0];
	// synopsys translate_off
	initial
		dffe367 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe367 <= 1'b0;
		else if  (ena == 1'b1)   dffe367 <= wire_sft566a_out[16];
	// synopsys translate_off
	initial
		dffe368 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe368 <= 1'b0;
		else if  (ena == 1'b1)   dffe368 <= wire_sft556a_out[24];
	// synopsys translate_off
	initial
		dffe369 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe369 <= 1'b0;
		else if  (ena == 1'b1)   dffe369 <= w968w[0];
	// synopsys translate_off
	initial
		dffe37 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe37 <= 1'b0;
		else if  (ena == 1'b1)   dffe37 <= wire_sft546a_out[5];
	// synopsys translate_off
	initial
		dffe370 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe370 <= 1'b0;
		else if  (ena == 1'b1)   dffe370 <= w688w[0];
	// synopsys translate_off
	initial
		dffe371 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe371 <= 1'b0;
		else if  (ena == 1'b1)   dffe371 <= w1047w[0];
	// synopsys translate_off
	initial
		dffe372 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe372 <= 1'b0;
		else if  (ena == 1'b1)   dffe372 <= wire_sft561a_out[20];
	// synopsys translate_off
	initial
		dffe373 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe373 <= 1'b0;
		else if  (ena == 1'b1)   dffe373 <= w1129w[0];
	// synopsys translate_off
	initial
		dffe374 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe374 <= 1'b0;
		else if  (ena == 1'b1)   dffe374 <= w629w[0];
	// synopsys translate_off
	initial
		dffe375 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe375 <= 1'b0;
		else if  (ena == 1'b1)   dffe375 <= w1214w[0];
	// synopsys translate_off
	initial
		dffe376 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe376 <= 1'b0;
		else if  (ena == 1'b1)   dffe376 <= wire_sft546a_out[33];
	// synopsys translate_off
	initial
		dffe377 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe377 <= 1'b0;
		else if  (ena == 1'b1)   dffe377 <= wire_sft551a_out[29];
	// synopsys translate_off
	initial
		dffe378 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe378 <= 1'b0;
		else if  (ena == 1'b1)   dffe378 <= w972w[0];
	// synopsys translate_off
	initial
		dffe379 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe379 <= 1'b0;
		else if  (ena == 1'b1)   dffe379 <= w826w[0];
	// synopsys translate_off
	initial
		dffe38 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe38 <= 1'b0;
		else if  (ena == 1'b1)   dffe38 <= w60w[0];
	// synopsys translate_off
	initial
		dffe380 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe380 <= 1'b0;
		else if  (ena == 1'b1)   dffe380 <= wire_sft566a_out[17];
	// synopsys translate_off
	initial
		dffe381 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe381 <= 1'b0;
		else if  (ena == 1'b1)   dffe381 <= wire_sft556a_out[25];
	// synopsys translate_off
	initial
		dffe382 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe382 <= 1'b0;
		else if  (ena == 1'b1)   dffe382 <= w1050w[0];
	// synopsys translate_off
	initial
		dffe383 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe383 <= 1'b0;
		else if  (ena == 1'b1)   dffe383 <= w757w[0];
	// synopsys translate_off
	initial
		dffe384 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe384 <= 1'b0;
		else if  (ena == 1'b1)   dffe384 <= w1133w[0];
	// synopsys translate_off
	initial
		dffe385 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe385 <= 1'b0;
		else if  (ena == 1'b1)   dffe385 <= wire_sft561a_out[21];
	// synopsys translate_off
	initial
		dffe386 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe386 <= 1'b0;
		else if  (ena == 1'b1)   dffe386 <= w1217w[0];
	// synopsys translate_off
	initial
		dffe387 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe387 <= 1'b0;
		else if  (ena == 1'b1)   dffe387 <= w693w[0];
	// synopsys translate_off
	initial
		dffe388 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe388 <= 1'b0;
		else if  (ena == 1'b1)   dffe388 <= (~ w1316w[0]);
	// synopsys translate_off
	initial
		dffe389 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe389 <= 1'b0;
		else if  (ena == 1'b1)   dffe389 <= wire_sft546a_out[34];
	// synopsys translate_off
	initial
		dffe39 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe39 <= 1'b0;
		else if  (ena == 1'b1)   dffe39 <= dffe38;
	// synopsys translate_off
	initial
		dffe390 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe390 <= 1'b0;
		else if  (ena == 1'b1)   dffe390 <= wire_sft551a_out[30];
	// synopsys translate_off
	initial
		dffe391 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe391 <= 1'b0;
		else if  (ena == 1'b1)   dffe391 <= w975w[0];
	// synopsys translate_off
	initial
		dffe392 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe392 <= 1'b0;
		else if  (ena == 1'b1)   dffe392 <= w829w[0];
	// synopsys translate_off
	initial
		dffe393 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe393 <= 1'b0;
		else if  (ena == 1'b1)   dffe393 <= wire_sft566a_out[18];
	// synopsys translate_off
	initial
		dffe394 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe394 <= 1'b0;
		else if  (ena == 1'b1)   dffe394 <= wire_sft556a_out[26];
	// synopsys translate_off
	initial
		dffe395 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe395 <= 1'b0;
		else if  (ena == 1'b1)   dffe395 <= w1054w[0];
	// synopsys translate_off
	initial
		dffe396 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe396 <= 1'b0;
		else if  (ena == 1'b1)   dffe396 <= w760w[0];
	// synopsys translate_off
	initial
		dffe397 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe397 <= 1'b0;
		else if  (ena == 1'b1)   dffe397 <= w1136w[0];
	// synopsys translate_off
	initial
		dffe398 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe398 <= 1'b0;
		else if  (ena == 1'b1)   dffe398 <= wire_sft561a_out[22];
	// synopsys translate_off
	initial
		dffe399 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe399 <= 1'b0;
		else if  (ena == 1'b1)   dffe399 <= w1221w[0];
	// synopsys translate_off
	initial
		dffe4 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe4 <= 1'b0;
		else if  (ena == 1'b1)   dffe4 <= dffe3;
	// synopsys translate_off
	initial
		dffe40 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe40 <= 1'b0;
		else if  (ena == 1'b1)   dffe40 <= w74w[0];
	// synopsys translate_off
	initial
		dffe400 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe400 <= 1'b0;
		else if  (ena == 1'b1)   dffe400 <= w697w[0];
	// synopsys translate_off
	initial
		dffe401 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe401 <= 1'b0;
		else if  (ena == 1'b1)   dffe401 <= (~ w1320w[0]);
	// synopsys translate_off
	initial
		dffe402 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe402 <= 1'b0;
		else if  (ena == 1'b1)   dffe402 <= wire_sft546a_out[35];
	// synopsys translate_off
	initial
		dffe403 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe403 <= 1'b0;
		else if  (ena == 1'b1)   dffe403 <= wire_sft551a_out[31];
	// synopsys translate_off
	initial
		dffe404 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe404 <= 1'b0;
		else if  (ena == 1'b1)   dffe404 <= w1058w[0];
	// synopsys translate_off
	initial
		dffe405 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe405 <= 1'b0;
		else if  (ena == 1'b1)   dffe405 <= w904w[0];
	// synopsys translate_off
	initial
		dffe406 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe406 <= 1'b0;
		else if  (ena == 1'b1)   dffe406 <= wire_sft566a_out[19];
	// synopsys translate_off
	initial
		dffe407 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe407 <= 1'b0;
		else if  (ena == 1'b1)   dffe407 <= wire_sft556a_out[27];
	// synopsys translate_off
	initial
		dffe408 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe408 <= 1'b0;
		else if  (ena == 1'b1)   dffe408 <= w1139w[0];
	// synopsys translate_off
	initial
		dffe409 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe409 <= 1'b0;
		else if  (ena == 1'b1)   dffe409 <= w832w[0];
	// synopsys translate_off
	initial
		dffe41 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe41 <= 1'b0;
		else if  (ena == 1'b1)   dffe41 <= dffe40;
	// synopsys translate_off
	initial
		dffe410 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe410 <= 1'b0;
		else if  (ena == 1'b1)   dffe410 <= w1225w[0];
	// synopsys translate_off
	initial
		dffe411 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe411 <= 1'b0;
		else if  (ena == 1'b1)   dffe411 <= wire_sft561a_out[23];
	// synopsys translate_off
	initial
		dffe412 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe412 <= 1'b0;
		else if  (ena == 1'b1)   dffe412 <= (~ w1324w[0]);
	// synopsys translate_off
	initial
		dffe413 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe413 <= 1'b0;
		else if  (ena == 1'b1)   dffe413 <= w765w[0];
	// synopsys translate_off
	initial
		dffe414 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe414 <= 1'b0;
		else if  (ena == 1'b1)   dffe414 <= w978w[0];
	// synopsys translate_off
	initial
		dffe415 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe415 <= 1'b0;
		else if  (ena == 1'b1)   dffe415 <= wire_sft546a_out[36];
	// synopsys translate_off
	initial
		dffe416 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe416 <= 1'b0;
		else if  (ena == 1'b1)   dffe416 <= wire_sft551a_out[32];
	// synopsys translate_off
	initial
		dffe417 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe417 <= 1'b0;
		else if  (ena == 1'b1)   dffe417 <= w982w[0];
	// synopsys translate_off
	initial
		dffe418 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe418 <= 1'b0;
		else if  (ena == 1'b1)   dffe418 <= w907w[0];
	// synopsys translate_off
	initial
		dffe419 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe419 <= 1'b0;
		else if  (ena == 1'b1)   dffe419 <= w1061w[0];
	// synopsys translate_off
	initial
		dffe42 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe42 <= 1'b0;
		else if  (ena == 1'b1)   dffe42 <= wire_sft551a_out[1];
	// synopsys translate_off
	initial
		dffe420 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe420 <= 1'b0;
		else if  (ena == 1'b1)   dffe420 <= wire_sft556a_out[28];
	// synopsys translate_off
	initial
		dffe421 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe421 <= 1'b0;
		else if  (ena == 1'b1)   dffe421 <= w1143w[0];
	// synopsys translate_off
	initial
		dffe422 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe422 <= 1'b0;
		else if  (ena == 1'b1)   dffe422 <= w835w[0];
	// synopsys translate_off
	initial
		dffe423 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe423 <= 1'b0;
		else if  (ena == 1'b1)   dffe423 <= w1228w[0];
	// synopsys translate_off
	initial
		dffe424 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe424 <= 1'b0;
		else if  (ena == 1'b1)   dffe424 <= wire_sft561a_out[24];
	// synopsys translate_off
	initial
		dffe425 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe425 <= 1'b0;
		else if  (ena == 1'b1)   dffe425 <= (~ w1329w[0]);
	// synopsys translate_off
	initial
		dffe426 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe426 <= 1'b0;
		else if  (ena == 1'b1)   dffe426 <= w769w[0];
	// synopsys translate_off
	initial
		dffe427 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe427 <= 1'b0;
		else if  (ena == 1'b1)   dffe427 <= wire_sft546a_out[37];
	// synopsys translate_off
	initial
		dffe428 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe428 <= 1'b0;
		else if  (ena == 1'b1)   dffe428 <= wire_sft551a_out[33];
	// synopsys translate_off
	initial
		dffe429 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe429 <= 1'b0;
		else if  (ena == 1'b1)   dffe429 <= w1064w[0];
	// synopsys translate_off
	initial
		dffe43 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe43 <= 1'b0;
		else if  (ena == 1'b1)   dffe43 <= w116w[0];
	// synopsys translate_off
	initial
		dffe430 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe430 <= 1'b0;
		else if  (ena == 1'b1)   dffe430 <= w986w[0];
	// synopsys translate_off
	initial
		dffe431 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe431 <= 1'b0;
		else if  (ena == 1'b1)   dffe431 <= w1147w[0];
	// synopsys translate_off
	initial
		dffe432 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe432 <= 1'b0;
		else if  (ena == 1'b1)   dffe432 <= wire_sft556a_out[29];
	// synopsys translate_off
	initial
		dffe433 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe433 <= 1'b0;
		else if  (ena == 1'b1)   dffe433 <= w1231w[0];
	// synopsys translate_off
	initial
		dffe434 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe434 <= 1'b0;
		else if  (ena == 1'b1)   dffe434 <= w910w[0];
	// synopsys translate_off
	initial
		dffe435 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe435 <= 1'b0;
		else if  (ena == 1'b1)   dffe435 <= (~ w1334w[0]);
	// synopsys translate_off
	initial
		dffe436 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe436 <= 1'b0;
		else if  (ena == 1'b1)   dffe436 <= wire_sft561a_out[25];
	// synopsys translate_off
	initial
		dffe437 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe437 <= 1'b0;
		else if  (ena == 1'b1)   dffe437 <= w840w[0];
	// synopsys translate_off
	initial
		dffe438 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe438 <= 1'b0;
		else if  (ena == 1'b1)   dffe438 <= wire_sft546a_out[38];
	// synopsys translate_off
	initial
		dffe439 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe439 <= 1'b0;
		else if  (ena == 1'b1)   dffe439 <= wire_sft551a_out[34];
	// synopsys translate_off
	initial
		dffe44 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe44 <= 1'b0;
		else if  (ena == 1'b1)   dffe44 <= w94w[0];
	// synopsys translate_off
	initial
		dffe440 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe440 <= 1'b0;
		else if  (ena == 1'b1)   dffe440 <= w1068w[0];
	// synopsys translate_off
	initial
		dffe441 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe441 <= 1'b0;
		else if  (ena == 1'b1)   dffe441 <= w989w[0];
	// synopsys translate_off
	initial
		dffe442 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe442 <= 1'b0;
		else if  (ena == 1'b1)   dffe442 <= w1150w[0];
	// synopsys translate_off
	initial
		dffe443 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe443 <= 1'b0;
		else if  (ena == 1'b1)   dffe443 <= wire_sft556a_out[30];
	// synopsys translate_off
	initial
		dffe444 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe444 <= 1'b0;
		else if  (ena == 1'b1)   dffe444 <= w1235w[0];
	// synopsys translate_off
	initial
		dffe445 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe445 <= 1'b0;
		else if  (ena == 1'b1)   dffe445 <= w913w[0];
	// synopsys translate_off
	initial
		dffe446 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe446 <= 1'b0;
		else if  (ena == 1'b1)   dffe446 <= (~ w1338w[0]);
	// synopsys translate_off
	initial
		dffe447 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe447 <= 1'b0;
		else if  (ena == 1'b1)   dffe447 <= wire_sft561a_out[26];
	// synopsys translate_off
	initial
		dffe448 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe448 <= 1'b0;
		else if  (ena == 1'b1)   dffe448 <= w844w[0];
	// synopsys translate_off
	initial
		dffe449 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe449 <= 1'b0;
		else if  (ena == 1'b1)   dffe449 <= wire_sft546a_out[39];
	// synopsys translate_off
	initial
		dffe45 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe45 <= 1'b0;
		else if  (ena == 1'b1)   dffe45 <= wire_sft546a_out[6];
	// synopsys translate_off
	initial
		dffe450 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe450 <= 1'b0;
		else if  (ena == 1'b1)   dffe450 <= wire_sft551a_out[35];
	// synopsys translate_off
	initial
		dffe451 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe451 <= 1'b0;
		else if  (ena == 1'b1)   dffe451 <= w1153w[0];
	// synopsys translate_off
	initial
		dffe452 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe452 <= 1'b0;
		else if  (ena == 1'b1)   dffe452 <= w1072w[0];
	// synopsys translate_off
	initial
		dffe453 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe453 <= 1'b0;
		else if  (ena == 1'b1)   dffe453 <= w1239w[0];
	// synopsys translate_off
	initial
		dffe454 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe454 <= 1'b0;
		else if  (ena == 1'b1)   dffe454 <= wire_sft556a_out[31];
	// synopsys translate_off
	initial
		dffe455 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe455 <= 1'b0;
		else if  (ena == 1'b1)   dffe455 <= (~ w1342w[0]);
	// synopsys translate_off
	initial
		dffe456 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe456 <= 1'b0;
		else if  (ena == 1'b1)   dffe456 <= w992w[0];
	// synopsys translate_off
	initial
		dffe457 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe457 <= 1'b0;
		else if  (ena == 1'b1)   dffe457 <= w918w[0];
	// synopsys translate_off
	initial
		dffe458 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe458 <= 1'b0;
		else if  (ena == 1'b1)   dffe458 <= wire_sft561a_out[27];
	// synopsys translate_off
	initial
		dffe459 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe459 <= 1'b0;
		else if  (ena == 1'b1)   dffe459 <= wire_sft546a_out[40];
	// synopsys translate_off
	initial
		dffe46 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe46 <= 1'b0;
		else if  (ena == 1'b1)   dffe46 <= w64w[0];
	// synopsys translate_off
	initial
		dffe460 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe460 <= 1'b0;
		else if  (ena == 1'b1)   dffe460 <= w922w[0];
	// synopsys translate_off
	initial
		dffe461 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe461 <= 1'b0;
		else if  (ena == 1'b1)   dffe461 <= dffe460;
	// synopsys translate_off
	initial
		dffe462 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe462 <= 1'b0;
		else if  (ena == 1'b1)   dffe462 <= wire_sft551a_out[36];
	// synopsys translate_off
	initial
		dffe463 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe463 <= 1'b0;
		else if  (ena == 1'b1)   dffe463 <= w1157w[0];
	// synopsys translate_off
	initial
		dffe464 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe464 <= 1'b0;
		else if  (ena == 1'b1)   dffe464 <= w1075w[0];
	// synopsys translate_off
	initial
		dffe465 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe465 <= 1'b0;
		else if  (ena == 1'b1)   dffe465 <= w1242w[0];
	// synopsys translate_off
	initial
		dffe466 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe466 <= 1'b0;
		else if  (ena == 1'b1)   dffe466 <= wire_sft556a_out[32];
	// synopsys translate_off
	initial
		dffe467 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe467 <= 1'b0;
		else if  (ena == 1'b1)   dffe467 <= (~ w1347w[0]);
	// synopsys translate_off
	initial
		dffe468 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe468 <= 1'b0;
		else if  (ena == 1'b1)   dffe468 <= w995w[0];
	// synopsys translate_off
	initial
		dffe469 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe469 <= 1'b0;
		else if  (ena == 1'b1)   dffe469 <= wire_sft546a_out[41];
	// synopsys translate_off
	initial
		dffe47 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe47 <= 1'b0;
		else if  (ena == 1'b1)   dffe47 <= dffe46;
	// synopsys translate_off
	initial
		dffe470 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe470 <= 1'b0;
		else if  (ena == 1'b1)   dffe470 <= w1078w[0];
	// synopsys translate_off
	initial
		dffe471 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe471 <= 1'b0;
		else if  (ena == 1'b1)   dffe471 <= dffe470;
	// synopsys translate_off
	initial
		dffe472 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe472 <= 1'b0;
		else if  (ena == 1'b1)   dffe472 <= wire_sft551a_out[37];
	// synopsys translate_off
	initial
		dffe473 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe473 <= 1'b0;
		else if  (ena == 1'b1)   dffe473 <= w1245w[0];
	// synopsys translate_off
	initial
		dffe474 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe474 <= 1'b0;
		else if  (ena == 1'b1)   dffe474 <= w1161w[0];
	// synopsys translate_off
	initial
		dffe475 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe475 <= 1'b0;
		else if  (ena == 1'b1)   dffe475 <= (~ w1352w[0]);
	// synopsys translate_off
	initial
		dffe476 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe476 <= 1'b0;
		else if  (ena == 1'b1)   dffe476 <= wire_sft556a_out[33];
	// synopsys translate_off
	initial
		dffe477 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe477 <= 1'b0;
		else if  (ena == 1'b1)   dffe477 <= w1000w[0];
	// synopsys translate_off
	initial
		dffe478 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe478 <= 1'b0;
		else if  (ena == 1'b1)   dffe478 <= wire_sft546a_out[42];
	// synopsys translate_off
	initial
		dffe479 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe479 <= 1'b0;
		else if  (ena == 1'b1)   dffe479 <= w1081w[0];
	// synopsys translate_off
	initial
		dffe48 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe48 <= 1'b0;
		else if  (ena == 1'b1)   dffe48 <= w77w[0];
	// synopsys translate_off
	initial
		dffe480 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe480 <= 1'b0;
		else if  (ena == 1'b1)   dffe480 <= dffe479;
	// synopsys translate_off
	initial
		dffe481 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe481 <= 1'b0;
		else if  (ena == 1'b1)   dffe481 <= wire_sft551a_out[38];
	// synopsys translate_off
	initial
		dffe482 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe482 <= 1'b0;
		else if  (ena == 1'b1)   dffe482 <= w1249w[0];
	// synopsys translate_off
	initial
		dffe483 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe483 <= 1'b0;
		else if  (ena == 1'b1)   dffe483 <= w1164w[0];
	// synopsys translate_off
	initial
		dffe484 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe484 <= 1'b0;
		else if  (ena == 1'b1)   dffe484 <= (~ w1356w[0]);
	// synopsys translate_off
	initial
		dffe485 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe485 <= 1'b0;
		else if  (ena == 1'b1)   dffe485 <= wire_sft556a_out[34];
	// synopsys translate_off
	initial
		dffe486 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe486 <= 1'b0;
		else if  (ena == 1'b1)   dffe486 <= w1004w[0];
	// synopsys translate_off
	initial
		dffe487 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe487 <= 1'b0;
		else if  (ena == 1'b1)   dffe487 <= wire_sft546a_out[43];
	// synopsys translate_off
	initial
		dffe488 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe488 <= 1'b0;
		else if  (ena == 1'b1)   dffe488 <= w1167w[0];
	// synopsys translate_off
	initial
		dffe489 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe489 <= 1'b0;
		else if  (ena == 1'b1)   dffe489 <= dffe488;
	// synopsys translate_off
	initial
		dffe49 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe49 <= 1'b0;
		else if  (ena == 1'b1)   dffe49 <= dffe48;
	// synopsys translate_off
	initial
		dffe490 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe490 <= 1'b0;
		else if  (ena == 1'b1)   dffe490 <= wire_sft551a_out[39];
	// synopsys translate_off
	initial
		dffe491 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe491 <= 1'b0;
		else if  (ena == 1'b1)   dffe491 <= (~ w1360w[0]);
	// synopsys translate_off
	initial
		dffe492 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe492 <= 1'b0;
		else if  (ena == 1'b1)   dffe492 <= w1253w[0];
	// synopsys translate_off
	initial
		dffe493 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe493 <= 1'b0;
		else if  (ena == 1'b1)   dffe493 <= w1086w[0];
	// synopsys translate_off
	initial
		dffe494 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe494 <= 1'b0;
		else if  (ena == 1'b1)   dffe494 <= wire_sft556a_out[35];
	// synopsys translate_off
	initial
		dffe495 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe495 <= 1'b0;
		else if  (ena == 1'b1)   dffe495 <= wire_sft546a_out[44];
	// synopsys translate_off
	initial
		dffe496 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe496 <= 1'b0;
		else if  (ena == 1'b1)   dffe496 <= w1090w[0];
	// synopsys translate_off
	initial
		dffe497 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe497 <= 1'b0;
		else if  (ena == 1'b1)   dffe497 <= dffe496;
	// synopsys translate_off
	initial
		dffe498 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe498 <= 1'b0;
		else if  (ena == 1'b1)   dffe498 <= w1170w[0];
	// synopsys translate_off
	initial
		dffe499 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe499 <= 1'b0;
		else if  (ena == 1'b1)   dffe499 <= dffe498;
	// synopsys translate_off
	initial
		dffe5 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe5 <= 1'b0;
		else if  (ena == 1'b1)   dffe5 <= wire_sft546a_out[0];
	// synopsys translate_off
	initial
		dffe50 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe50 <= 1'b0;
		else if  (ena == 1'b1)   dffe50 <= wire_sft551a_out[2];
	// synopsys translate_off
	initial
		dffe500 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe500 <= 1'b0;
		else if  (ena == 1'b1)   dffe500 <= wire_sft551a_out[40];
	// synopsys translate_off
	initial
		dffe501 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe501 <= 1'b0;
		else if  (ena == 1'b1)   dffe501 <= (~ w1365w[0]);
	// synopsys translate_off
	initial
		dffe502 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe502 <= 1'b0;
		else if  (ena == 1'b1)   dffe502 <= w1256w[0];
	// synopsys translate_off
	initial
		dffe503 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe503 <= 1'b0;
		else if  (ena == 1'b1)   dffe503 <= wire_sft546a_out[45];
	// synopsys translate_off
	initial
		dffe504 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe504 <= 1'b0;
		else if  (ena == 1'b1)   dffe504 <= (~ w1370w[0]);
	// synopsys translate_off
	initial
		dffe505 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe505 <= 1'b0;
		else if  (ena == 1'b1)   dffe505 <= dffe504;
	// synopsys translate_off
	initial
		dffe506 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe506 <= 1'b0;
		else if  (ena == 1'b1)   dffe506 <= w1259w[0];
	// synopsys translate_off
	initial
		dffe507 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe507 <= 1'b0;
		else if  (ena == 1'b1)   dffe507 <= dffe506;
	// synopsys translate_off
	initial
		dffe508 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe508 <= 1'b0;
		else if  (ena == 1'b1)   dffe508 <= wire_sft551a_out[41];
	// synopsys translate_off
	initial
		dffe509 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe509 <= 1'b0;
		else if  (ena == 1'b1)   dffe509 <= w1175w[0];
	// synopsys translate_off
	initial
		dffe51 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe51 <= 1'b0;
		else if  (ena == 1'b1)   dffe51 <= w120w[0];
	// synopsys translate_off
	initial
		dffe510 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe510 <= 1'b0;
		else if  (ena == 1'b1)   dffe510 <= wire_sft546a_out[46];
	// synopsys translate_off
	initial
		dffe511 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe511 <= 1'b0;
		else if  (ena == 1'b1)   dffe511 <= (~ w1374w[0]);
	// synopsys translate_off
	initial
		dffe512 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe512 <= 1'b0;
		else if  (ena == 1'b1)   dffe512 <= dffe511;
	// synopsys translate_off
	initial
		dffe513 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe513 <= 1'b0;
		else if  (ena == 1'b1)   dffe513 <= w1262w[0];
	// synopsys translate_off
	initial
		dffe514 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe514 <= 1'b0;
		else if  (ena == 1'b1)   dffe514 <= dffe513;
	// synopsys translate_off
	initial
		dffe515 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe515 <= 1'b0;
		else if  (ena == 1'b1)   dffe515 <= wire_sft551a_out[42];
	// synopsys translate_off
	initial
		dffe516 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe516 <= 1'b0;
		else if  (ena == 1'b1)   dffe516 <= w1179w[0];
	// synopsys translate_off
	initial
		dffe517 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe517 <= 1'b0;
		else if  (ena == 1'b1)   dffe517 <= wire_sft546a_out[47];
	// synopsys translate_off
	initial
		dffe518 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe518 <= 1'b0;
		else if  (ena == 1'b1)   dffe518 <= w1267w[0];
	// synopsys translate_off
	initial
		dffe519 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe519 <= 1'b0;
		else if  (ena == 1'b1)   dffe519 <= dffe518;
	// synopsys translate_off
	initial
		dffe52 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe52 <= 1'b0;
		else if  (ena == 1'b1)   dffe52 <= w97w[0];
	// synopsys translate_off
	initial
		dffe520 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe520 <= 1'b0;
		else if  (ena == 1'b1)   dffe520 <= (~ w1378w[0]);
	// synopsys translate_off
	initial
		dffe521 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe521 <= 1'b0;
		else if  (ena == 1'b1)   dffe521 <= dffe520;
	// synopsys translate_off
	initial
		dffe522 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe522 <= 1'b0;
		else if  (ena == 1'b1)   dffe522 <= wire_sft551a_out[43];
	// synopsys translate_off
	initial
		dffe523 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe523 <= 1'b0;
		else if  (ena == 1'b1)   dffe523 <= wire_sft546a_out[48];
	// synopsys translate_off
	initial
		dffe524 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe524 <= 1'b0;
		else if  (ena == 1'b1)   dffe524 <= w1271w[0];
	// synopsys translate_off
	initial
		dffe525 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe525 <= 1'b0;
		else if  (ena == 1'b1)   dffe525 <= dffe524;
	// synopsys translate_off
	initial
		dffe526 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe526 <= 1'b0;
		else if  (ena == 1'b1)   dffe526 <= (~ w1382w[0]);
	// synopsys translate_off
	initial
		dffe527 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe527 <= 1'b0;
		else if  (ena == 1'b1)   dffe527 <= dffe526;
	// synopsys translate_off
	initial
		dffe528 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe528 <= 1'b0;
		else if  (ena == 1'b1)   dffe528 <= wire_sft546a_out[49];
	// synopsys translate_off
	initial
		dffe529 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe529 <= 1'b0;
		else if  (ena == 1'b1)   dffe529 <= w1388w[0];
	// synopsys translate_off
	initial
		dffe53 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe53 <= 1'b0;
		else if  (ena == 1'b1)   dffe53 <= w146w[0];
	// synopsys translate_off
	initial
		dffe530 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe530 <= 1'b0;
		else if  (ena == 1'b1)   dffe530 <= dffe529;
	// synopsys translate_off
	initial
		dffe531 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe531 <= 1'b0;
		else if  (ena == 1'b1)   dffe531 <= 1'b1;
	// synopsys translate_off
	initial
		dffe532 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe532 <= 1'b0;
		else if  (ena == 1'b1)   dffe532 <= dffe531;
	// synopsys translate_off
	initial
		dffe533 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe533 <= 1'b0;
		else if  (ena == 1'b1)   dffe533 <= wire_sft546a_out[50];
	// synopsys translate_off
	initial
		dffe534 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe534 <= 1'b0;
		else if  (ena == 1'b1)   dffe534 <= 1'b1;
	// synopsys translate_off
	initial
		dffe535 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe535 <= 1'b0;
		else if  (ena == 1'b1)   dffe535 <= dffe534;
	// synopsys translate_off
	initial
		dffe536 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe536 <= 1'b0;
		else if  (ena == 1'b1)   dffe536 <= wire_sft546a_out[51];
	// synopsys translate_off
	initial
		dffe537 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe537 <= 1'b0;
		else if  (ena == 1'b1)   dffe537 <= 1'b1;
	// synopsys translate_off
	initial
		dffe538 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe538 <= 1'b0;
		else if  (ena == 1'b1)   dffe538 <= dffe537;
	// synopsys translate_off
	initial
		dffe539 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe539 <= 1'b0;
		else if  (ena == 1'b1)   dffe539 <= wire_sft546a_out[52];
	// synopsys translate_off
	initial
		dffe54 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe54 <= 1'b0;
		else if  (ena == 1'b1)   dffe54 <= wire_sft546a_out[7];
	// synopsys translate_off
	initial
		dffe540 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe540 <= 1'b0;
		else if  (ena == 1'b1)   dffe540 <= 1'b1;
	// synopsys translate_off
	initial
		dffe541 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe541 <= 1'b0;
		else if  (ena == 1'b1)   dffe541 <= dffe540;
	// synopsys translate_off
	initial
		dffe55 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe55 <= 1'b0;
		else if  (ena == 1'b1)   dffe55 <= w82w[0];
	// synopsys translate_off
	initial
		dffe56 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe56 <= 1'b0;
		else if  (ena == 1'b1)   dffe56 <= dffe55;
	// synopsys translate_off
	initial
		dffe57 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe57 <= 1'b0;
		else if  (ena == 1'b1)   dffe57 <= w100w[0];
	// synopsys translate_off
	initial
		dffe58 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe58 <= 1'b0;
		else if  (ena == 1'b1)   dffe58 <= dffe57;
	// synopsys translate_off
	initial
		dffe59 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe59 <= 1'b0;
		else if  (ena == 1'b1)   dffe59 <= wire_sft551a_out[3];
	// synopsys translate_off
	initial
		dffe6 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe6 <= 1'b0;
		else if  (ena == 1'b1)   dffe6 <= w16w[0];
	// synopsys translate_off
	initial
		dffe60 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe60 <= 1'b0;
		else if  (ena == 1'b1)   dffe60 <= w149w[0];
	// synopsys translate_off
	initial
		dffe61 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe61 <= 1'b0;
		else if  (ena == 1'b1)   dffe61 <= w124w[0];
	// synopsys translate_off
	initial
		dffe62 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe62 <= 1'b0;
		else if  (ena == 1'b1)   dffe62 <= w179w[0];
	// synopsys translate_off
	initial
		dffe63 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe63 <= 1'b0;
		else if  (ena == 1'b1)   dffe63 <= wire_sft546a_out[8];
	// synopsys translate_off
	initial
		dffe64 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe64 <= 1'b0;
		else if  (ena == 1'b1)   dffe64 <= w86w[0];
	// synopsys translate_off
	initial
		dffe65 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe65 <= 1'b0;
		else if  (ena == 1'b1)   dffe65 <= dffe64;
	// synopsys translate_off
	initial
		dffe66 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe66 <= 1'b0;
		else if  (ena == 1'b1)   dffe66 <= wire_sft551a_out[4];
	// synopsys translate_off
	initial
		dffe67 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe67 <= 1'b0;
		else if  (ena == 1'b1)   dffe67 <= w153w[0];
	// synopsys translate_off
	initial
		dffe68 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe68 <= 1'b0;
		else if  (ena == 1'b1)   dffe68 <= w127w[0];
	// synopsys translate_off
	initial
		dffe69 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe69 <= 1'b0;
		else if  (ena == 1'b1)   dffe69 <= w182w[0];
	// synopsys translate_off
	initial
		dffe7 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe7 <= 1'b0;
		else if  (ena == 1'b1)   dffe7 <= dffe6;
	// synopsys translate_off
	initial
		dffe70 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe70 <= 1'b0;
		else if  (ena == 1'b1)   dffe70 <= wire_sft556a_out[0];
	// synopsys translate_off
	initial
		dffe71 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe71 <= 1'b0;
		else if  (ena == 1'b1)   dffe71 <= w215w[0];
	// synopsys translate_off
	initial
		dffe72 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe72 <= 1'b0;
		else if  (ena == 1'b1)   dffe72 <= w103w[0];
	// synopsys translate_off
	initial
		dffe73 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe73 <= 1'b0;
		else if  (ena == 1'b1)   dffe73 <= wire_sft546a_out[9];
	// synopsys translate_off
	initial
		dffe74 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe74 <= 1'b0;
		else if  (ena == 1'b1)   dffe74 <= w108w[0];
	// synopsys translate_off
	initial
		dffe75 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe75 <= 1'b0;
		else if  (ena == 1'b1)   dffe75 <= dffe74;
	// synopsys translate_off
	initial
		dffe76 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe76 <= 1'b0;
		else if  (ena == 1'b1)   dffe76 <= wire_sft551a_out[5];
	// synopsys translate_off
	initial
		dffe77 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe77 <= 1'b0;
		else if  (ena == 1'b1)   dffe77 <= w185w[0];
	// synopsys translate_off
	initial
		dffe78 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe78 <= 1'b0;
		else if  (ena == 1'b1)   dffe78 <= w157w[0];
	// synopsys translate_off
	initial
		dffe79 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe79 <= 1'b0;
		else if  (ena == 1'b1)   dffe79 <= w219w[0];
	// synopsys translate_off
	initial
		dffe8 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe8 <= 1'b0;
		else if  (ena == 1'b1)   dffe8 <= w20w[0];
	// synopsys translate_off
	initial
		dffe80 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe80 <= 1'b0;
		else if  (ena == 1'b1)   dffe80 <= wire_sft556a_out[1];
	// synopsys translate_off
	initial
		dffe81 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe81 <= 1'b0;
		else if  (ena == 1'b1)   dffe81 <= w255w[0];
	// synopsys translate_off
	initial
		dffe82 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe82 <= 1'b0;
		else if  (ena == 1'b1)   dffe82 <= w130w[0];
	// synopsys translate_off
	initial
		dffe83 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe83 <= 1'b0;
		else if  (ena == 1'b1)   dffe83 <= wire_sft546a_out[10];
	// synopsys translate_off
	initial
		dffe84 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe84 <= 1'b0;
		else if  (ena == 1'b1)   dffe84 <= w112w[0];
	// synopsys translate_off
	initial
		dffe85 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe85 <= 1'b0;
		else if  (ena == 1'b1)   dffe85 <= dffe84;
	// synopsys translate_off
	initial
		dffe86 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe86 <= 1'b0;
		else if  (ena == 1'b1)   dffe86 <= wire_sft551a_out[6];
	// synopsys translate_off
	initial
		dffe87 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe87 <= 1'b0;
		else if  (ena == 1'b1)   dffe87 <= w189w[0];
	// synopsys translate_off
	initial
		dffe88 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe88 <= 1'b0;
		else if  (ena == 1'b1)   dffe88 <= w160w[0];
	// synopsys translate_off
	initial
		dffe89 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe89 <= 1'b0;
		else if  (ena == 1'b1)   dffe89 <= w222w[0];
	// synopsys translate_off
	initial
		dffe9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe9 <= 1'b0;
		else if  (ena == 1'b1)   dffe9 <= dffe8;
	// synopsys translate_off
	initial
		dffe90 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe90 <= 1'b0;
		else if  (ena == 1'b1)   dffe90 <= wire_sft556a_out[2];
	// synopsys translate_off
	initial
		dffe91 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe91 <= 1'b0;
		else if  (ena == 1'b1)   dffe91 <= w259w[0];
	// synopsys translate_off
	initial
		dffe92 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe92 <= 1'b0;
		else if  (ena == 1'b1)   dffe92 <= w133w[0];
	// synopsys translate_off
	initial
		dffe93 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe93 <= 1'b0;
		else if  (ena == 1'b1)   dffe93 <= w299w[0];
	// synopsys translate_off
	initial
		dffe94 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe94 <= 1'b0;
		else if  (ena == 1'b1)   dffe94 <= wire_sft546a_out[11];
	// synopsys translate_off
	initial
		dffe95 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe95 <= 1'b0;
		else if  (ena == 1'b1)   dffe95 <= w138w[0];
	// synopsys translate_off
	initial
		dffe96 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe96 <= 1'b0;
		else if  (ena == 1'b1)   dffe96 <= dffe95;
	// synopsys translate_off
	initial
		dffe97 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe97 <= 1'b0;
		else if  (ena == 1'b1)   dffe97 <= wire_sft551a_out[7];
	// synopsys translate_off
	initial
		dffe98 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe98 <= 1'b0;
		else if  (ena == 1'b1)   dffe98 <= w225w[0];
	// synopsys translate_off
	initial
		dffe99 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe99 <= 1'b0;
		else if  (ena == 1'b1)   dffe99 <= w193w[0];
	soft   sft543a_0
	( 
	.in(wire_sft543a_in[0:0]),
	.out(wire_sft543a_out[0:0]));
	soft   sft543a_1
	( 
	.in(wire_sft543a_in[1:1]),
	.out(wire_sft543a_out[1:1]));
	soft   sft543a_2
	( 
	.in(wire_sft543a_in[2:2]),
	.out(wire_sft543a_out[2:2]));
	soft   sft543a_3
	( 
	.in(wire_sft543a_in[3:3]),
	.out(wire_sft543a_out[3:3]));
	soft   sft543a_4
	( 
	.in(wire_sft543a_in[4:4]),
	.out(wire_sft543a_out[4:4]));
	soft   sft543a_5
	( 
	.in(wire_sft543a_in[5:5]),
	.out(wire_sft543a_out[5:5]));
	soft   sft543a_6
	( 
	.in(wire_sft543a_in[6:6]),
	.out(wire_sft543a_out[6:6]));
	soft   sft543a_7
	( 
	.in(wire_sft543a_in[7:7]),
	.out(wire_sft543a_out[7:7]));
	soft   sft543a_8
	( 
	.in(wire_sft543a_in[8:8]),
	.out(wire_sft543a_out[8:8]));
	soft   sft543a_9
	( 
	.in(wire_sft543a_in[9:9]),
	.out(wire_sft543a_out[9:9]));
	soft   sft543a_10
	( 
	.in(wire_sft543a_in[10:10]),
	.out(wire_sft543a_out[10:10]));
	soft   sft543a_11
	( 
	.in(wire_sft543a_in[11:11]),
	.out(wire_sft543a_out[11:11]));
	soft   sft543a_12
	( 
	.in(wire_sft543a_in[12:12]),
	.out(wire_sft543a_out[12:12]));
	soft   sft543a_13
	( 
	.in(wire_sft543a_in[13:13]),
	.out(wire_sft543a_out[13:13]));
	soft   sft543a_14
	( 
	.in(wire_sft543a_in[14:14]),
	.out(wire_sft543a_out[14:14]));
	soft   sft543a_15
	( 
	.in(wire_sft543a_in[15:15]),
	.out(wire_sft543a_out[15:15]));
	soft   sft543a_16
	( 
	.in(wire_sft543a_in[16:16]),
	.out(wire_sft543a_out[16:16]));
	soft   sft543a_17
	( 
	.in(wire_sft543a_in[17:17]),
	.out(wire_sft543a_out[17:17]));
	soft   sft543a_18
	( 
	.in(wire_sft543a_in[18:18]),
	.out(wire_sft543a_out[18:18]));
	soft   sft543a_19
	( 
	.in(wire_sft543a_in[19:19]),
	.out(wire_sft543a_out[19:19]));
	soft   sft543a_20
	( 
	.in(wire_sft543a_in[20:20]),
	.out(wire_sft543a_out[20:20]));
	soft   sft543a_21
	( 
	.in(wire_sft543a_in[21:21]),
	.out(wire_sft543a_out[21:21]));
	soft   sft543a_22
	( 
	.in(wire_sft543a_in[22:22]),
	.out(wire_sft543a_out[22:22]));
	soft   sft543a_23
	( 
	.in(wire_sft543a_in[23:23]),
	.out(wire_sft543a_out[23:23]));
	soft   sft543a_24
	( 
	.in(wire_sft543a_in[24:24]),
	.out(wire_sft543a_out[24:24]));
	soft   sft543a_25
	( 
	.in(wire_sft543a_in[25:25]),
	.out(wire_sft543a_out[25:25]));
	soft   sft543a_26
	( 
	.in(wire_sft543a_in[26:26]),
	.out(wire_sft543a_out[26:26]));
	soft   sft543a_27
	( 
	.in(wire_sft543a_in[27:27]),
	.out(wire_sft543a_out[27:27]));
	soft   sft543a_28
	( 
	.in(wire_sft543a_in[28:28]),
	.out(wire_sft543a_out[28:28]));
	soft   sft543a_29
	( 
	.in(wire_sft543a_in[29:29]),
	.out(wire_sft543a_out[29:29]));
	soft   sft543a_30
	( 
	.in(wire_sft543a_in[30:30]),
	.out(wire_sft543a_out[30:30]));
	soft   sft543a_31
	( 
	.in(wire_sft543a_in[31:31]),
	.out(wire_sft543a_out[31:31]));
	soft   sft543a_32
	( 
	.in(wire_sft543a_in[32:32]),
	.out(wire_sft543a_out[32:32]));
	soft   sft543a_33
	( 
	.in(wire_sft543a_in[33:33]),
	.out(wire_sft543a_out[33:33]));
	soft   sft543a_34
	( 
	.in(wire_sft543a_in[34:34]),
	.out(wire_sft543a_out[34:34]));
	soft   sft543a_35
	( 
	.in(wire_sft543a_in[35:35]),
	.out(wire_sft543a_out[35:35]));
	soft   sft543a_36
	( 
	.in(wire_sft543a_in[36:36]),
	.out(wire_sft543a_out[36:36]));
	soft   sft543a_37
	( 
	.in(wire_sft543a_in[37:37]),
	.out(wire_sft543a_out[37:37]));
	soft   sft543a_38
	( 
	.in(wire_sft543a_in[38:38]),
	.out(wire_sft543a_out[38:38]));
	soft   sft543a_39
	( 
	.in(wire_sft543a_in[39:39]),
	.out(wire_sft543a_out[39:39]));
	soft   sft543a_40
	( 
	.in(wire_sft543a_in[40:40]),
	.out(wire_sft543a_out[40:40]));
	soft   sft543a_41
	( 
	.in(wire_sft543a_in[41:41]),
	.out(wire_sft543a_out[41:41]));
	soft   sft543a_42
	( 
	.in(wire_sft543a_in[42:42]),
	.out(wire_sft543a_out[42:42]));
	soft   sft543a_43
	( 
	.in(wire_sft543a_in[43:43]),
	.out(wire_sft543a_out[43:43]));
	soft   sft543a_44
	( 
	.in(wire_sft543a_in[44:44]),
	.out(wire_sft543a_out[44:44]));
	soft   sft543a_45
	( 
	.in(wire_sft543a_in[45:45]),
	.out(wire_sft543a_out[45:45]));
	soft   sft543a_46
	( 
	.in(wire_sft543a_in[46:46]),
	.out(wire_sft543a_out[46:46]));
	soft   sft543a_47
	( 
	.in(wire_sft543a_in[47:47]),
	.out(wire_sft543a_out[47:47]));
	soft   sft543a_48
	( 
	.in(wire_sft543a_in[48:48]),
	.out(wire_sft543a_out[48:48]));
	soft   sft543a_49
	( 
	.in(wire_sft543a_in[49:49]),
	.out(wire_sft543a_out[49:49]));
	soft   sft543a_50
	( 
	.in(wire_sft543a_in[50:50]),
	.out(wire_sft543a_out[50:50]));
	soft   sft543a_51
	( 
	.in(wire_sft543a_in[51:51]),
	.out(wire_sft543a_out[51:51]));
	soft   sft543a_52
	( 
	.in(wire_sft543a_in[52:52]),
	.out(wire_sft543a_out[52:52]));
	assign
		wire_sft543a_in = {dffe541, {dffe538, {dffe535, {dffe530, {dffe525, {dffe519, {dffe512, {dffe505, {dffe497, {dffe489, {dffe480, {dffe471, {dffe461, {dffe450, {dffe439, {dffe428, {dffe416, {dffe403, {dffe390, {dffe377, {dffe364, {dffe351, {dffe338, {dffe325, {dffe312, {dffe299, {dffe286, {dffe273, {dffe260, {dffe247, {dffe234, {dffe221, {dffe208, {dffe195, {dffe182, {dffe169, {dffe156, {dffe143, {dffe130, {dffe118, {dffe106, {dffe96, {dffe85, {dffe75, {dffe65, {dffe56, {dffe47, {dffe39, {dffe31, {dffe24, {dffe17, {dffe12, dffe7}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft544a_0
	( 
	.in(wire_sft544a_in[0:0]),
	.out(wire_sft544a_out[0:0]));
	soft   sft544a_1
	( 
	.in(wire_sft544a_in[1:1]),
	.out(wire_sft544a_out[1:1]));
	soft   sft544a_2
	( 
	.in(wire_sft544a_in[2:2]),
	.out(wire_sft544a_out[2:2]));
	soft   sft544a_3
	( 
	.in(wire_sft544a_in[3:3]),
	.out(wire_sft544a_out[3:3]));
	soft   sft544a_4
	( 
	.in(wire_sft544a_in[4:4]),
	.out(wire_sft544a_out[4:4]));
	soft   sft544a_5
	( 
	.in(wire_sft544a_in[5:5]),
	.out(wire_sft544a_out[5:5]));
	soft   sft544a_6
	( 
	.in(wire_sft544a_in[6:6]),
	.out(wire_sft544a_out[6:6]));
	soft   sft544a_7
	( 
	.in(wire_sft544a_in[7:7]),
	.out(wire_sft544a_out[7:7]));
	soft   sft544a_8
	( 
	.in(wire_sft544a_in[8:8]),
	.out(wire_sft544a_out[8:8]));
	soft   sft544a_9
	( 
	.in(wire_sft544a_in[9:9]),
	.out(wire_sft544a_out[9:9]));
	soft   sft544a_10
	( 
	.in(wire_sft544a_in[10:10]),
	.out(wire_sft544a_out[10:10]));
	soft   sft544a_11
	( 
	.in(wire_sft544a_in[11:11]),
	.out(wire_sft544a_out[11:11]));
	soft   sft544a_12
	( 
	.in(wire_sft544a_in[12:12]),
	.out(wire_sft544a_out[12:12]));
	soft   sft544a_13
	( 
	.in(wire_sft544a_in[13:13]),
	.out(wire_sft544a_out[13:13]));
	soft   sft544a_14
	( 
	.in(wire_sft544a_in[14:14]),
	.out(wire_sft544a_out[14:14]));
	soft   sft544a_15
	( 
	.in(wire_sft544a_in[15:15]),
	.out(wire_sft544a_out[15:15]));
	soft   sft544a_16
	( 
	.in(wire_sft544a_in[16:16]),
	.out(wire_sft544a_out[16:16]));
	soft   sft544a_17
	( 
	.in(wire_sft544a_in[17:17]),
	.out(wire_sft544a_out[17:17]));
	soft   sft544a_18
	( 
	.in(wire_sft544a_in[18:18]),
	.out(wire_sft544a_out[18:18]));
	soft   sft544a_19
	( 
	.in(wire_sft544a_in[19:19]),
	.out(wire_sft544a_out[19:19]));
	soft   sft544a_20
	( 
	.in(wire_sft544a_in[20:20]),
	.out(wire_sft544a_out[20:20]));
	soft   sft544a_21
	( 
	.in(wire_sft544a_in[21:21]),
	.out(wire_sft544a_out[21:21]));
	soft   sft544a_22
	( 
	.in(wire_sft544a_in[22:22]),
	.out(wire_sft544a_out[22:22]));
	soft   sft544a_23
	( 
	.in(wire_sft544a_in[23:23]),
	.out(wire_sft544a_out[23:23]));
	soft   sft544a_24
	( 
	.in(wire_sft544a_in[24:24]),
	.out(wire_sft544a_out[24:24]));
	soft   sft544a_25
	( 
	.in(wire_sft544a_in[25:25]),
	.out(wire_sft544a_out[25:25]));
	soft   sft544a_26
	( 
	.in(wire_sft544a_in[26:26]),
	.out(wire_sft544a_out[26:26]));
	soft   sft544a_27
	( 
	.in(wire_sft544a_in[27:27]),
	.out(wire_sft544a_out[27:27]));
	soft   sft544a_28
	( 
	.in(wire_sft544a_in[28:28]),
	.out(wire_sft544a_out[28:28]));
	soft   sft544a_29
	( 
	.in(wire_sft544a_in[29:29]),
	.out(wire_sft544a_out[29:29]));
	soft   sft544a_30
	( 
	.in(wire_sft544a_in[30:30]),
	.out(wire_sft544a_out[30:30]));
	soft   sft544a_31
	( 
	.in(wire_sft544a_in[31:31]),
	.out(wire_sft544a_out[31:31]));
	soft   sft544a_32
	( 
	.in(wire_sft544a_in[32:32]),
	.out(wire_sft544a_out[32:32]));
	soft   sft544a_33
	( 
	.in(wire_sft544a_in[33:33]),
	.out(wire_sft544a_out[33:33]));
	soft   sft544a_34
	( 
	.in(wire_sft544a_in[34:34]),
	.out(wire_sft544a_out[34:34]));
	soft   sft544a_35
	( 
	.in(wire_sft544a_in[35:35]),
	.out(wire_sft544a_out[35:35]));
	soft   sft544a_36
	( 
	.in(wire_sft544a_in[36:36]),
	.out(wire_sft544a_out[36:36]));
	soft   sft544a_37
	( 
	.in(wire_sft544a_in[37:37]),
	.out(wire_sft544a_out[37:37]));
	soft   sft544a_38
	( 
	.in(wire_sft544a_in[38:38]),
	.out(wire_sft544a_out[38:38]));
	soft   sft544a_39
	( 
	.in(wire_sft544a_in[39:39]),
	.out(wire_sft544a_out[39:39]));
	soft   sft544a_40
	( 
	.in(wire_sft544a_in[40:40]),
	.out(wire_sft544a_out[40:40]));
	soft   sft544a_41
	( 
	.in(wire_sft544a_in[41:41]),
	.out(wire_sft544a_out[41:41]));
	soft   sft544a_42
	( 
	.in(wire_sft544a_in[42:42]),
	.out(wire_sft544a_out[42:42]));
	soft   sft544a_43
	( 
	.in(wire_sft544a_in[43:43]),
	.out(wire_sft544a_out[43:43]));
	soft   sft544a_44
	( 
	.in(wire_sft544a_in[44:44]),
	.out(wire_sft544a_out[44:44]));
	soft   sft544a_45
	( 
	.in(wire_sft544a_in[45:45]),
	.out(wire_sft544a_out[45:45]));
	soft   sft544a_46
	( 
	.in(wire_sft544a_in[46:46]),
	.out(wire_sft544a_out[46:46]));
	soft   sft544a_47
	( 
	.in(wire_sft544a_in[47:47]),
	.out(wire_sft544a_out[47:47]));
	soft   sft544a_48
	( 
	.in(wire_sft544a_in[48:48]),
	.out(wire_sft544a_out[48:48]));
	soft   sft544a_49
	( 
	.in(wire_sft544a_in[49:49]),
	.out(wire_sft544a_out[49:49]));
	soft   sft544a_50
	( 
	.in(wire_sft544a_in[50:50]),
	.out(wire_sft544a_out[50:50]));
	soft   sft544a_51
	( 
	.in(wire_sft544a_in[51:51]),
	.out(wire_sft544a_out[51:51]));
	soft   sft544a_52
	( 
	.in(wire_sft544a_in[52:52]),
	.out(wire_sft544a_out[52:52]));
	assign
		wire_sft544a_in = {w1412w, {w1412w, {w1412w, {dffe532, {dffe527, {dffe521, {dffe514, {dffe507, {dffe499, {dffe490, {dffe481, {dffe472, {dffe462, {dffe454, {dffe443, {dffe432, {dffe420, {dffe407, {dffe394, {dffe381, {dffe368, {dffe355, {dffe342, {dffe329, {dffe316, {dffe303, {dffe290, {dffe277, {dffe264, {dffe251, {dffe238, {dffe225, {dffe212, {dffe199, {dffe186, {dffe173, {dffe160, {dffe147, {dffe134, {dffe122, {dffe110, {dffe97, {dffe86, {dffe76, {dffe66, {dffe58, {dffe49, {dffe41, {dffe33, {dffe26, {dffe19, {dffe14, dffe9}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft545a_0
	( 
	.in(wire_sft545a_in[0:0]),
	.out(wire_sft545a_out[0:0]));
	soft   sft545a_1
	( 
	.in(wire_sft545a_in[1:1]),
	.out(wire_sft545a_out[1:1]));
	soft   sft545a_2
	( 
	.in(wire_sft545a_in[2:2]),
	.out(wire_sft545a_out[2:2]));
	soft   sft545a_3
	( 
	.in(wire_sft545a_in[3:3]),
	.out(wire_sft545a_out[3:3]));
	soft   sft545a_4
	( 
	.in(wire_sft545a_in[4:4]),
	.out(wire_sft545a_out[4:4]));
	soft   sft545a_5
	( 
	.in(wire_sft545a_in[5:5]),
	.out(wire_sft545a_out[5:5]));
	soft   sft545a_6
	( 
	.in(wire_sft545a_in[6:6]),
	.out(wire_sft545a_out[6:6]));
	soft   sft545a_7
	( 
	.in(wire_sft545a_in[7:7]),
	.out(wire_sft545a_out[7:7]));
	soft   sft545a_8
	( 
	.in(wire_sft545a_in[8:8]),
	.out(wire_sft545a_out[8:8]));
	soft   sft545a_9
	( 
	.in(wire_sft545a_in[9:9]),
	.out(wire_sft545a_out[9:9]));
	soft   sft545a_10
	( 
	.in(wire_sft545a_in[10:10]),
	.out(wire_sft545a_out[10:10]));
	soft   sft545a_11
	( 
	.in(wire_sft545a_in[11:11]),
	.out(wire_sft545a_out[11:11]));
	soft   sft545a_12
	( 
	.in(wire_sft545a_in[12:12]),
	.out(wire_sft545a_out[12:12]));
	soft   sft545a_13
	( 
	.in(wire_sft545a_in[13:13]),
	.out(wire_sft545a_out[13:13]));
	soft   sft545a_14
	( 
	.in(wire_sft545a_in[14:14]),
	.out(wire_sft545a_out[14:14]));
	soft   sft545a_15
	( 
	.in(wire_sft545a_in[15:15]),
	.out(wire_sft545a_out[15:15]));
	soft   sft545a_16
	( 
	.in(wire_sft545a_in[16:16]),
	.out(wire_sft545a_out[16:16]));
	soft   sft545a_17
	( 
	.in(wire_sft545a_in[17:17]),
	.out(wire_sft545a_out[17:17]));
	soft   sft545a_18
	( 
	.in(wire_sft545a_in[18:18]),
	.out(wire_sft545a_out[18:18]));
	soft   sft545a_19
	( 
	.in(wire_sft545a_in[19:19]),
	.out(wire_sft545a_out[19:19]));
	soft   sft545a_20
	( 
	.in(wire_sft545a_in[20:20]),
	.out(wire_sft545a_out[20:20]));
	soft   sft545a_21
	( 
	.in(wire_sft545a_in[21:21]),
	.out(wire_sft545a_out[21:21]));
	soft   sft545a_22
	( 
	.in(wire_sft545a_in[22:22]),
	.out(wire_sft545a_out[22:22]));
	soft   sft545a_23
	( 
	.in(wire_sft545a_in[23:23]),
	.out(wire_sft545a_out[23:23]));
	soft   sft545a_24
	( 
	.in(wire_sft545a_in[24:24]),
	.out(wire_sft545a_out[24:24]));
	soft   sft545a_25
	( 
	.in(wire_sft545a_in[25:25]),
	.out(wire_sft545a_out[25:25]));
	soft   sft545a_26
	( 
	.in(wire_sft545a_in[26:26]),
	.out(wire_sft545a_out[26:26]));
	soft   sft545a_27
	( 
	.in(wire_sft545a_in[27:27]),
	.out(wire_sft545a_out[27:27]));
	soft   sft545a_28
	( 
	.in(wire_sft545a_in[28:28]),
	.out(wire_sft545a_out[28:28]));
	soft   sft545a_29
	( 
	.in(wire_sft545a_in[29:29]),
	.out(wire_sft545a_out[29:29]));
	soft   sft545a_30
	( 
	.in(wire_sft545a_in[30:30]),
	.out(wire_sft545a_out[30:30]));
	soft   sft545a_31
	( 
	.in(wire_sft545a_in[31:31]),
	.out(wire_sft545a_out[31:31]));
	soft   sft545a_32
	( 
	.in(wire_sft545a_in[32:32]),
	.out(wire_sft545a_out[32:32]));
	soft   sft545a_33
	( 
	.in(wire_sft545a_in[33:33]),
	.out(wire_sft545a_out[33:33]));
	soft   sft545a_34
	( 
	.in(wire_sft545a_in[34:34]),
	.out(wire_sft545a_out[34:34]));
	soft   sft545a_35
	( 
	.in(wire_sft545a_in[35:35]),
	.out(wire_sft545a_out[35:35]));
	soft   sft545a_36
	( 
	.in(wire_sft545a_in[36:36]),
	.out(wire_sft545a_out[36:36]));
	soft   sft545a_37
	( 
	.in(wire_sft545a_in[37:37]),
	.out(wire_sft545a_out[37:37]));
	soft   sft545a_38
	( 
	.in(wire_sft545a_in[38:38]),
	.out(wire_sft545a_out[38:38]));
	soft   sft545a_39
	( 
	.in(wire_sft545a_in[39:39]),
	.out(wire_sft545a_out[39:39]));
	soft   sft545a_40
	( 
	.in(wire_sft545a_in[40:40]),
	.out(wire_sft545a_out[40:40]));
	soft   sft545a_41
	( 
	.in(wire_sft545a_in[41:41]),
	.out(wire_sft545a_out[41:41]));
	soft   sft545a_42
	( 
	.in(wire_sft545a_in[42:42]),
	.out(wire_sft545a_out[42:42]));
	soft   sft545a_43
	( 
	.in(wire_sft545a_in[43:43]),
	.out(wire_sft545a_out[43:43]));
	soft   sft545a_44
	( 
	.in(wire_sft545a_in[44:44]),
	.out(wire_sft545a_out[44:44]));
	soft   sft545a_45
	( 
	.in(wire_sft545a_in[45:45]),
	.out(wire_sft545a_out[45:45]));
	soft   sft545a_46
	( 
	.in(wire_sft545a_in[46:46]),
	.out(wire_sft545a_out[46:46]));
	soft   sft545a_47
	( 
	.in(wire_sft545a_in[47:47]),
	.out(wire_sft545a_out[47:47]));
	soft   sft545a_48
	( 
	.in(wire_sft545a_in[48:48]),
	.out(wire_sft545a_out[48:48]));
	soft   sft545a_49
	( 
	.in(wire_sft545a_in[49:49]),
	.out(wire_sft545a_out[49:49]));
	soft   sft545a_50
	( 
	.in(wire_sft545a_in[50:50]),
	.out(wire_sft545a_out[50:50]));
	soft   sft545a_51
	( 
	.in(wire_sft545a_in[51:51]),
	.out(wire_sft545a_out[51:51]));
	soft   sft545a_52
	( 
	.in(wire_sft545a_in[52:52]),
	.out(wire_sft545a_out[52:52]));
	assign
		wire_sft545a_in = {w1412w, {w1412w, {w1412w, {w1412w, {w1412w, {dffe522, {dffe515, {dffe508, {dffe500, {dffe494, {dffe485, {dffe476, {dffe466, {dffe458, {dffe447, {dffe436, {dffe424, {dffe411, {dffe398, {dffe385, {dffe372, {dffe359, {dffe346, {dffe333, {dffe320, {dffe307, {dffe294, {dffe281, {dffe268, {dffe255, {dffe242, {dffe229, {dffe216, {dffe203, {dffe190, {dffe177, {dffe164, {dffe151, {dffe138, {dffe126, {dffe114, {dffe101, {dffe90, {dffe80, {dffe70, {dffe59, {dffe50, {dffe42, {dffe34, {dffe28, {dffe21, {2{w1412w}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft546a_0
	( 
	.in(wire_sft546a_in[0:0]),
	.out(wire_sft546a_out[0:0]));
	soft   sft546a_1
	( 
	.in(wire_sft546a_in[1:1]),
	.out(wire_sft546a_out[1:1]));
	soft   sft546a_2
	( 
	.in(wire_sft546a_in[2:2]),
	.out(wire_sft546a_out[2:2]));
	soft   sft546a_3
	( 
	.in(wire_sft546a_in[3:3]),
	.out(wire_sft546a_out[3:3]));
	soft   sft546a_4
	( 
	.in(wire_sft546a_in[4:4]),
	.out(wire_sft546a_out[4:4]));
	soft   sft546a_5
	( 
	.in(wire_sft546a_in[5:5]),
	.out(wire_sft546a_out[5:5]));
	soft   sft546a_6
	( 
	.in(wire_sft546a_in[6:6]),
	.out(wire_sft546a_out[6:6]));
	soft   sft546a_7
	( 
	.in(wire_sft546a_in[7:7]),
	.out(wire_sft546a_out[7:7]));
	soft   sft546a_8
	( 
	.in(wire_sft546a_in[8:8]),
	.out(wire_sft546a_out[8:8]));
	soft   sft546a_9
	( 
	.in(wire_sft546a_in[9:9]),
	.out(wire_sft546a_out[9:9]));
	soft   sft546a_10
	( 
	.in(wire_sft546a_in[10:10]),
	.out(wire_sft546a_out[10:10]));
	soft   sft546a_11
	( 
	.in(wire_sft546a_in[11:11]),
	.out(wire_sft546a_out[11:11]));
	soft   sft546a_12
	( 
	.in(wire_sft546a_in[12:12]),
	.out(wire_sft546a_out[12:12]));
	soft   sft546a_13
	( 
	.in(wire_sft546a_in[13:13]),
	.out(wire_sft546a_out[13:13]));
	soft   sft546a_14
	( 
	.in(wire_sft546a_in[14:14]),
	.out(wire_sft546a_out[14:14]));
	soft   sft546a_15
	( 
	.in(wire_sft546a_in[15:15]),
	.out(wire_sft546a_out[15:15]));
	soft   sft546a_16
	( 
	.in(wire_sft546a_in[16:16]),
	.out(wire_sft546a_out[16:16]));
	soft   sft546a_17
	( 
	.in(wire_sft546a_in[17:17]),
	.out(wire_sft546a_out[17:17]));
	soft   sft546a_18
	( 
	.in(wire_sft546a_in[18:18]),
	.out(wire_sft546a_out[18:18]));
	soft   sft546a_19
	( 
	.in(wire_sft546a_in[19:19]),
	.out(wire_sft546a_out[19:19]));
	soft   sft546a_20
	( 
	.in(wire_sft546a_in[20:20]),
	.out(wire_sft546a_out[20:20]));
	soft   sft546a_21
	( 
	.in(wire_sft546a_in[21:21]),
	.out(wire_sft546a_out[21:21]));
	soft   sft546a_22
	( 
	.in(wire_sft546a_in[22:22]),
	.out(wire_sft546a_out[22:22]));
	soft   sft546a_23
	( 
	.in(wire_sft546a_in[23:23]),
	.out(wire_sft546a_out[23:23]));
	soft   sft546a_24
	( 
	.in(wire_sft546a_in[24:24]),
	.out(wire_sft546a_out[24:24]));
	soft   sft546a_25
	( 
	.in(wire_sft546a_in[25:25]),
	.out(wire_sft546a_out[25:25]));
	soft   sft546a_26
	( 
	.in(wire_sft546a_in[26:26]),
	.out(wire_sft546a_out[26:26]));
	soft   sft546a_27
	( 
	.in(wire_sft546a_in[27:27]),
	.out(wire_sft546a_out[27:27]));
	soft   sft546a_28
	( 
	.in(wire_sft546a_in[28:28]),
	.out(wire_sft546a_out[28:28]));
	soft   sft546a_29
	( 
	.in(wire_sft546a_in[29:29]),
	.out(wire_sft546a_out[29:29]));
	soft   sft546a_30
	( 
	.in(wire_sft546a_in[30:30]),
	.out(wire_sft546a_out[30:30]));
	soft   sft546a_31
	( 
	.in(wire_sft546a_in[31:31]),
	.out(wire_sft546a_out[31:31]));
	soft   sft546a_32
	( 
	.in(wire_sft546a_in[32:32]),
	.out(wire_sft546a_out[32:32]));
	soft   sft546a_33
	( 
	.in(wire_sft546a_in[33:33]),
	.out(wire_sft546a_out[33:33]));
	soft   sft546a_34
	( 
	.in(wire_sft546a_in[34:34]),
	.out(wire_sft546a_out[34:34]));
	soft   sft546a_35
	( 
	.in(wire_sft546a_in[35:35]),
	.out(wire_sft546a_out[35:35]));
	soft   sft546a_36
	( 
	.in(wire_sft546a_in[36:36]),
	.out(wire_sft546a_out[36:36]));
	soft   sft546a_37
	( 
	.in(wire_sft546a_in[37:37]),
	.out(wire_sft546a_out[37:37]));
	soft   sft546a_38
	( 
	.in(wire_sft546a_in[38:38]),
	.out(wire_sft546a_out[38:38]));
	soft   sft546a_39
	( 
	.in(wire_sft546a_in[39:39]),
	.out(wire_sft546a_out[39:39]));
	soft   sft546a_40
	( 
	.in(wire_sft546a_in[40:40]),
	.out(wire_sft546a_out[40:40]));
	soft   sft546a_41
	( 
	.in(wire_sft546a_in[41:41]),
	.out(wire_sft546a_out[41:41]));
	soft   sft546a_42
	( 
	.in(wire_sft546a_in[42:42]),
	.out(wire_sft546a_out[42:42]));
	soft   sft546a_43
	( 
	.in(wire_sft546a_in[43:43]),
	.out(wire_sft546a_out[43:43]));
	soft   sft546a_44
	( 
	.in(wire_sft546a_in[44:44]),
	.out(wire_sft546a_out[44:44]));
	soft   sft546a_45
	( 
	.in(wire_sft546a_in[45:45]),
	.out(wire_sft546a_out[45:45]));
	soft   sft546a_46
	( 
	.in(wire_sft546a_in[46:46]),
	.out(wire_sft546a_out[46:46]));
	soft   sft546a_47
	( 
	.in(wire_sft546a_in[47:47]),
	.out(wire_sft546a_out[47:47]));
	soft   sft546a_48
	( 
	.in(wire_sft546a_in[48:48]),
	.out(wire_sft546a_out[48:48]));
	soft   sft546a_49
	( 
	.in(wire_sft546a_in[49:49]),
	.out(wire_sft546a_out[49:49]));
	soft   sft546a_50
	( 
	.in(wire_sft546a_in[50:50]),
	.out(wire_sft546a_out[50:50]));
	soft   sft546a_51
	( 
	.in(wire_sft546a_in[51:51]),
	.out(wire_sft546a_out[51:51]));
	soft   sft546a_52
	( 
	.in(wire_sft546a_in[52:52]),
	.out(wire_sft546a_out[52:52]));
	assign
		wire_sft546a_in = wire_add542_result;
	soft   sft548a_0
	( 
	.in(wire_sft548a_in[0:0]),
	.out(wire_sft548a_out[0:0]));
	soft   sft548a_1
	( 
	.in(wire_sft548a_in[1:1]),
	.out(wire_sft548a_out[1:1]));
	soft   sft548a_2
	( 
	.in(wire_sft548a_in[2:2]),
	.out(wire_sft548a_out[2:2]));
	soft   sft548a_3
	( 
	.in(wire_sft548a_in[3:3]),
	.out(wire_sft548a_out[3:3]));
	soft   sft548a_4
	( 
	.in(wire_sft548a_in[4:4]),
	.out(wire_sft548a_out[4:4]));
	soft   sft548a_5
	( 
	.in(wire_sft548a_in[5:5]),
	.out(wire_sft548a_out[5:5]));
	soft   sft548a_6
	( 
	.in(wire_sft548a_in[6:6]),
	.out(wire_sft548a_out[6:6]));
	soft   sft548a_7
	( 
	.in(wire_sft548a_in[7:7]),
	.out(wire_sft548a_out[7:7]));
	soft   sft548a_8
	( 
	.in(wire_sft548a_in[8:8]),
	.out(wire_sft548a_out[8:8]));
	soft   sft548a_9
	( 
	.in(wire_sft548a_in[9:9]),
	.out(wire_sft548a_out[9:9]));
	soft   sft548a_10
	( 
	.in(wire_sft548a_in[10:10]),
	.out(wire_sft548a_out[10:10]));
	soft   sft548a_11
	( 
	.in(wire_sft548a_in[11:11]),
	.out(wire_sft548a_out[11:11]));
	soft   sft548a_12
	( 
	.in(wire_sft548a_in[12:12]),
	.out(wire_sft548a_out[12:12]));
	soft   sft548a_13
	( 
	.in(wire_sft548a_in[13:13]),
	.out(wire_sft548a_out[13:13]));
	soft   sft548a_14
	( 
	.in(wire_sft548a_in[14:14]),
	.out(wire_sft548a_out[14:14]));
	soft   sft548a_15
	( 
	.in(wire_sft548a_in[15:15]),
	.out(wire_sft548a_out[15:15]));
	soft   sft548a_16
	( 
	.in(wire_sft548a_in[16:16]),
	.out(wire_sft548a_out[16:16]));
	soft   sft548a_17
	( 
	.in(wire_sft548a_in[17:17]),
	.out(wire_sft548a_out[17:17]));
	soft   sft548a_18
	( 
	.in(wire_sft548a_in[18:18]),
	.out(wire_sft548a_out[18:18]));
	soft   sft548a_19
	( 
	.in(wire_sft548a_in[19:19]),
	.out(wire_sft548a_out[19:19]));
	soft   sft548a_20
	( 
	.in(wire_sft548a_in[20:20]),
	.out(wire_sft548a_out[20:20]));
	soft   sft548a_21
	( 
	.in(wire_sft548a_in[21:21]),
	.out(wire_sft548a_out[21:21]));
	soft   sft548a_22
	( 
	.in(wire_sft548a_in[22:22]),
	.out(wire_sft548a_out[22:22]));
	soft   sft548a_23
	( 
	.in(wire_sft548a_in[23:23]),
	.out(wire_sft548a_out[23:23]));
	soft   sft548a_24
	( 
	.in(wire_sft548a_in[24:24]),
	.out(wire_sft548a_out[24:24]));
	soft   sft548a_25
	( 
	.in(wire_sft548a_in[25:25]),
	.out(wire_sft548a_out[25:25]));
	soft   sft548a_26
	( 
	.in(wire_sft548a_in[26:26]),
	.out(wire_sft548a_out[26:26]));
	soft   sft548a_27
	( 
	.in(wire_sft548a_in[27:27]),
	.out(wire_sft548a_out[27:27]));
	soft   sft548a_28
	( 
	.in(wire_sft548a_in[28:28]),
	.out(wire_sft548a_out[28:28]));
	soft   sft548a_29
	( 
	.in(wire_sft548a_in[29:29]),
	.out(wire_sft548a_out[29:29]));
	soft   sft548a_30
	( 
	.in(wire_sft548a_in[30:30]),
	.out(wire_sft548a_out[30:30]));
	soft   sft548a_31
	( 
	.in(wire_sft548a_in[31:31]),
	.out(wire_sft548a_out[31:31]));
	soft   sft548a_32
	( 
	.in(wire_sft548a_in[32:32]),
	.out(wire_sft548a_out[32:32]));
	soft   sft548a_33
	( 
	.in(wire_sft548a_in[33:33]),
	.out(wire_sft548a_out[33:33]));
	soft   sft548a_34
	( 
	.in(wire_sft548a_in[34:34]),
	.out(wire_sft548a_out[34:34]));
	soft   sft548a_35
	( 
	.in(wire_sft548a_in[35:35]),
	.out(wire_sft548a_out[35:35]));
	soft   sft548a_36
	( 
	.in(wire_sft548a_in[36:36]),
	.out(wire_sft548a_out[36:36]));
	soft   sft548a_37
	( 
	.in(wire_sft548a_in[37:37]),
	.out(wire_sft548a_out[37:37]));
	soft   sft548a_38
	( 
	.in(wire_sft548a_in[38:38]),
	.out(wire_sft548a_out[38:38]));
	soft   sft548a_39
	( 
	.in(wire_sft548a_in[39:39]),
	.out(wire_sft548a_out[39:39]));
	soft   sft548a_40
	( 
	.in(wire_sft548a_in[40:40]),
	.out(wire_sft548a_out[40:40]));
	soft   sft548a_41
	( 
	.in(wire_sft548a_in[41:41]),
	.out(wire_sft548a_out[41:41]));
	soft   sft548a_42
	( 
	.in(wire_sft548a_in[42:42]),
	.out(wire_sft548a_out[42:42]));
	soft   sft548a_43
	( 
	.in(wire_sft548a_in[43:43]),
	.out(wire_sft548a_out[43:43]));
	assign
		wire_sft548a_in = {w1412w, {dffe516, {dffe509, {dffe501, {dffe491, {dffe482, {dffe473, {dffe463, {dffe451, {dffe440, {dffe429, {dffe417, {dffe404, {dffe391, {dffe378, {dffe365, {dffe352, {dffe339, {dffe326, {dffe313, {dffe300, {dffe287, {dffe274, {dffe261, {dffe248, {dffe235, {dffe222, {dffe209, {dffe196, {dffe183, {dffe170, {dffe157, {dffe144, {dffe131, {dffe119, {dffe107, {dffe98, {dffe87, {dffe77, {dffe67, {dffe60, {dffe51, {dffe43, dffe35}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft549a_0
	( 
	.in(wire_sft549a_in[0:0]),
	.out(wire_sft549a_out[0:0]));
	soft   sft549a_1
	( 
	.in(wire_sft549a_in[1:1]),
	.out(wire_sft549a_out[1:1]));
	soft   sft549a_2
	( 
	.in(wire_sft549a_in[2:2]),
	.out(wire_sft549a_out[2:2]));
	soft   sft549a_3
	( 
	.in(wire_sft549a_in[3:3]),
	.out(wire_sft549a_out[3:3]));
	soft   sft549a_4
	( 
	.in(wire_sft549a_in[4:4]),
	.out(wire_sft549a_out[4:4]));
	soft   sft549a_5
	( 
	.in(wire_sft549a_in[5:5]),
	.out(wire_sft549a_out[5:5]));
	soft   sft549a_6
	( 
	.in(wire_sft549a_in[6:6]),
	.out(wire_sft549a_out[6:6]));
	soft   sft549a_7
	( 
	.in(wire_sft549a_in[7:7]),
	.out(wire_sft549a_out[7:7]));
	soft   sft549a_8
	( 
	.in(wire_sft549a_in[8:8]),
	.out(wire_sft549a_out[8:8]));
	soft   sft549a_9
	( 
	.in(wire_sft549a_in[9:9]),
	.out(wire_sft549a_out[9:9]));
	soft   sft549a_10
	( 
	.in(wire_sft549a_in[10:10]),
	.out(wire_sft549a_out[10:10]));
	soft   sft549a_11
	( 
	.in(wire_sft549a_in[11:11]),
	.out(wire_sft549a_out[11:11]));
	soft   sft549a_12
	( 
	.in(wire_sft549a_in[12:12]),
	.out(wire_sft549a_out[12:12]));
	soft   sft549a_13
	( 
	.in(wire_sft549a_in[13:13]),
	.out(wire_sft549a_out[13:13]));
	soft   sft549a_14
	( 
	.in(wire_sft549a_in[14:14]),
	.out(wire_sft549a_out[14:14]));
	soft   sft549a_15
	( 
	.in(wire_sft549a_in[15:15]),
	.out(wire_sft549a_out[15:15]));
	soft   sft549a_16
	( 
	.in(wire_sft549a_in[16:16]),
	.out(wire_sft549a_out[16:16]));
	soft   sft549a_17
	( 
	.in(wire_sft549a_in[17:17]),
	.out(wire_sft549a_out[17:17]));
	soft   sft549a_18
	( 
	.in(wire_sft549a_in[18:18]),
	.out(wire_sft549a_out[18:18]));
	soft   sft549a_19
	( 
	.in(wire_sft549a_in[19:19]),
	.out(wire_sft549a_out[19:19]));
	soft   sft549a_20
	( 
	.in(wire_sft549a_in[20:20]),
	.out(wire_sft549a_out[20:20]));
	soft   sft549a_21
	( 
	.in(wire_sft549a_in[21:21]),
	.out(wire_sft549a_out[21:21]));
	soft   sft549a_22
	( 
	.in(wire_sft549a_in[22:22]),
	.out(wire_sft549a_out[22:22]));
	soft   sft549a_23
	( 
	.in(wire_sft549a_in[23:23]),
	.out(wire_sft549a_out[23:23]));
	soft   sft549a_24
	( 
	.in(wire_sft549a_in[24:24]),
	.out(wire_sft549a_out[24:24]));
	soft   sft549a_25
	( 
	.in(wire_sft549a_in[25:25]),
	.out(wire_sft549a_out[25:25]));
	soft   sft549a_26
	( 
	.in(wire_sft549a_in[26:26]),
	.out(wire_sft549a_out[26:26]));
	soft   sft549a_27
	( 
	.in(wire_sft549a_in[27:27]),
	.out(wire_sft549a_out[27:27]));
	soft   sft549a_28
	( 
	.in(wire_sft549a_in[28:28]),
	.out(wire_sft549a_out[28:28]));
	soft   sft549a_29
	( 
	.in(wire_sft549a_in[29:29]),
	.out(wire_sft549a_out[29:29]));
	soft   sft549a_30
	( 
	.in(wire_sft549a_in[30:30]),
	.out(wire_sft549a_out[30:30]));
	soft   sft549a_31
	( 
	.in(wire_sft549a_in[31:31]),
	.out(wire_sft549a_out[31:31]));
	soft   sft549a_32
	( 
	.in(wire_sft549a_in[32:32]),
	.out(wire_sft549a_out[32:32]));
	soft   sft549a_33
	( 
	.in(wire_sft549a_in[33:33]),
	.out(wire_sft549a_out[33:33]));
	soft   sft549a_34
	( 
	.in(wire_sft549a_in[34:34]),
	.out(wire_sft549a_out[34:34]));
	soft   sft549a_35
	( 
	.in(wire_sft549a_in[35:35]),
	.out(wire_sft549a_out[35:35]));
	soft   sft549a_36
	( 
	.in(wire_sft549a_in[36:36]),
	.out(wire_sft549a_out[36:36]));
	soft   sft549a_37
	( 
	.in(wire_sft549a_in[37:37]),
	.out(wire_sft549a_out[37:37]));
	soft   sft549a_38
	( 
	.in(wire_sft549a_in[38:38]),
	.out(wire_sft549a_out[38:38]));
	soft   sft549a_39
	( 
	.in(wire_sft549a_in[39:39]),
	.out(wire_sft549a_out[39:39]));
	soft   sft549a_40
	( 
	.in(wire_sft549a_in[40:40]),
	.out(wire_sft549a_out[40:40]));
	soft   sft549a_41
	( 
	.in(wire_sft549a_in[41:41]),
	.out(wire_sft549a_out[41:41]));
	soft   sft549a_42
	( 
	.in(wire_sft549a_in[42:42]),
	.out(wire_sft549a_out[42:42]));
	soft   sft549a_43
	( 
	.in(wire_sft549a_in[43:43]),
	.out(wire_sft549a_out[43:43]));
	assign
		wire_sft549a_in = {w1412w, {w1412w, {w1412w, {dffe502, {dffe492, {dffe483, {dffe474, {dffe464, {dffe452, {dffe441, {dffe430, {dffe418, {dffe405, {dffe392, {dffe379, {dffe366, {dffe353, {dffe340, {dffe327, {dffe314, {dffe301, {dffe288, {dffe275, {dffe262, {dffe249, {dffe236, {dffe223, {dffe210, {dffe197, {dffe184, {dffe171, {dffe158, {dffe145, {dffe132, {dffe120, {dffe108, {dffe99, {dffe88, {dffe78, {dffe68, {dffe61, {dffe52, {dffe44, dffe36}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft550a_0
	( 
	.in(wire_sft550a_in[0:0]),
	.out(wire_sft550a_out[0:0]));
	soft   sft550a_1
	( 
	.in(wire_sft550a_in[1:1]),
	.out(wire_sft550a_out[1:1]));
	soft   sft550a_2
	( 
	.in(wire_sft550a_in[2:2]),
	.out(wire_sft550a_out[2:2]));
	soft   sft550a_3
	( 
	.in(wire_sft550a_in[3:3]),
	.out(wire_sft550a_out[3:3]));
	soft   sft550a_4
	( 
	.in(wire_sft550a_in[4:4]),
	.out(wire_sft550a_out[4:4]));
	soft   sft550a_5
	( 
	.in(wire_sft550a_in[5:5]),
	.out(wire_sft550a_out[5:5]));
	soft   sft550a_6
	( 
	.in(wire_sft550a_in[6:6]),
	.out(wire_sft550a_out[6:6]));
	soft   sft550a_7
	( 
	.in(wire_sft550a_in[7:7]),
	.out(wire_sft550a_out[7:7]));
	soft   sft550a_8
	( 
	.in(wire_sft550a_in[8:8]),
	.out(wire_sft550a_out[8:8]));
	soft   sft550a_9
	( 
	.in(wire_sft550a_in[9:9]),
	.out(wire_sft550a_out[9:9]));
	soft   sft550a_10
	( 
	.in(wire_sft550a_in[10:10]),
	.out(wire_sft550a_out[10:10]));
	soft   sft550a_11
	( 
	.in(wire_sft550a_in[11:11]),
	.out(wire_sft550a_out[11:11]));
	soft   sft550a_12
	( 
	.in(wire_sft550a_in[12:12]),
	.out(wire_sft550a_out[12:12]));
	soft   sft550a_13
	( 
	.in(wire_sft550a_in[13:13]),
	.out(wire_sft550a_out[13:13]));
	soft   sft550a_14
	( 
	.in(wire_sft550a_in[14:14]),
	.out(wire_sft550a_out[14:14]));
	soft   sft550a_15
	( 
	.in(wire_sft550a_in[15:15]),
	.out(wire_sft550a_out[15:15]));
	soft   sft550a_16
	( 
	.in(wire_sft550a_in[16:16]),
	.out(wire_sft550a_out[16:16]));
	soft   sft550a_17
	( 
	.in(wire_sft550a_in[17:17]),
	.out(wire_sft550a_out[17:17]));
	soft   sft550a_18
	( 
	.in(wire_sft550a_in[18:18]),
	.out(wire_sft550a_out[18:18]));
	soft   sft550a_19
	( 
	.in(wire_sft550a_in[19:19]),
	.out(wire_sft550a_out[19:19]));
	soft   sft550a_20
	( 
	.in(wire_sft550a_in[20:20]),
	.out(wire_sft550a_out[20:20]));
	soft   sft550a_21
	( 
	.in(wire_sft550a_in[21:21]),
	.out(wire_sft550a_out[21:21]));
	soft   sft550a_22
	( 
	.in(wire_sft550a_in[22:22]),
	.out(wire_sft550a_out[22:22]));
	soft   sft550a_23
	( 
	.in(wire_sft550a_in[23:23]),
	.out(wire_sft550a_out[23:23]));
	soft   sft550a_24
	( 
	.in(wire_sft550a_in[24:24]),
	.out(wire_sft550a_out[24:24]));
	soft   sft550a_25
	( 
	.in(wire_sft550a_in[25:25]),
	.out(wire_sft550a_out[25:25]));
	soft   sft550a_26
	( 
	.in(wire_sft550a_in[26:26]),
	.out(wire_sft550a_out[26:26]));
	soft   sft550a_27
	( 
	.in(wire_sft550a_in[27:27]),
	.out(wire_sft550a_out[27:27]));
	soft   sft550a_28
	( 
	.in(wire_sft550a_in[28:28]),
	.out(wire_sft550a_out[28:28]));
	soft   sft550a_29
	( 
	.in(wire_sft550a_in[29:29]),
	.out(wire_sft550a_out[29:29]));
	soft   sft550a_30
	( 
	.in(wire_sft550a_in[30:30]),
	.out(wire_sft550a_out[30:30]));
	soft   sft550a_31
	( 
	.in(wire_sft550a_in[31:31]),
	.out(wire_sft550a_out[31:31]));
	soft   sft550a_32
	( 
	.in(wire_sft550a_in[32:32]),
	.out(wire_sft550a_out[32:32]));
	soft   sft550a_33
	( 
	.in(wire_sft550a_in[33:33]),
	.out(wire_sft550a_out[33:33]));
	soft   sft550a_34
	( 
	.in(wire_sft550a_in[34:34]),
	.out(wire_sft550a_out[34:34]));
	soft   sft550a_35
	( 
	.in(wire_sft550a_in[35:35]),
	.out(wire_sft550a_out[35:35]));
	soft   sft550a_36
	( 
	.in(wire_sft550a_in[36:36]),
	.out(wire_sft550a_out[36:36]));
	soft   sft550a_37
	( 
	.in(wire_sft550a_in[37:37]),
	.out(wire_sft550a_out[37:37]));
	soft   sft550a_38
	( 
	.in(wire_sft550a_in[38:38]),
	.out(wire_sft550a_out[38:38]));
	soft   sft550a_39
	( 
	.in(wire_sft550a_in[39:39]),
	.out(wire_sft550a_out[39:39]));
	soft   sft550a_40
	( 
	.in(wire_sft550a_in[40:40]),
	.out(wire_sft550a_out[40:40]));
	soft   sft550a_41
	( 
	.in(wire_sft550a_in[41:41]),
	.out(wire_sft550a_out[41:41]));
	soft   sft550a_42
	( 
	.in(wire_sft550a_in[42:42]),
	.out(wire_sft550a_out[42:42]));
	soft   sft550a_43
	( 
	.in(wire_sft550a_in[43:43]),
	.out(wire_sft550a_out[43:43]));
	assign
		wire_sft550a_in = {w1412w, {w1412w, {w1412w, {w1412w, {dffe493, {dffe484, {dffe475, {dffe465, {dffe453, {dffe442, {dffe431, {dffe419, {dffe406, {dffe393, {dffe380, {dffe367, {dffe354, {dffe341, {dffe328, {dffe315, {dffe302, {dffe289, {dffe276, {dffe263, {dffe250, {dffe237, {dffe224, {dffe211, {dffe198, {dffe185, {dffe172, {dffe159, {dffe146, {dffe133, {dffe121, {dffe109, {dffe100, {dffe89, {dffe79, {dffe69, {dffe62, {dffe53, {2{w1412w}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft551a_0
	( 
	.in(wire_sft551a_in[0:0]),
	.out(wire_sft551a_out[0:0]));
	soft   sft551a_1
	( 
	.in(wire_sft551a_in[1:1]),
	.out(wire_sft551a_out[1:1]));
	soft   sft551a_2
	( 
	.in(wire_sft551a_in[2:2]),
	.out(wire_sft551a_out[2:2]));
	soft   sft551a_3
	( 
	.in(wire_sft551a_in[3:3]),
	.out(wire_sft551a_out[3:3]));
	soft   sft551a_4
	( 
	.in(wire_sft551a_in[4:4]),
	.out(wire_sft551a_out[4:4]));
	soft   sft551a_5
	( 
	.in(wire_sft551a_in[5:5]),
	.out(wire_sft551a_out[5:5]));
	soft   sft551a_6
	( 
	.in(wire_sft551a_in[6:6]),
	.out(wire_sft551a_out[6:6]));
	soft   sft551a_7
	( 
	.in(wire_sft551a_in[7:7]),
	.out(wire_sft551a_out[7:7]));
	soft   sft551a_8
	( 
	.in(wire_sft551a_in[8:8]),
	.out(wire_sft551a_out[8:8]));
	soft   sft551a_9
	( 
	.in(wire_sft551a_in[9:9]),
	.out(wire_sft551a_out[9:9]));
	soft   sft551a_10
	( 
	.in(wire_sft551a_in[10:10]),
	.out(wire_sft551a_out[10:10]));
	soft   sft551a_11
	( 
	.in(wire_sft551a_in[11:11]),
	.out(wire_sft551a_out[11:11]));
	soft   sft551a_12
	( 
	.in(wire_sft551a_in[12:12]),
	.out(wire_sft551a_out[12:12]));
	soft   sft551a_13
	( 
	.in(wire_sft551a_in[13:13]),
	.out(wire_sft551a_out[13:13]));
	soft   sft551a_14
	( 
	.in(wire_sft551a_in[14:14]),
	.out(wire_sft551a_out[14:14]));
	soft   sft551a_15
	( 
	.in(wire_sft551a_in[15:15]),
	.out(wire_sft551a_out[15:15]));
	soft   sft551a_16
	( 
	.in(wire_sft551a_in[16:16]),
	.out(wire_sft551a_out[16:16]));
	soft   sft551a_17
	( 
	.in(wire_sft551a_in[17:17]),
	.out(wire_sft551a_out[17:17]));
	soft   sft551a_18
	( 
	.in(wire_sft551a_in[18:18]),
	.out(wire_sft551a_out[18:18]));
	soft   sft551a_19
	( 
	.in(wire_sft551a_in[19:19]),
	.out(wire_sft551a_out[19:19]));
	soft   sft551a_20
	( 
	.in(wire_sft551a_in[20:20]),
	.out(wire_sft551a_out[20:20]));
	soft   sft551a_21
	( 
	.in(wire_sft551a_in[21:21]),
	.out(wire_sft551a_out[21:21]));
	soft   sft551a_22
	( 
	.in(wire_sft551a_in[22:22]),
	.out(wire_sft551a_out[22:22]));
	soft   sft551a_23
	( 
	.in(wire_sft551a_in[23:23]),
	.out(wire_sft551a_out[23:23]));
	soft   sft551a_24
	( 
	.in(wire_sft551a_in[24:24]),
	.out(wire_sft551a_out[24:24]));
	soft   sft551a_25
	( 
	.in(wire_sft551a_in[25:25]),
	.out(wire_sft551a_out[25:25]));
	soft   sft551a_26
	( 
	.in(wire_sft551a_in[26:26]),
	.out(wire_sft551a_out[26:26]));
	soft   sft551a_27
	( 
	.in(wire_sft551a_in[27:27]),
	.out(wire_sft551a_out[27:27]));
	soft   sft551a_28
	( 
	.in(wire_sft551a_in[28:28]),
	.out(wire_sft551a_out[28:28]));
	soft   sft551a_29
	( 
	.in(wire_sft551a_in[29:29]),
	.out(wire_sft551a_out[29:29]));
	soft   sft551a_30
	( 
	.in(wire_sft551a_in[30:30]),
	.out(wire_sft551a_out[30:30]));
	soft   sft551a_31
	( 
	.in(wire_sft551a_in[31:31]),
	.out(wire_sft551a_out[31:31]));
	soft   sft551a_32
	( 
	.in(wire_sft551a_in[32:32]),
	.out(wire_sft551a_out[32:32]));
	soft   sft551a_33
	( 
	.in(wire_sft551a_in[33:33]),
	.out(wire_sft551a_out[33:33]));
	soft   sft551a_34
	( 
	.in(wire_sft551a_in[34:34]),
	.out(wire_sft551a_out[34:34]));
	soft   sft551a_35
	( 
	.in(wire_sft551a_in[35:35]),
	.out(wire_sft551a_out[35:35]));
	soft   sft551a_36
	( 
	.in(wire_sft551a_in[36:36]),
	.out(wire_sft551a_out[36:36]));
	soft   sft551a_37
	( 
	.in(wire_sft551a_in[37:37]),
	.out(wire_sft551a_out[37:37]));
	soft   sft551a_38
	( 
	.in(wire_sft551a_in[38:38]),
	.out(wire_sft551a_out[38:38]));
	soft   sft551a_39
	( 
	.in(wire_sft551a_in[39:39]),
	.out(wire_sft551a_out[39:39]));
	soft   sft551a_40
	( 
	.in(wire_sft551a_in[40:40]),
	.out(wire_sft551a_out[40:40]));
	soft   sft551a_41
	( 
	.in(wire_sft551a_in[41:41]),
	.out(wire_sft551a_out[41:41]));
	soft   sft551a_42
	( 
	.in(wire_sft551a_in[42:42]),
	.out(wire_sft551a_out[42:42]));
	soft   sft551a_43
	( 
	.in(wire_sft551a_in[43:43]),
	.out(wire_sft551a_out[43:43]));
	assign
		wire_sft551a_in = wire_add547_result;
	soft   sft553a_0
	( 
	.in(wire_sft553a_in[0:0]),
	.out(wire_sft553a_out[0:0]));
	soft   sft553a_1
	( 
	.in(wire_sft553a_in[1:1]),
	.out(wire_sft553a_out[1:1]));
	soft   sft553a_2
	( 
	.in(wire_sft553a_in[2:2]),
	.out(wire_sft553a_out[2:2]));
	soft   sft553a_3
	( 
	.in(wire_sft553a_in[3:3]),
	.out(wire_sft553a_out[3:3]));
	soft   sft553a_4
	( 
	.in(wire_sft553a_in[4:4]),
	.out(wire_sft553a_out[4:4]));
	soft   sft553a_5
	( 
	.in(wire_sft553a_in[5:5]),
	.out(wire_sft553a_out[5:5]));
	soft   sft553a_6
	( 
	.in(wire_sft553a_in[6:6]),
	.out(wire_sft553a_out[6:6]));
	soft   sft553a_7
	( 
	.in(wire_sft553a_in[7:7]),
	.out(wire_sft553a_out[7:7]));
	soft   sft553a_8
	( 
	.in(wire_sft553a_in[8:8]),
	.out(wire_sft553a_out[8:8]));
	soft   sft553a_9
	( 
	.in(wire_sft553a_in[9:9]),
	.out(wire_sft553a_out[9:9]));
	soft   sft553a_10
	( 
	.in(wire_sft553a_in[10:10]),
	.out(wire_sft553a_out[10:10]));
	soft   sft553a_11
	( 
	.in(wire_sft553a_in[11:11]),
	.out(wire_sft553a_out[11:11]));
	soft   sft553a_12
	( 
	.in(wire_sft553a_in[12:12]),
	.out(wire_sft553a_out[12:12]));
	soft   sft553a_13
	( 
	.in(wire_sft553a_in[13:13]),
	.out(wire_sft553a_out[13:13]));
	soft   sft553a_14
	( 
	.in(wire_sft553a_in[14:14]),
	.out(wire_sft553a_out[14:14]));
	soft   sft553a_15
	( 
	.in(wire_sft553a_in[15:15]),
	.out(wire_sft553a_out[15:15]));
	soft   sft553a_16
	( 
	.in(wire_sft553a_in[16:16]),
	.out(wire_sft553a_out[16:16]));
	soft   sft553a_17
	( 
	.in(wire_sft553a_in[17:17]),
	.out(wire_sft553a_out[17:17]));
	soft   sft553a_18
	( 
	.in(wire_sft553a_in[18:18]),
	.out(wire_sft553a_out[18:18]));
	soft   sft553a_19
	( 
	.in(wire_sft553a_in[19:19]),
	.out(wire_sft553a_out[19:19]));
	soft   sft553a_20
	( 
	.in(wire_sft553a_in[20:20]),
	.out(wire_sft553a_out[20:20]));
	soft   sft553a_21
	( 
	.in(wire_sft553a_in[21:21]),
	.out(wire_sft553a_out[21:21]));
	soft   sft553a_22
	( 
	.in(wire_sft553a_in[22:22]),
	.out(wire_sft553a_out[22:22]));
	soft   sft553a_23
	( 
	.in(wire_sft553a_in[23:23]),
	.out(wire_sft553a_out[23:23]));
	soft   sft553a_24
	( 
	.in(wire_sft553a_in[24:24]),
	.out(wire_sft553a_out[24:24]));
	soft   sft553a_25
	( 
	.in(wire_sft553a_in[25:25]),
	.out(wire_sft553a_out[25:25]));
	soft   sft553a_26
	( 
	.in(wire_sft553a_in[26:26]),
	.out(wire_sft553a_out[26:26]));
	soft   sft553a_27
	( 
	.in(wire_sft553a_in[27:27]),
	.out(wire_sft553a_out[27:27]));
	soft   sft553a_28
	( 
	.in(wire_sft553a_in[28:28]),
	.out(wire_sft553a_out[28:28]));
	soft   sft553a_29
	( 
	.in(wire_sft553a_in[29:29]),
	.out(wire_sft553a_out[29:29]));
	soft   sft553a_30
	( 
	.in(wire_sft553a_in[30:30]),
	.out(wire_sft553a_out[30:30]));
	soft   sft553a_31
	( 
	.in(wire_sft553a_in[31:31]),
	.out(wire_sft553a_out[31:31]));
	soft   sft553a_32
	( 
	.in(wire_sft553a_in[32:32]),
	.out(wire_sft553a_out[32:32]));
	soft   sft553a_33
	( 
	.in(wire_sft553a_in[33:33]),
	.out(wire_sft553a_out[33:33]));
	soft   sft553a_34
	( 
	.in(wire_sft553a_in[34:34]),
	.out(wire_sft553a_out[34:34]));
	soft   sft553a_35
	( 
	.in(wire_sft553a_in[35:35]),
	.out(wire_sft553a_out[35:35]));
	assign
		wire_sft553a_in = {w1412w, {dffe486, {dffe477, {dffe467, {dffe455, {dffe444, {dffe433, {dffe421, {dffe408, {dffe395, {dffe382, {dffe369, {dffe356, {dffe343, {dffe330, {dffe317, {dffe304, {dffe291, {dffe278, {dffe265, {dffe252, {dffe239, {dffe226, {dffe213, {dffe200, {dffe187, {dffe174, {dffe161, {dffe148, {dffe135, {dffe123, {dffe111, {dffe102, {dffe91, {dffe81, dffe71}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft554a_0
	( 
	.in(wire_sft554a_in[0:0]),
	.out(wire_sft554a_out[0:0]));
	soft   sft554a_1
	( 
	.in(wire_sft554a_in[1:1]),
	.out(wire_sft554a_out[1:1]));
	soft   sft554a_2
	( 
	.in(wire_sft554a_in[2:2]),
	.out(wire_sft554a_out[2:2]));
	soft   sft554a_3
	( 
	.in(wire_sft554a_in[3:3]),
	.out(wire_sft554a_out[3:3]));
	soft   sft554a_4
	( 
	.in(wire_sft554a_in[4:4]),
	.out(wire_sft554a_out[4:4]));
	soft   sft554a_5
	( 
	.in(wire_sft554a_in[5:5]),
	.out(wire_sft554a_out[5:5]));
	soft   sft554a_6
	( 
	.in(wire_sft554a_in[6:6]),
	.out(wire_sft554a_out[6:6]));
	soft   sft554a_7
	( 
	.in(wire_sft554a_in[7:7]),
	.out(wire_sft554a_out[7:7]));
	soft   sft554a_8
	( 
	.in(wire_sft554a_in[8:8]),
	.out(wire_sft554a_out[8:8]));
	soft   sft554a_9
	( 
	.in(wire_sft554a_in[9:9]),
	.out(wire_sft554a_out[9:9]));
	soft   sft554a_10
	( 
	.in(wire_sft554a_in[10:10]),
	.out(wire_sft554a_out[10:10]));
	soft   sft554a_11
	( 
	.in(wire_sft554a_in[11:11]),
	.out(wire_sft554a_out[11:11]));
	soft   sft554a_12
	( 
	.in(wire_sft554a_in[12:12]),
	.out(wire_sft554a_out[12:12]));
	soft   sft554a_13
	( 
	.in(wire_sft554a_in[13:13]),
	.out(wire_sft554a_out[13:13]));
	soft   sft554a_14
	( 
	.in(wire_sft554a_in[14:14]),
	.out(wire_sft554a_out[14:14]));
	soft   sft554a_15
	( 
	.in(wire_sft554a_in[15:15]),
	.out(wire_sft554a_out[15:15]));
	soft   sft554a_16
	( 
	.in(wire_sft554a_in[16:16]),
	.out(wire_sft554a_out[16:16]));
	soft   sft554a_17
	( 
	.in(wire_sft554a_in[17:17]),
	.out(wire_sft554a_out[17:17]));
	soft   sft554a_18
	( 
	.in(wire_sft554a_in[18:18]),
	.out(wire_sft554a_out[18:18]));
	soft   sft554a_19
	( 
	.in(wire_sft554a_in[19:19]),
	.out(wire_sft554a_out[19:19]));
	soft   sft554a_20
	( 
	.in(wire_sft554a_in[20:20]),
	.out(wire_sft554a_out[20:20]));
	soft   sft554a_21
	( 
	.in(wire_sft554a_in[21:21]),
	.out(wire_sft554a_out[21:21]));
	soft   sft554a_22
	( 
	.in(wire_sft554a_in[22:22]),
	.out(wire_sft554a_out[22:22]));
	soft   sft554a_23
	( 
	.in(wire_sft554a_in[23:23]),
	.out(wire_sft554a_out[23:23]));
	soft   sft554a_24
	( 
	.in(wire_sft554a_in[24:24]),
	.out(wire_sft554a_out[24:24]));
	soft   sft554a_25
	( 
	.in(wire_sft554a_in[25:25]),
	.out(wire_sft554a_out[25:25]));
	soft   sft554a_26
	( 
	.in(wire_sft554a_in[26:26]),
	.out(wire_sft554a_out[26:26]));
	soft   sft554a_27
	( 
	.in(wire_sft554a_in[27:27]),
	.out(wire_sft554a_out[27:27]));
	soft   sft554a_28
	( 
	.in(wire_sft554a_in[28:28]),
	.out(wire_sft554a_out[28:28]));
	soft   sft554a_29
	( 
	.in(wire_sft554a_in[29:29]),
	.out(wire_sft554a_out[29:29]));
	soft   sft554a_30
	( 
	.in(wire_sft554a_in[30:30]),
	.out(wire_sft554a_out[30:30]));
	soft   sft554a_31
	( 
	.in(wire_sft554a_in[31:31]),
	.out(wire_sft554a_out[31:31]));
	soft   sft554a_32
	( 
	.in(wire_sft554a_in[32:32]),
	.out(wire_sft554a_out[32:32]));
	soft   sft554a_33
	( 
	.in(wire_sft554a_in[33:33]),
	.out(wire_sft554a_out[33:33]));
	soft   sft554a_34
	( 
	.in(wire_sft554a_in[34:34]),
	.out(wire_sft554a_out[34:34]));
	soft   sft554a_35
	( 
	.in(wire_sft554a_in[35:35]),
	.out(wire_sft554a_out[35:35]));
	assign
		wire_sft554a_in = {w1412w, {w1412w, {w1412w, {dffe468, {dffe456, {dffe445, {dffe434, {dffe422, {dffe409, {dffe396, {dffe383, {dffe370, {dffe357, {dffe344, {dffe331, {dffe318, {dffe305, {dffe292, {dffe279, {dffe266, {dffe253, {dffe240, {dffe227, {dffe214, {dffe201, {dffe188, {dffe175, {dffe162, {dffe149, {dffe136, {dffe124, {dffe112, {dffe103, {dffe92, {dffe82, dffe72}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft555a_0
	( 
	.in(wire_sft555a_in[0:0]),
	.out(wire_sft555a_out[0:0]));
	soft   sft555a_1
	( 
	.in(wire_sft555a_in[1:1]),
	.out(wire_sft555a_out[1:1]));
	soft   sft555a_2
	( 
	.in(wire_sft555a_in[2:2]),
	.out(wire_sft555a_out[2:2]));
	soft   sft555a_3
	( 
	.in(wire_sft555a_in[3:3]),
	.out(wire_sft555a_out[3:3]));
	soft   sft555a_4
	( 
	.in(wire_sft555a_in[4:4]),
	.out(wire_sft555a_out[4:4]));
	soft   sft555a_5
	( 
	.in(wire_sft555a_in[5:5]),
	.out(wire_sft555a_out[5:5]));
	soft   sft555a_6
	( 
	.in(wire_sft555a_in[6:6]),
	.out(wire_sft555a_out[6:6]));
	soft   sft555a_7
	( 
	.in(wire_sft555a_in[7:7]),
	.out(wire_sft555a_out[7:7]));
	soft   sft555a_8
	( 
	.in(wire_sft555a_in[8:8]),
	.out(wire_sft555a_out[8:8]));
	soft   sft555a_9
	( 
	.in(wire_sft555a_in[9:9]),
	.out(wire_sft555a_out[9:9]));
	soft   sft555a_10
	( 
	.in(wire_sft555a_in[10:10]),
	.out(wire_sft555a_out[10:10]));
	soft   sft555a_11
	( 
	.in(wire_sft555a_in[11:11]),
	.out(wire_sft555a_out[11:11]));
	soft   sft555a_12
	( 
	.in(wire_sft555a_in[12:12]),
	.out(wire_sft555a_out[12:12]));
	soft   sft555a_13
	( 
	.in(wire_sft555a_in[13:13]),
	.out(wire_sft555a_out[13:13]));
	soft   sft555a_14
	( 
	.in(wire_sft555a_in[14:14]),
	.out(wire_sft555a_out[14:14]));
	soft   sft555a_15
	( 
	.in(wire_sft555a_in[15:15]),
	.out(wire_sft555a_out[15:15]));
	soft   sft555a_16
	( 
	.in(wire_sft555a_in[16:16]),
	.out(wire_sft555a_out[16:16]));
	soft   sft555a_17
	( 
	.in(wire_sft555a_in[17:17]),
	.out(wire_sft555a_out[17:17]));
	soft   sft555a_18
	( 
	.in(wire_sft555a_in[18:18]),
	.out(wire_sft555a_out[18:18]));
	soft   sft555a_19
	( 
	.in(wire_sft555a_in[19:19]),
	.out(wire_sft555a_out[19:19]));
	soft   sft555a_20
	( 
	.in(wire_sft555a_in[20:20]),
	.out(wire_sft555a_out[20:20]));
	soft   sft555a_21
	( 
	.in(wire_sft555a_in[21:21]),
	.out(wire_sft555a_out[21:21]));
	soft   sft555a_22
	( 
	.in(wire_sft555a_in[22:22]),
	.out(wire_sft555a_out[22:22]));
	soft   sft555a_23
	( 
	.in(wire_sft555a_in[23:23]),
	.out(wire_sft555a_out[23:23]));
	soft   sft555a_24
	( 
	.in(wire_sft555a_in[24:24]),
	.out(wire_sft555a_out[24:24]));
	soft   sft555a_25
	( 
	.in(wire_sft555a_in[25:25]),
	.out(wire_sft555a_out[25:25]));
	soft   sft555a_26
	( 
	.in(wire_sft555a_in[26:26]),
	.out(wire_sft555a_out[26:26]));
	soft   sft555a_27
	( 
	.in(wire_sft555a_in[27:27]),
	.out(wire_sft555a_out[27:27]));
	soft   sft555a_28
	( 
	.in(wire_sft555a_in[28:28]),
	.out(wire_sft555a_out[28:28]));
	soft   sft555a_29
	( 
	.in(wire_sft555a_in[29:29]),
	.out(wire_sft555a_out[29:29]));
	soft   sft555a_30
	( 
	.in(wire_sft555a_in[30:30]),
	.out(wire_sft555a_out[30:30]));
	soft   sft555a_31
	( 
	.in(wire_sft555a_in[31:31]),
	.out(wire_sft555a_out[31:31]));
	soft   sft555a_32
	( 
	.in(wire_sft555a_in[32:32]),
	.out(wire_sft555a_out[32:32]));
	soft   sft555a_33
	( 
	.in(wire_sft555a_in[33:33]),
	.out(wire_sft555a_out[33:33]));
	soft   sft555a_34
	( 
	.in(wire_sft555a_in[34:34]),
	.out(wire_sft555a_out[34:34]));
	soft   sft555a_35
	( 
	.in(wire_sft555a_in[35:35]),
	.out(wire_sft555a_out[35:35]));
	assign
		wire_sft555a_in = {w1412w, {w1412w, {w1412w, {w1412w, {dffe457, {dffe446, {dffe435, {dffe423, {dffe410, {dffe397, {dffe384, {dffe371, {dffe358, {dffe345, {dffe332, {dffe319, {dffe306, {dffe293, {dffe280, {dffe267, {dffe254, {dffe241, {dffe228, {dffe215, {dffe202, {dffe189, {dffe176, {dffe163, {dffe150, {dffe137, {dffe125, {dffe113, {dffe104, {dffe93, {2{w1412w}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft556a_0
	( 
	.in(wire_sft556a_in[0:0]),
	.out(wire_sft556a_out[0:0]));
	soft   sft556a_1
	( 
	.in(wire_sft556a_in[1:1]),
	.out(wire_sft556a_out[1:1]));
	soft   sft556a_2
	( 
	.in(wire_sft556a_in[2:2]),
	.out(wire_sft556a_out[2:2]));
	soft   sft556a_3
	( 
	.in(wire_sft556a_in[3:3]),
	.out(wire_sft556a_out[3:3]));
	soft   sft556a_4
	( 
	.in(wire_sft556a_in[4:4]),
	.out(wire_sft556a_out[4:4]));
	soft   sft556a_5
	( 
	.in(wire_sft556a_in[5:5]),
	.out(wire_sft556a_out[5:5]));
	soft   sft556a_6
	( 
	.in(wire_sft556a_in[6:6]),
	.out(wire_sft556a_out[6:6]));
	soft   sft556a_7
	( 
	.in(wire_sft556a_in[7:7]),
	.out(wire_sft556a_out[7:7]));
	soft   sft556a_8
	( 
	.in(wire_sft556a_in[8:8]),
	.out(wire_sft556a_out[8:8]));
	soft   sft556a_9
	( 
	.in(wire_sft556a_in[9:9]),
	.out(wire_sft556a_out[9:9]));
	soft   sft556a_10
	( 
	.in(wire_sft556a_in[10:10]),
	.out(wire_sft556a_out[10:10]));
	soft   sft556a_11
	( 
	.in(wire_sft556a_in[11:11]),
	.out(wire_sft556a_out[11:11]));
	soft   sft556a_12
	( 
	.in(wire_sft556a_in[12:12]),
	.out(wire_sft556a_out[12:12]));
	soft   sft556a_13
	( 
	.in(wire_sft556a_in[13:13]),
	.out(wire_sft556a_out[13:13]));
	soft   sft556a_14
	( 
	.in(wire_sft556a_in[14:14]),
	.out(wire_sft556a_out[14:14]));
	soft   sft556a_15
	( 
	.in(wire_sft556a_in[15:15]),
	.out(wire_sft556a_out[15:15]));
	soft   sft556a_16
	( 
	.in(wire_sft556a_in[16:16]),
	.out(wire_sft556a_out[16:16]));
	soft   sft556a_17
	( 
	.in(wire_sft556a_in[17:17]),
	.out(wire_sft556a_out[17:17]));
	soft   sft556a_18
	( 
	.in(wire_sft556a_in[18:18]),
	.out(wire_sft556a_out[18:18]));
	soft   sft556a_19
	( 
	.in(wire_sft556a_in[19:19]),
	.out(wire_sft556a_out[19:19]));
	soft   sft556a_20
	( 
	.in(wire_sft556a_in[20:20]),
	.out(wire_sft556a_out[20:20]));
	soft   sft556a_21
	( 
	.in(wire_sft556a_in[21:21]),
	.out(wire_sft556a_out[21:21]));
	soft   sft556a_22
	( 
	.in(wire_sft556a_in[22:22]),
	.out(wire_sft556a_out[22:22]));
	soft   sft556a_23
	( 
	.in(wire_sft556a_in[23:23]),
	.out(wire_sft556a_out[23:23]));
	soft   sft556a_24
	( 
	.in(wire_sft556a_in[24:24]),
	.out(wire_sft556a_out[24:24]));
	soft   sft556a_25
	( 
	.in(wire_sft556a_in[25:25]),
	.out(wire_sft556a_out[25:25]));
	soft   sft556a_26
	( 
	.in(wire_sft556a_in[26:26]),
	.out(wire_sft556a_out[26:26]));
	soft   sft556a_27
	( 
	.in(wire_sft556a_in[27:27]),
	.out(wire_sft556a_out[27:27]));
	soft   sft556a_28
	( 
	.in(wire_sft556a_in[28:28]),
	.out(wire_sft556a_out[28:28]));
	soft   sft556a_29
	( 
	.in(wire_sft556a_in[29:29]),
	.out(wire_sft556a_out[29:29]));
	soft   sft556a_30
	( 
	.in(wire_sft556a_in[30:30]),
	.out(wire_sft556a_out[30:30]));
	soft   sft556a_31
	( 
	.in(wire_sft556a_in[31:31]),
	.out(wire_sft556a_out[31:31]));
	soft   sft556a_32
	( 
	.in(wire_sft556a_in[32:32]),
	.out(wire_sft556a_out[32:32]));
	soft   sft556a_33
	( 
	.in(wire_sft556a_in[33:33]),
	.out(wire_sft556a_out[33:33]));
	soft   sft556a_34
	( 
	.in(wire_sft556a_in[34:34]),
	.out(wire_sft556a_out[34:34]));
	soft   sft556a_35
	( 
	.in(wire_sft556a_in[35:35]),
	.out(wire_sft556a_out[35:35]));
	assign
		wire_sft556a_in = wire_add552_result;
	soft   sft558a_0
	( 
	.in(wire_sft558a_in[0:0]),
	.out(wire_sft558a_out[0:0]));
	soft   sft558a_1
	( 
	.in(wire_sft558a_in[1:1]),
	.out(wire_sft558a_out[1:1]));
	soft   sft558a_2
	( 
	.in(wire_sft558a_in[2:2]),
	.out(wire_sft558a_out[2:2]));
	soft   sft558a_3
	( 
	.in(wire_sft558a_in[3:3]),
	.out(wire_sft558a_out[3:3]));
	soft   sft558a_4
	( 
	.in(wire_sft558a_in[4:4]),
	.out(wire_sft558a_out[4:4]));
	soft   sft558a_5
	( 
	.in(wire_sft558a_in[5:5]),
	.out(wire_sft558a_out[5:5]));
	soft   sft558a_6
	( 
	.in(wire_sft558a_in[6:6]),
	.out(wire_sft558a_out[6:6]));
	soft   sft558a_7
	( 
	.in(wire_sft558a_in[7:7]),
	.out(wire_sft558a_out[7:7]));
	soft   sft558a_8
	( 
	.in(wire_sft558a_in[8:8]),
	.out(wire_sft558a_out[8:8]));
	soft   sft558a_9
	( 
	.in(wire_sft558a_in[9:9]),
	.out(wire_sft558a_out[9:9]));
	soft   sft558a_10
	( 
	.in(wire_sft558a_in[10:10]),
	.out(wire_sft558a_out[10:10]));
	soft   sft558a_11
	( 
	.in(wire_sft558a_in[11:11]),
	.out(wire_sft558a_out[11:11]));
	soft   sft558a_12
	( 
	.in(wire_sft558a_in[12:12]),
	.out(wire_sft558a_out[12:12]));
	soft   sft558a_13
	( 
	.in(wire_sft558a_in[13:13]),
	.out(wire_sft558a_out[13:13]));
	soft   sft558a_14
	( 
	.in(wire_sft558a_in[14:14]),
	.out(wire_sft558a_out[14:14]));
	soft   sft558a_15
	( 
	.in(wire_sft558a_in[15:15]),
	.out(wire_sft558a_out[15:15]));
	soft   sft558a_16
	( 
	.in(wire_sft558a_in[16:16]),
	.out(wire_sft558a_out[16:16]));
	soft   sft558a_17
	( 
	.in(wire_sft558a_in[17:17]),
	.out(wire_sft558a_out[17:17]));
	soft   sft558a_18
	( 
	.in(wire_sft558a_in[18:18]),
	.out(wire_sft558a_out[18:18]));
	soft   sft558a_19
	( 
	.in(wire_sft558a_in[19:19]),
	.out(wire_sft558a_out[19:19]));
	soft   sft558a_20
	( 
	.in(wire_sft558a_in[20:20]),
	.out(wire_sft558a_out[20:20]));
	soft   sft558a_21
	( 
	.in(wire_sft558a_in[21:21]),
	.out(wire_sft558a_out[21:21]));
	soft   sft558a_22
	( 
	.in(wire_sft558a_in[22:22]),
	.out(wire_sft558a_out[22:22]));
	soft   sft558a_23
	( 
	.in(wire_sft558a_in[23:23]),
	.out(wire_sft558a_out[23:23]));
	soft   sft558a_24
	( 
	.in(wire_sft558a_in[24:24]),
	.out(wire_sft558a_out[24:24]));
	soft   sft558a_25
	( 
	.in(wire_sft558a_in[25:25]),
	.out(wire_sft558a_out[25:25]));
	soft   sft558a_26
	( 
	.in(wire_sft558a_in[26:26]),
	.out(wire_sft558a_out[26:26]));
	soft   sft558a_27
	( 
	.in(wire_sft558a_in[27:27]),
	.out(wire_sft558a_out[27:27]));
	assign
		wire_sft558a_in = {w1412w, {dffe448, {dffe437, {dffe425, {dffe412, {dffe399, {dffe386, {dffe373, {dffe360, {dffe347, {dffe334, {dffe321, {dffe308, {dffe295, {dffe282, {dffe269, {dffe256, {dffe243, {dffe230, {dffe217, {dffe204, {dffe191, {dffe178, {dffe165, {dffe152, {dffe139, {dffe127, dffe115}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft559a_0
	( 
	.in(wire_sft559a_in[0:0]),
	.out(wire_sft559a_out[0:0]));
	soft   sft559a_1
	( 
	.in(wire_sft559a_in[1:1]),
	.out(wire_sft559a_out[1:1]));
	soft   sft559a_2
	( 
	.in(wire_sft559a_in[2:2]),
	.out(wire_sft559a_out[2:2]));
	soft   sft559a_3
	( 
	.in(wire_sft559a_in[3:3]),
	.out(wire_sft559a_out[3:3]));
	soft   sft559a_4
	( 
	.in(wire_sft559a_in[4:4]),
	.out(wire_sft559a_out[4:4]));
	soft   sft559a_5
	( 
	.in(wire_sft559a_in[5:5]),
	.out(wire_sft559a_out[5:5]));
	soft   sft559a_6
	( 
	.in(wire_sft559a_in[6:6]),
	.out(wire_sft559a_out[6:6]));
	soft   sft559a_7
	( 
	.in(wire_sft559a_in[7:7]),
	.out(wire_sft559a_out[7:7]));
	soft   sft559a_8
	( 
	.in(wire_sft559a_in[8:8]),
	.out(wire_sft559a_out[8:8]));
	soft   sft559a_9
	( 
	.in(wire_sft559a_in[9:9]),
	.out(wire_sft559a_out[9:9]));
	soft   sft559a_10
	( 
	.in(wire_sft559a_in[10:10]),
	.out(wire_sft559a_out[10:10]));
	soft   sft559a_11
	( 
	.in(wire_sft559a_in[11:11]),
	.out(wire_sft559a_out[11:11]));
	soft   sft559a_12
	( 
	.in(wire_sft559a_in[12:12]),
	.out(wire_sft559a_out[12:12]));
	soft   sft559a_13
	( 
	.in(wire_sft559a_in[13:13]),
	.out(wire_sft559a_out[13:13]));
	soft   sft559a_14
	( 
	.in(wire_sft559a_in[14:14]),
	.out(wire_sft559a_out[14:14]));
	soft   sft559a_15
	( 
	.in(wire_sft559a_in[15:15]),
	.out(wire_sft559a_out[15:15]));
	soft   sft559a_16
	( 
	.in(wire_sft559a_in[16:16]),
	.out(wire_sft559a_out[16:16]));
	soft   sft559a_17
	( 
	.in(wire_sft559a_in[17:17]),
	.out(wire_sft559a_out[17:17]));
	soft   sft559a_18
	( 
	.in(wire_sft559a_in[18:18]),
	.out(wire_sft559a_out[18:18]));
	soft   sft559a_19
	( 
	.in(wire_sft559a_in[19:19]),
	.out(wire_sft559a_out[19:19]));
	soft   sft559a_20
	( 
	.in(wire_sft559a_in[20:20]),
	.out(wire_sft559a_out[20:20]));
	soft   sft559a_21
	( 
	.in(wire_sft559a_in[21:21]),
	.out(wire_sft559a_out[21:21]));
	soft   sft559a_22
	( 
	.in(wire_sft559a_in[22:22]),
	.out(wire_sft559a_out[22:22]));
	soft   sft559a_23
	( 
	.in(wire_sft559a_in[23:23]),
	.out(wire_sft559a_out[23:23]));
	soft   sft559a_24
	( 
	.in(wire_sft559a_in[24:24]),
	.out(wire_sft559a_out[24:24]));
	soft   sft559a_25
	( 
	.in(wire_sft559a_in[25:25]),
	.out(wire_sft559a_out[25:25]));
	soft   sft559a_26
	( 
	.in(wire_sft559a_in[26:26]),
	.out(wire_sft559a_out[26:26]));
	soft   sft559a_27
	( 
	.in(wire_sft559a_in[27:27]),
	.out(wire_sft559a_out[27:27]));
	assign
		wire_sft559a_in = {w1412w, {w1412w, {w1412w, {dffe426, {dffe413, {dffe400, {dffe387, {dffe374, {dffe361, {dffe348, {dffe335, {dffe322, {dffe309, {dffe296, {dffe283, {dffe270, {dffe257, {dffe244, {dffe231, {dffe218, {dffe205, {dffe192, {dffe179, {dffe166, {dffe153, {dffe140, {dffe128, dffe116}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft560a_0
	( 
	.in(wire_sft560a_in[0:0]),
	.out(wire_sft560a_out[0:0]));
	soft   sft560a_1
	( 
	.in(wire_sft560a_in[1:1]),
	.out(wire_sft560a_out[1:1]));
	soft   sft560a_2
	( 
	.in(wire_sft560a_in[2:2]),
	.out(wire_sft560a_out[2:2]));
	soft   sft560a_3
	( 
	.in(wire_sft560a_in[3:3]),
	.out(wire_sft560a_out[3:3]));
	soft   sft560a_4
	( 
	.in(wire_sft560a_in[4:4]),
	.out(wire_sft560a_out[4:4]));
	soft   sft560a_5
	( 
	.in(wire_sft560a_in[5:5]),
	.out(wire_sft560a_out[5:5]));
	soft   sft560a_6
	( 
	.in(wire_sft560a_in[6:6]),
	.out(wire_sft560a_out[6:6]));
	soft   sft560a_7
	( 
	.in(wire_sft560a_in[7:7]),
	.out(wire_sft560a_out[7:7]));
	soft   sft560a_8
	( 
	.in(wire_sft560a_in[8:8]),
	.out(wire_sft560a_out[8:8]));
	soft   sft560a_9
	( 
	.in(wire_sft560a_in[9:9]),
	.out(wire_sft560a_out[9:9]));
	soft   sft560a_10
	( 
	.in(wire_sft560a_in[10:10]),
	.out(wire_sft560a_out[10:10]));
	soft   sft560a_11
	( 
	.in(wire_sft560a_in[11:11]),
	.out(wire_sft560a_out[11:11]));
	soft   sft560a_12
	( 
	.in(wire_sft560a_in[12:12]),
	.out(wire_sft560a_out[12:12]));
	soft   sft560a_13
	( 
	.in(wire_sft560a_in[13:13]),
	.out(wire_sft560a_out[13:13]));
	soft   sft560a_14
	( 
	.in(wire_sft560a_in[14:14]),
	.out(wire_sft560a_out[14:14]));
	soft   sft560a_15
	( 
	.in(wire_sft560a_in[15:15]),
	.out(wire_sft560a_out[15:15]));
	soft   sft560a_16
	( 
	.in(wire_sft560a_in[16:16]),
	.out(wire_sft560a_out[16:16]));
	soft   sft560a_17
	( 
	.in(wire_sft560a_in[17:17]),
	.out(wire_sft560a_out[17:17]));
	soft   sft560a_18
	( 
	.in(wire_sft560a_in[18:18]),
	.out(wire_sft560a_out[18:18]));
	soft   sft560a_19
	( 
	.in(wire_sft560a_in[19:19]),
	.out(wire_sft560a_out[19:19]));
	soft   sft560a_20
	( 
	.in(wire_sft560a_in[20:20]),
	.out(wire_sft560a_out[20:20]));
	soft   sft560a_21
	( 
	.in(wire_sft560a_in[21:21]),
	.out(wire_sft560a_out[21:21]));
	soft   sft560a_22
	( 
	.in(wire_sft560a_in[22:22]),
	.out(wire_sft560a_out[22:22]));
	soft   sft560a_23
	( 
	.in(wire_sft560a_in[23:23]),
	.out(wire_sft560a_out[23:23]));
	soft   sft560a_24
	( 
	.in(wire_sft560a_in[24:24]),
	.out(wire_sft560a_out[24:24]));
	soft   sft560a_25
	( 
	.in(wire_sft560a_in[25:25]),
	.out(wire_sft560a_out[25:25]));
	soft   sft560a_26
	( 
	.in(wire_sft560a_in[26:26]),
	.out(wire_sft560a_out[26:26]));
	soft   sft560a_27
	( 
	.in(wire_sft560a_in[27:27]),
	.out(wire_sft560a_out[27:27]));
	assign
		wire_sft560a_in = {w1412w, {w1412w, {w1412w, {w1412w, {dffe414, {dffe401, {dffe388, {dffe375, {dffe362, {dffe349, {dffe336, {dffe323, {dffe310, {dffe297, {dffe284, {dffe271, {dffe258, {dffe245, {dffe232, {dffe219, {dffe206, {dffe193, {dffe180, {dffe167, {dffe154, {dffe141, {2{w1412w}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft561a_0
	( 
	.in(wire_sft561a_in[0:0]),
	.out(wire_sft561a_out[0:0]));
	soft   sft561a_1
	( 
	.in(wire_sft561a_in[1:1]),
	.out(wire_sft561a_out[1:1]));
	soft   sft561a_2
	( 
	.in(wire_sft561a_in[2:2]),
	.out(wire_sft561a_out[2:2]));
	soft   sft561a_3
	( 
	.in(wire_sft561a_in[3:3]),
	.out(wire_sft561a_out[3:3]));
	soft   sft561a_4
	( 
	.in(wire_sft561a_in[4:4]),
	.out(wire_sft561a_out[4:4]));
	soft   sft561a_5
	( 
	.in(wire_sft561a_in[5:5]),
	.out(wire_sft561a_out[5:5]));
	soft   sft561a_6
	( 
	.in(wire_sft561a_in[6:6]),
	.out(wire_sft561a_out[6:6]));
	soft   sft561a_7
	( 
	.in(wire_sft561a_in[7:7]),
	.out(wire_sft561a_out[7:7]));
	soft   sft561a_8
	( 
	.in(wire_sft561a_in[8:8]),
	.out(wire_sft561a_out[8:8]));
	soft   sft561a_9
	( 
	.in(wire_sft561a_in[9:9]),
	.out(wire_sft561a_out[9:9]));
	soft   sft561a_10
	( 
	.in(wire_sft561a_in[10:10]),
	.out(wire_sft561a_out[10:10]));
	soft   sft561a_11
	( 
	.in(wire_sft561a_in[11:11]),
	.out(wire_sft561a_out[11:11]));
	soft   sft561a_12
	( 
	.in(wire_sft561a_in[12:12]),
	.out(wire_sft561a_out[12:12]));
	soft   sft561a_13
	( 
	.in(wire_sft561a_in[13:13]),
	.out(wire_sft561a_out[13:13]));
	soft   sft561a_14
	( 
	.in(wire_sft561a_in[14:14]),
	.out(wire_sft561a_out[14:14]));
	soft   sft561a_15
	( 
	.in(wire_sft561a_in[15:15]),
	.out(wire_sft561a_out[15:15]));
	soft   sft561a_16
	( 
	.in(wire_sft561a_in[16:16]),
	.out(wire_sft561a_out[16:16]));
	soft   sft561a_17
	( 
	.in(wire_sft561a_in[17:17]),
	.out(wire_sft561a_out[17:17]));
	soft   sft561a_18
	( 
	.in(wire_sft561a_in[18:18]),
	.out(wire_sft561a_out[18:18]));
	soft   sft561a_19
	( 
	.in(wire_sft561a_in[19:19]),
	.out(wire_sft561a_out[19:19]));
	soft   sft561a_20
	( 
	.in(wire_sft561a_in[20:20]),
	.out(wire_sft561a_out[20:20]));
	soft   sft561a_21
	( 
	.in(wire_sft561a_in[21:21]),
	.out(wire_sft561a_out[21:21]));
	soft   sft561a_22
	( 
	.in(wire_sft561a_in[22:22]),
	.out(wire_sft561a_out[22:22]));
	soft   sft561a_23
	( 
	.in(wire_sft561a_in[23:23]),
	.out(wire_sft561a_out[23:23]));
	soft   sft561a_24
	( 
	.in(wire_sft561a_in[24:24]),
	.out(wire_sft561a_out[24:24]));
	soft   sft561a_25
	( 
	.in(wire_sft561a_in[25:25]),
	.out(wire_sft561a_out[25:25]));
	soft   sft561a_26
	( 
	.in(wire_sft561a_in[26:26]),
	.out(wire_sft561a_out[26:26]));
	soft   sft561a_27
	( 
	.in(wire_sft561a_in[27:27]),
	.out(wire_sft561a_out[27:27]));
	assign
		wire_sft561a_in = wire_add557_result;
	soft   sft563a_0
	( 
	.in(wire_sft563a_in[0:0]),
	.out(wire_sft563a_out[0:0]));
	soft   sft563a_1
	( 
	.in(wire_sft563a_in[1:1]),
	.out(wire_sft563a_out[1:1]));
	soft   sft563a_2
	( 
	.in(wire_sft563a_in[2:2]),
	.out(wire_sft563a_out[2:2]));
	soft   sft563a_3
	( 
	.in(wire_sft563a_in[3:3]),
	.out(wire_sft563a_out[3:3]));
	soft   sft563a_4
	( 
	.in(wire_sft563a_in[4:4]),
	.out(wire_sft563a_out[4:4]));
	soft   sft563a_5
	( 
	.in(wire_sft563a_in[5:5]),
	.out(wire_sft563a_out[5:5]));
	soft   sft563a_6
	( 
	.in(wire_sft563a_in[6:6]),
	.out(wire_sft563a_out[6:6]));
	soft   sft563a_7
	( 
	.in(wire_sft563a_in[7:7]),
	.out(wire_sft563a_out[7:7]));
	soft   sft563a_8
	( 
	.in(wire_sft563a_in[8:8]),
	.out(wire_sft563a_out[8:8]));
	soft   sft563a_9
	( 
	.in(wire_sft563a_in[9:9]),
	.out(wire_sft563a_out[9:9]));
	soft   sft563a_10
	( 
	.in(wire_sft563a_in[10:10]),
	.out(wire_sft563a_out[10:10]));
	soft   sft563a_11
	( 
	.in(wire_sft563a_in[11:11]),
	.out(wire_sft563a_out[11:11]));
	soft   sft563a_12
	( 
	.in(wire_sft563a_in[12:12]),
	.out(wire_sft563a_out[12:12]));
	soft   sft563a_13
	( 
	.in(wire_sft563a_in[13:13]),
	.out(wire_sft563a_out[13:13]));
	soft   sft563a_14
	( 
	.in(wire_sft563a_in[14:14]),
	.out(wire_sft563a_out[14:14]));
	soft   sft563a_15
	( 
	.in(wire_sft563a_in[15:15]),
	.out(wire_sft563a_out[15:15]));
	soft   sft563a_16
	( 
	.in(wire_sft563a_in[16:16]),
	.out(wire_sft563a_out[16:16]));
	soft   sft563a_17
	( 
	.in(wire_sft563a_in[17:17]),
	.out(wire_sft563a_out[17:17]));
	soft   sft563a_18
	( 
	.in(wire_sft563a_in[18:18]),
	.out(wire_sft563a_out[18:18]));
	soft   sft563a_19
	( 
	.in(wire_sft563a_in[19:19]),
	.out(wire_sft563a_out[19:19]));
	assign
		wire_sft563a_in = {w1412w, {w900w[0], {w896w[0], {(~ w1311w[0]), {(~ w1306w[0]), {w1207w[0], {w1203w[0], {w1115w[0], {w1111w[0], {w1026w[0], {w1022w[0], {w940w[0], {w936w[0], {w858w[0], {w854w[0], {w780w[0], {w776w[0], {w705w[0], {w701w[0], w633w[0]}}}}}}}}}}}}}}}}}}};
	soft   sft564a_0
	( 
	.in(wire_sft564a_in[0:0]),
	.out(wire_sft564a_out[0:0]));
	soft   sft564a_1
	( 
	.in(wire_sft564a_in[1:1]),
	.out(wire_sft564a_out[1:1]));
	soft   sft564a_2
	( 
	.in(wire_sft564a_in[2:2]),
	.out(wire_sft564a_out[2:2]));
	soft   sft564a_3
	( 
	.in(wire_sft564a_in[3:3]),
	.out(wire_sft564a_out[3:3]));
	soft   sft564a_4
	( 
	.in(wire_sft564a_in[4:4]),
	.out(wire_sft564a_out[4:4]));
	soft   sft564a_5
	( 
	.in(wire_sft564a_in[5:5]),
	.out(wire_sft564a_out[5:5]));
	soft   sft564a_6
	( 
	.in(wire_sft564a_in[6:6]),
	.out(wire_sft564a_out[6:6]));
	soft   sft564a_7
	( 
	.in(wire_sft564a_in[7:7]),
	.out(wire_sft564a_out[7:7]));
	soft   sft564a_8
	( 
	.in(wire_sft564a_in[8:8]),
	.out(wire_sft564a_out[8:8]));
	soft   sft564a_9
	( 
	.in(wire_sft564a_in[9:9]),
	.out(wire_sft564a_out[9:9]));
	soft   sft564a_10
	( 
	.in(wire_sft564a_in[10:10]),
	.out(wire_sft564a_out[10:10]));
	soft   sft564a_11
	( 
	.in(wire_sft564a_in[11:11]),
	.out(wire_sft564a_out[11:11]));
	soft   sft564a_12
	( 
	.in(wire_sft564a_in[12:12]),
	.out(wire_sft564a_out[12:12]));
	soft   sft564a_13
	( 
	.in(wire_sft564a_in[13:13]),
	.out(wire_sft564a_out[13:13]));
	soft   sft564a_14
	( 
	.in(wire_sft564a_in[14:14]),
	.out(wire_sft564a_out[14:14]));
	soft   sft564a_15
	( 
	.in(wire_sft564a_in[15:15]),
	.out(wire_sft564a_out[15:15]));
	soft   sft564a_16
	( 
	.in(wire_sft564a_in[16:16]),
	.out(wire_sft564a_out[16:16]));
	soft   sft564a_17
	( 
	.in(wire_sft564a_in[17:17]),
	.out(wire_sft564a_out[17:17]));
	soft   sft564a_18
	( 
	.in(wire_sft564a_in[18:18]),
	.out(wire_sft564a_out[18:18]));
	soft   sft564a_19
	( 
	.in(wire_sft564a_in[19:19]),
	.out(wire_sft564a_out[19:19]));
	assign
		wire_sft564a_in = {w1412w, {w1412w, {w1412w, {w893w[0], {w890w[0], {w815w[0], {w812w[0], {w740w[0], {w737w[0], {w668w[0], {w665w[0], {w600w[0], {w597w[0], {w536w[0], {w533w[0], {w475w[0], {w472w[0], {w417w[0], {w414w[0], w363w[0]}}}}}}}}}}}}}}}}}}};
	soft   sft565a_0
	( 
	.in(wire_sft565a_in[0:0]),
	.out(wire_sft565a_out[0:0]));
	soft   sft565a_1
	( 
	.in(wire_sft565a_in[1:1]),
	.out(wire_sft565a_out[1:1]));
	soft   sft565a_2
	( 
	.in(wire_sft565a_in[2:2]),
	.out(wire_sft565a_out[2:2]));
	soft   sft565a_3
	( 
	.in(wire_sft565a_in[3:3]),
	.out(wire_sft565a_out[3:3]));
	soft   sft565a_4
	( 
	.in(wire_sft565a_in[4:4]),
	.out(wire_sft565a_out[4:4]));
	soft   sft565a_5
	( 
	.in(wire_sft565a_in[5:5]),
	.out(wire_sft565a_out[5:5]));
	soft   sft565a_6
	( 
	.in(wire_sft565a_in[6:6]),
	.out(wire_sft565a_out[6:6]));
	soft   sft565a_7
	( 
	.in(wire_sft565a_in[7:7]),
	.out(wire_sft565a_out[7:7]));
	soft   sft565a_8
	( 
	.in(wire_sft565a_in[8:8]),
	.out(wire_sft565a_out[8:8]));
	soft   sft565a_9
	( 
	.in(wire_sft565a_in[9:9]),
	.out(wire_sft565a_out[9:9]));
	soft   sft565a_10
	( 
	.in(wire_sft565a_in[10:10]),
	.out(wire_sft565a_out[10:10]));
	soft   sft565a_11
	( 
	.in(wire_sft565a_in[11:11]),
	.out(wire_sft565a_out[11:11]));
	soft   sft565a_12
	( 
	.in(wire_sft565a_in[12:12]),
	.out(wire_sft565a_out[12:12]));
	soft   sft565a_13
	( 
	.in(wire_sft565a_in[13:13]),
	.out(wire_sft565a_out[13:13]));
	soft   sft565a_14
	( 
	.in(wire_sft565a_in[14:14]),
	.out(wire_sft565a_out[14:14]));
	soft   sft565a_15
	( 
	.in(wire_sft565a_in[15:15]),
	.out(wire_sft565a_out[15:15]));
	soft   sft565a_16
	( 
	.in(wire_sft565a_in[16:16]),
	.out(wire_sft565a_out[16:16]));
	soft   sft565a_17
	( 
	.in(wire_sft565a_in[17:17]),
	.out(wire_sft565a_out[17:17]));
	soft   sft565a_18
	( 
	.in(wire_sft565a_in[18:18]),
	.out(wire_sft565a_out[18:18]));
	soft   sft565a_19
	( 
	.in(wire_sft565a_in[19:19]),
	.out(wire_sft565a_out[19:19]));
	assign
		wire_sft565a_in = {w1412w, {w1412w, {w1412w, {w1412w, {w964w[0], {(~ w1302w[0]), {(~ w1298w[0]), {w1200w[0], {w1197w[0], {w1108w[0], {w1105w[0], {w1019w[0], {w1016w[0], {w933w[0], {w930w[0], {w851w[0], {w848w[0], {w773w[0], {2{w1412w}}}}}}}}}}}}}}}}}}}};
	soft   sft566a_0
	( 
	.in(wire_sft566a_in[0:0]),
	.out(wire_sft566a_out[0:0]));
	soft   sft566a_1
	( 
	.in(wire_sft566a_in[1:1]),
	.out(wire_sft566a_out[1:1]));
	soft   sft566a_2
	( 
	.in(wire_sft566a_in[2:2]),
	.out(wire_sft566a_out[2:2]));
	soft   sft566a_3
	( 
	.in(wire_sft566a_in[3:3]),
	.out(wire_sft566a_out[3:3]));
	soft   sft566a_4
	( 
	.in(wire_sft566a_in[4:4]),
	.out(wire_sft566a_out[4:4]));
	soft   sft566a_5
	( 
	.in(wire_sft566a_in[5:5]),
	.out(wire_sft566a_out[5:5]));
	soft   sft566a_6
	( 
	.in(wire_sft566a_in[6:6]),
	.out(wire_sft566a_out[6:6]));
	soft   sft566a_7
	( 
	.in(wire_sft566a_in[7:7]),
	.out(wire_sft566a_out[7:7]));
	soft   sft566a_8
	( 
	.in(wire_sft566a_in[8:8]),
	.out(wire_sft566a_out[8:8]));
	soft   sft566a_9
	( 
	.in(wire_sft566a_in[9:9]),
	.out(wire_sft566a_out[9:9]));
	soft   sft566a_10
	( 
	.in(wire_sft566a_in[10:10]),
	.out(wire_sft566a_out[10:10]));
	soft   sft566a_11
	( 
	.in(wire_sft566a_in[11:11]),
	.out(wire_sft566a_out[11:11]));
	soft   sft566a_12
	( 
	.in(wire_sft566a_in[12:12]),
	.out(wire_sft566a_out[12:12]));
	soft   sft566a_13
	( 
	.in(wire_sft566a_in[13:13]),
	.out(wire_sft566a_out[13:13]));
	soft   sft566a_14
	( 
	.in(wire_sft566a_in[14:14]),
	.out(wire_sft566a_out[14:14]));
	soft   sft566a_15
	( 
	.in(wire_sft566a_in[15:15]),
	.out(wire_sft566a_out[15:15]));
	soft   sft566a_16
	( 
	.in(wire_sft566a_in[16:16]),
	.out(wire_sft566a_out[16:16]));
	soft   sft566a_17
	( 
	.in(wire_sft566a_in[17:17]),
	.out(wire_sft566a_out[17:17]));
	soft   sft566a_18
	( 
	.in(wire_sft566a_in[18:18]),
	.out(wire_sft566a_out[18:18]));
	soft   sft566a_19
	( 
	.in(wire_sft566a_in[19:19]),
	.out(wire_sft566a_out[19:19]));
	assign
		wire_sft566a_in = wire_add562_result;
	soft   sft568a_0
	( 
	.in(wire_sft568a_in[0:0]),
	.out(wire_sft568a_out[0:0]));
	soft   sft568a_1
	( 
	.in(wire_sft568a_in[1:1]),
	.out(wire_sft568a_out[1:1]));
	soft   sft568a_2
	( 
	.in(wire_sft568a_in[2:2]),
	.out(wire_sft568a_out[2:2]));
	soft   sft568a_3
	( 
	.in(wire_sft568a_in[3:3]),
	.out(wire_sft568a_out[3:3]));
	soft   sft568a_4
	( 
	.in(wire_sft568a_in[4:4]),
	.out(wire_sft568a_out[4:4]));
	soft   sft568a_5
	( 
	.in(wire_sft568a_in[5:5]),
	.out(wire_sft568a_out[5:5]));
	soft   sft568a_6
	( 
	.in(wire_sft568a_in[6:6]),
	.out(wire_sft568a_out[6:6]));
	soft   sft568a_7
	( 
	.in(wire_sft568a_in[7:7]),
	.out(wire_sft568a_out[7:7]));
	soft   sft568a_8
	( 
	.in(wire_sft568a_in[8:8]),
	.out(wire_sft568a_out[8:8]));
	soft   sft568a_9
	( 
	.in(wire_sft568a_in[9:9]),
	.out(wire_sft568a_out[9:9]));
	soft   sft568a_10
	( 
	.in(wire_sft568a_in[10:10]),
	.out(wire_sft568a_out[10:10]));
	soft   sft568a_11
	( 
	.in(wire_sft568a_in[11:11]),
	.out(wire_sft568a_out[11:11]));
	assign
		wire_sft568a_in = {w1412w, {w886w[0], {w882w[0], {(~ w1293w[0]), {(~ w1288w[0]), {w1193w[0], {w1189w[0], {w1101w[0], {w1097w[0], {w1012w[0], {w1008w[0], w926w[0]}}}}}}}}}}};
	soft   sft569a_0
	( 
	.in(wire_sft569a_in[0:0]),
	.out(wire_sft569a_out[0:0]));
	soft   sft569a_1
	( 
	.in(wire_sft569a_in[1:1]),
	.out(wire_sft569a_out[1:1]));
	soft   sft569a_2
	( 
	.in(wire_sft569a_in[2:2]),
	.out(wire_sft569a_out[2:2]));
	soft   sft569a_3
	( 
	.in(wire_sft569a_in[3:3]),
	.out(wire_sft569a_out[3:3]));
	soft   sft569a_4
	( 
	.in(wire_sft569a_in[4:4]),
	.out(wire_sft569a_out[4:4]));
	soft   sft569a_5
	( 
	.in(wire_sft569a_in[5:5]),
	.out(wire_sft569a_out[5:5]));
	soft   sft569a_6
	( 
	.in(wire_sft569a_in[6:6]),
	.out(wire_sft569a_out[6:6]));
	soft   sft569a_7
	( 
	.in(wire_sft569a_in[7:7]),
	.out(wire_sft569a_out[7:7]));
	soft   sft569a_8
	( 
	.in(wire_sft569a_in[8:8]),
	.out(wire_sft569a_out[8:8]));
	soft   sft569a_9
	( 
	.in(wire_sft569a_in[9:9]),
	.out(wire_sft569a_out[9:9]));
	soft   sft569a_10
	( 
	.in(wire_sft569a_in[10:10]),
	.out(wire_sft569a_out[10:10]));
	soft   sft569a_11
	( 
	.in(wire_sft569a_in[11:11]),
	.out(wire_sft569a_out[11:11]));
	assign
		wire_sft569a_in = {w1412w, {w1412w, {w1412w, {w879w[0], {w876w[0], {w801w[0], {w798w[0], {w726w[0], {w723w[0], {w654w[0], {w651w[0], w586w[0]}}}}}}}}}}};
	soft   sft570a_0
	( 
	.in(wire_sft570a_in[0:0]),
	.out(wire_sft570a_out[0:0]));
	soft   sft570a_1
	( 
	.in(wire_sft570a_in[1:1]),
	.out(wire_sft570a_out[1:1]));
	soft   sft570a_2
	( 
	.in(wire_sft570a_in[2:2]),
	.out(wire_sft570a_out[2:2]));
	soft   sft570a_3
	( 
	.in(wire_sft570a_in[3:3]),
	.out(wire_sft570a_out[3:3]));
	soft   sft570a_4
	( 
	.in(wire_sft570a_in[4:4]),
	.out(wire_sft570a_out[4:4]));
	soft   sft570a_5
	( 
	.in(wire_sft570a_in[5:5]),
	.out(wire_sft570a_out[5:5]));
	soft   sft570a_6
	( 
	.in(wire_sft570a_in[6:6]),
	.out(wire_sft570a_out[6:6]));
	soft   sft570a_7
	( 
	.in(wire_sft570a_in[7:7]),
	.out(wire_sft570a_out[7:7]));
	soft   sft570a_8
	( 
	.in(wire_sft570a_in[8:8]),
	.out(wire_sft570a_out[8:8]));
	soft   sft570a_9
	( 
	.in(wire_sft570a_in[9:9]),
	.out(wire_sft570a_out[9:9]));
	soft   sft570a_10
	( 
	.in(wire_sft570a_in[10:10]),
	.out(wire_sft570a_out[10:10]));
	soft   sft570a_11
	( 
	.in(wire_sft570a_in[11:11]),
	.out(wire_sft570a_out[11:11]));
	assign
		wire_sft570a_in = {w1412w, {w1412w, {w1412w, {w1412w, {w950w[0], {(~ w1284w[0]), {(~ w1280w[0]), {w1186w[0], {w1183w[0], {w1094w[0], {2{w1412w}}}}}}}}}}}};
	soft   sft571a_0
	( 
	.in(wire_sft571a_in[0:0]),
	.out(wire_sft571a_out[0:0]));
	soft   sft571a_1
	( 
	.in(wire_sft571a_in[1:1]),
	.out(wire_sft571a_out[1:1]));
	soft   sft571a_2
	( 
	.in(wire_sft571a_in[2:2]),
	.out(wire_sft571a_out[2:2]));
	soft   sft571a_3
	( 
	.in(wire_sft571a_in[3:3]),
	.out(wire_sft571a_out[3:3]));
	soft   sft571a_4
	( 
	.in(wire_sft571a_in[4:4]),
	.out(wire_sft571a_out[4:4]));
	soft   sft571a_5
	( 
	.in(wire_sft571a_in[5:5]),
	.out(wire_sft571a_out[5:5]));
	soft   sft571a_6
	( 
	.in(wire_sft571a_in[6:6]),
	.out(wire_sft571a_out[6:6]));
	soft   sft571a_7
	( 
	.in(wire_sft571a_in[7:7]),
	.out(wire_sft571a_out[7:7]));
	soft   sft571a_8
	( 
	.in(wire_sft571a_in[8:8]),
	.out(wire_sft571a_out[8:8]));
	soft   sft571a_9
	( 
	.in(wire_sft571a_in[9:9]),
	.out(wire_sft571a_out[9:9]));
	soft   sft571a_10
	( 
	.in(wire_sft571a_in[10:10]),
	.out(wire_sft571a_out[10:10]));
	soft   sft571a_11
	( 
	.in(wire_sft571a_in[11:11]),
	.out(wire_sft571a_out[11:11]));
	assign
		wire_sft571a_in = wire_add567_result;
	soft   sft573a_0
	( 
	.in(wire_sft573a_in[0:0]),
	.out(wire_sft573a_out[0:0]));
	soft   sft573a_1
	( 
	.in(wire_sft573a_in[1:1]),
	.out(wire_sft573a_out[1:1]));
	soft   sft573a_2
	( 
	.in(wire_sft573a_in[2:2]),
	.out(wire_sft573a_out[2:2]));
	soft   sft573a_3
	( 
	.in(wire_sft573a_in[3:3]),
	.out(wire_sft573a_out[3:3]));
	assign
		wire_sft573a_in = {w1412w, {w872w[0], {w868w[0], (~ w1275w[0])}}};
	soft   sft574a_0
	( 
	.in(wire_sft574a_in[0:0]),
	.out(wire_sft574a_out[0:0]));
	soft   sft574a_1
	( 
	.in(wire_sft574a_in[1:1]),
	.out(wire_sft574a_out[1:1]));
	soft   sft574a_2
	( 
	.in(wire_sft574a_in[2:2]),
	.out(wire_sft574a_out[2:2]));
	soft   sft574a_3
	( 
	.in(wire_sft574a_in[3:3]),
	.out(wire_sft574a_out[3:3]));
	assign
		wire_sft574a_in = {w1412w, {w1412w, {w1412w, w865w[0]}}};
	soft   sft575a_0
	( 
	.in(wire_sft575a_in[0:0]),
	.out(wire_sft575a_out[0:0]));
	soft   sft575a_1
	( 
	.in(wire_sft575a_in[1:1]),
	.out(wire_sft575a_out[1:1]));
	soft   sft575a_2
	( 
	.in(wire_sft575a_in[2:2]),
	.out(wire_sft575a_out[2:2]));
	soft   sft575a_3
	( 
	.in(wire_sft575a_in[3:3]),
	.out(wire_sft575a_out[3:3]));
	assign
		wire_sft575a_in = {w1412w, {w1412w, {w1412w, w1390w}}};
	soft   sft576a_0
	( 
	.in(wire_sft576a_in[0:0]),
	.out(wire_sft576a_out[0:0]));
	soft   sft576a_1
	( 
	.in(wire_sft576a_in[1:1]),
	.out(wire_sft576a_out[1:1]));
	soft   sft576a_2
	( 
	.in(wire_sft576a_in[2:2]),
	.out(wire_sft576a_out[2:2]));
	soft   sft576a_3
	( 
	.in(wire_sft576a_in[3:3]),
	.out(wire_sft576a_out[3:3]));
	assign
		wire_sft576a_in = wire_add572_result;
	assign
		aclr = 1'b0,
		result = w1w[53:19],
		w1000w = (data[22] & (~ data[21])),
		w1004w = (data[22] & data[21]),
		w1008w = (data[23] & data[0]),
		w100w = (data[6] & data[3]),
		w1012w = (data[23] & data[1]),
		w1016w = (data[23] & data[2]),
		w1019w = (data[23] & data[3]),
		w1022w = (data[23] & data[4]),
		w1026w = (data[23] & data[5]),
		w1030w = (data[23] & data[6]),
		w1033w = (data[23] & data[7]),
		w1036w = (data[23] & data[8]),
		w103w = (data[6] & data[4]),
		w1040w = (data[23] & data[9]),
		w1044w = (data[23] & data[10]),
		w1047w = (data[23] & data[11]),
		w1050w = (data[23] & data[12]),
		w1054w = (data[23] & data[13]),
		w1058w = (data[23] & data[14]),
		w1061w = (data[23] & data[15]),
		w1064w = (data[23] & data[16]),
		w1068w = (data[23] & data[17]),
		w1072w = (data[23] & data[18]),
		w1075w = (data[23] & data[19]),
		w1078w = (data[23] & data[20]),
		w1081w = (data[23] & data[21]),
		w1086w = (data[23] & (~ data[22])),
		w108w = (data[6] & (~ data[5])),
		w1090w = (data[23] & data[22]),
		w1094w = (data[24] & data[0]),
		w1097w = (data[24] & data[1]),
		w1101w = (data[24] & data[2]),
		w1105w = (data[24] & data[3]),
		w1108w = (data[24] & data[4]),
		w1111w = (data[24] & data[5]),
		w1115w = (data[24] & data[6]),
		w1119w = (data[24] & data[7]),
		w1122w = (data[24] & data[8]),
		w1125w = (data[24] & data[9]),
		w1129w = (data[24] & data[10]),
		w112w = (data[6] & data[5]),
		w1133w = (data[24] & data[11]),
		w1136w = (data[24] & data[12]),
		w1139w = (data[24] & data[13]),
		w1143w = (data[24] & data[14]),
		w1147w = (data[24] & data[15]),
		w1150w = (data[24] & data[16]),
		w1153w = (data[24] & data[17]),
		w1157w = (data[24] & data[18]),
		w1161w = (data[24] & data[19]),
		w1164w = (data[24] & data[20]),
		w1167w = (data[24] & data[21]),
		w116w = (data[7] & data[0]),
		w1170w = (data[24] & data[22]),
		w1175w = (data[24] & (~ data[23])),
		w1179w = (data[24] & data[23]),
		w1183w = (data[25] & data[0]),
		w1186w = (data[25] & data[1]),
		w1189w = (data[25] & data[2]),
		w1193w = (data[25] & data[3]),
		w1197w = (data[25] & data[4]),
		w1200w = (data[25] & data[5]),
		w1203w = (data[25] & data[6]),
		w1207w = (data[25] & data[7]),
		w120w = (data[7] & data[1]),
		w1211w = (data[25] & data[8]),
		w1214w = (data[25] & data[9]),
		w1217w = (data[25] & data[10]),
		w1221w = (data[25] & data[11]),
		w1225w = (data[25] & data[12]),
		w1228w = (data[25] & data[13]),
		w1231w = (data[25] & data[14]),
		w1235w = (data[25] & data[15]),
		w1239w = (data[25] & data[16]),
		w1242w = (data[25] & data[17]),
		w1245w = (data[25] & data[18]),
		w1249w = (data[25] & data[19]),
		w124w = (data[7] & data[2]),
		w1253w = (data[25] & data[20]),
		w1256w = (data[25] & data[21]),
		w1259w = (data[25] & data[22]),
		w1262w = (data[25] & data[23]),
		w1267w = (data[25] & (~ data[24])),
		w1271w = (data[25] & data[24]),
		w1275w = (data[26] & data[0]),
		w127w = (data[7] & data[3]),
		w1280w = (data[26] & data[1]),
		w1284w = (data[26] & data[2]),
		w1288w = (data[26] & data[3]),
		w1293w = (data[26] & data[4]),
		w1298w = (data[26] & data[5]),
		w12w = (data[1] & (~ data[0])),
		w1302w = (data[26] & data[6]),
		w1306w = (data[26] & data[7]),
		w130w = (data[7] & data[4]),
		w1311w = (data[26] & data[8]),
		w1316w = (data[26] & data[9]),
		w1320w = (data[26] & data[10]),
		w1324w = (data[26] & data[11]),
		w1329w = (data[26] & data[12]),
		w1334w = (data[26] & data[13]),
		w1338w = (data[26] & data[14]),
		w133w = (data[7] & data[5]),
		w1342w = (data[26] & data[15]),
		w1347w = (data[26] & data[16]),
		w1352w = (data[26] & data[17]),
		w1356w = (data[26] & data[18]),
		w1360w = (data[26] & data[19]),
		w1365w = (data[26] & data[20]),
		w1370w = (data[26] & data[21]),
		w1374w = (data[26] & data[22]),
		w1378w = (data[26] & data[23]),
		w1382w = (data[26] & data[24]),
		w1388w = (data[26] & (~ data[25])),
		w138w = (data[7] & (~ data[6])),
		w1390w = 1'b1,
		w1412w = 1'b0,
		w142w = (data[7] & data[6]),
		w146w = (data[8] & data[0]),
		w149w = (data[8] & data[1]),
		w153w = (data[8] & data[2]),
		w157w = (data[8] & data[3]),
		w160w = (data[8] & data[4]),
		w163w = (data[8] & data[5]),
		w166w = (data[8] & data[6]),
		w16w = (data[1] & data[0]),
		w171w = (data[8] & (~ data[7])),
		w175w = (data[8] & data[7]),
		w179w = (data[9] & data[0]),
		w182w = (data[9] & data[1]),
		w185w = (data[9] & data[2]),
		w189w = (data[9] & data[3]),
		w193w = (data[9] & data[4]),
		w196w = (data[9] & data[5]),
		w199w = (data[9] & data[6]),
		w1w = {w2180w[53:2], 1'b0, dffe1a2[0:0]},
		w202w = (data[9] & data[7]),
		w207w = (data[9] & (~ data[8])),
		w20w = (data[2] & data[0]),
		w211w = (data[9] & data[8]),
		w215w = (data[10] & data[0]),
		w2180w = {dffe539, dffe536, dffe533, dffe528, dffe523, dffe517, dffe510, dffe503, dffe495, dffe487, dffe478, dffe469, dffe459, dffe449, dffe438, dffe427, dffe415, dffe402, dffe389, dffe376, dffe363, dffe350, dffe337, dffe324, dffe311, dffe298, dffe285, dffe272, dffe259, dffe246, dffe233, dffe220, dffe207, dffe194, dffe181, dffe168, dffe155, dffe142, dffe129, dffe117, dffe105, dffe94, dffe83, dffe73, dffe63, dffe54, dffe45, dffe37, dffe29, dffe22, dffe15, dffe10, dffe5, dffe2, {2{w1412w}}},
		w219w = (data[10] & data[1]),
		w222w = (data[10] & data[2]),
		w225w = (data[10] & data[3]),
		w229w = (data[10] & data[4]),
		w233w = (data[10] & data[5]),
		w236w = (data[10] & data[6]),
		w239w = (data[10] & data[7]),
		w242w = (data[10] & data[8]),
		w247w = (data[10] & (~ data[9])),
		w251w = (data[10] & data[9]),
		w255w = (data[11] & data[0]),
		w259w = (data[11] & data[1]),
		w25w = (data[2] & (~ data[1])),
		w263w = (data[11] & data[2]),
		w266w = (data[11] & data[3]),
		w269w = (data[11] & data[4]),
		w273w = (data[11] & data[5]),
		w277w = (data[11] & data[6]),
		w280w = (data[11] & data[7]),
		w283w = (data[11] & data[8]),
		w286w = (data[11] & data[9]),
		w291w = (data[11] & (~ data[10])),
		w295w = (data[11] & data[10]),
		w299w = (data[12] & data[0]),
		w29w = (data[2] & data[1]),
		w302w = (data[12] & data[1]),
		w306w = (data[12] & data[2]),
		w310w = (data[12] & data[3]),
		w313w = (data[12] & data[4]),
		w316w = (data[12] & data[5]),
		w320w = (data[12] & data[6]),
		w324w = (data[12] & data[7]),
		w327w = (data[12] & data[8]),
		w330w = (data[12] & data[9]),
		w333w = (data[12] & data[10]),
		w338w = (data[12] & (~ data[11])),
		w33w = (data[3] & data[0]),
		w342w = (data[12] & data[11]),
		w346w = (data[13] & data[0]),
		w349w = (data[13] & data[1]),
		w352w = (data[13] & data[2]),
		w356w = (data[13] & data[3]),
		w360w = (data[13] & data[4]),
		w363w = (data[13] & data[5]),
		w366w = (data[13] & data[6]),
		w36w = (data[3] & data[1]),
		w370w = (data[13] & data[7]),
		w374w = (data[13] & data[8]),
		w377w = (data[13] & data[9]),
		w380w = (data[13] & data[10]),
		w383w = (data[13] & data[11]),
		w388w = (data[13] & (~ data[12])),
		w392w = (data[13] & data[12]),
		w396w = (data[14] & data[0]),
		w400w = (data[14] & data[1]),
		w403w = (data[14] & data[2]),
		w406w = (data[14] & data[3]),
		w410w = (data[14] & data[4]),
		w414w = (data[14] & data[5]),
		w417w = (data[14] & data[6]),
		w41w = (data[3] & (~ data[2])),
		w420w = (data[14] & data[7]),
		w424w = (data[14] & data[8]),
		w428w = (data[14] & data[9]),
		w431w = (data[14] & data[10]),
		w434w = (data[14] & data[11]),
		w437w = (data[14] & data[12]),
		w442w = (data[14] & (~ data[13])),
		w446w = (data[14] & data[13]),
		w450w = (data[15] & data[0]),
		w454w = (data[15] & data[1]),
		w458w = (data[15] & data[2]),
		w45w = (data[3] & data[2]),
		w461w = (data[15] & data[3]),
		w464w = (data[15] & data[4]),
		w468w = (data[15] & data[5]),
		w472w = (data[15] & data[6]),
		w475w = (data[15] & data[7]),
		w478w = (data[15] & data[8]),
		w482w = (data[15] & data[9]),
		w486w = (data[15] & data[10]),
		w489w = (data[15] & data[11]),
		w492w = (data[15] & data[12]),
		w495w = (data[15] & data[13]),
		w49w = (data[4] & data[0]),
		w500w = (data[15] & (~ data[14])),
		w504w = (data[15] & data[14]),
		w508w = (data[16] & data[0]),
		w511w = (data[16] & data[1]),
		w515w = (data[16] & data[2]),
		w519w = (data[16] & data[3]),
		w522w = (data[16] & data[4]),
		w525w = (data[16] & data[5]),
		w529w = (data[16] & data[6]),
		w52w = (data[4] & data[1]),
		w533w = (data[16] & data[7]),
		w536w = (data[16] & data[8]),
		w539w = (data[16] & data[9]),
		w543w = (data[16] & data[10]),
		w547w = (data[16] & data[11]),
		w550w = (data[16] & data[12]),
		w553w = (data[16] & data[13]),
		w556w = (data[16] & data[14]),
		w55w = (data[4] & data[2]),
		w561w = (data[16] & (~ data[15])),
		w565w = (data[16] & data[15]),
		w569w = (data[17] & data[0]),
		w572w = (data[17] & data[1]),
		w575w = (data[17] & data[2]),
		w579w = (data[17] & data[3]),
		w583w = (data[17] & data[4]),
		w586w = (data[17] & data[5]),
		w589w = (data[17] & data[6]),
		w593w = (data[17] & data[7]),
		w597w = (data[17] & data[8]),
		w600w = (data[17] & data[9]),
		w603w = (data[17] & data[10]),
		w607w = (data[17] & data[11]),
		w60w = (data[4] & (~ data[3])),
		w611w = (data[17] & data[12]),
		w614w = (data[17] & data[13]),
		w617w = (data[17] & data[14]),
		w620w = (data[17] & data[15]),
		w625w = (data[17] & (~ data[16])),
		w629w = (data[17] & data[16]),
		w633w = (data[18] & data[0]),
		w637w = (data[18] & data[1]),
		w640w = (data[18] & data[2]),
		w643w = (data[18] & data[3]),
		w647w = (data[18] & data[4]),
		w64w = (data[4] & data[3]),
		w651w = (data[18] & data[5]),
		w654w = (data[18] & data[6]),
		w657w = (data[18] & data[7]),
		w661w = (data[18] & data[8]),
		w665w = (data[18] & data[9]),
		w668w = (data[18] & data[10]),
		w671w = (data[18] & data[11]),
		w675w = (data[18] & data[12]),
		w679w = (data[18] & data[13]),
		w682w = (data[18] & data[14]),
		w685w = (data[18] & data[15]),
		w688w = (data[18] & data[16]),
		w68w = (data[5] & data[0]),
		w693w = (data[18] & (~ data[17])),
		w697w = (data[18] & data[17]),
		w701w = (data[19] & data[0]),
		w705w = (data[19] & data[1]),
		w709w = (data[19] & data[2]),
		w712w = (data[19] & data[3]),
		w715w = (data[19] & data[4]),
		w719w = (data[19] & data[5]),
		w71w = (data[5] & data[1]),
		w723w = (data[19] & data[6]),
		w726w = (data[19] & data[7]),
		w729w = (data[19] & data[8]),
		w733w = (data[19] & data[9]),
		w737w = (data[19] & data[10]),
		w740w = (data[19] & data[11]),
		w743w = (data[19] & data[12]),
		w747w = (data[19] & data[13]),
		w74w = (data[5] & data[2]),
		w751w = (data[19] & data[14]),
		w754w = (data[19] & data[15]),
		w757w = (data[19] & data[16]),
		w760w = (data[19] & data[17]),
		w765w = (data[19] & (~ data[18])),
		w769w = (data[19] & data[18]),
		w773w = (data[20] & data[0]),
		w776w = (data[20] & data[1]),
		w77w = (data[5] & data[3]),
		w780w = (data[20] & data[2]),
		w784w = (data[20] & data[3]),
		w787w = (data[20] & data[4]),
		w790w = (data[20] & data[5]),
		w794w = (data[20] & data[6]),
		w798w = (data[20] & data[7]),
		w801w = (data[20] & data[8]),
		w804w = (data[20] & data[9]),
		w808w = (data[20] & data[10]),
		w812w = (data[20] & data[11]),
		w815w = (data[20] & data[12]),
		w818w = (data[20] & data[13]),
		w822w = (data[20] & data[14]),
		w826w = (data[20] & data[15]),
		w829w = (data[20] & data[16]),
		w82w = (data[5] & (~ data[4])),
		w832w = (data[20] & data[17]),
		w835w = (data[20] & data[18]),
		w840w = (data[20] & (~ data[19])),
		w844w = (data[20] & data[19]),
		w848w = (data[21] & data[0]),
		w851w = (data[21] & data[1]),
		w854w = (data[21] & data[2]),
		w858w = (data[21] & data[3]),
		w862w = (data[21] & data[4]),
		w865w = (data[21] & data[5]),
		w868w = (data[21] & data[6]),
		w86w = (data[5] & data[4]),
		w872w = (data[21] & data[7]),
		w876w = (data[21] & data[8]),
		w879w = (data[21] & data[9]),
		w882w = (data[21] & data[10]),
		w886w = (data[21] & data[11]),
		w890w = (data[21] & data[12]),
		w893w = (data[21] & data[13]),
		w896w = (data[21] & data[14]),
		w900w = (data[21] & data[15]),
		w904w = (data[21] & data[16]),
		w907w = (data[21] & data[17]),
		w90w = (data[6] & data[0]),
		w910w = (data[21] & data[18]),
		w913w = (data[21] & data[19]),
		w918w = (data[21] & (~ data[20])),
		w922w = (data[21] & data[20]),
		w926w = (data[22] & data[0]),
		w930w = (data[22] & data[1]),
		w933w = (data[22] & data[2]),
		w936w = (data[22] & data[3]),
		w940w = (data[22] & data[4]),
		w944w = (data[22] & data[5]),
		w947w = (data[22] & data[6]),
		w94w = (data[6] & data[1]),
		w950w = (data[22] & data[7]),
		w954w = (data[22] & data[8]),
		w958w = (data[22] & data[9]),
		w961w = (data[22] & data[10]),
		w964w = (data[22] & data[11]),
		w968w = (data[22] & data[12]),
		w972w = (data[22] & data[13]),
		w975w = (data[22] & data[14]),
		w978w = (data[22] & data[15]),
		w97w = (data[6] & data[2]),
		w982w = (data[22] & data[16]),
		w986w = (data[22] & data[17]),
		w989w = (data[22] & data[18]),
		w992w = (data[22] & data[19]),
		w995w = (data[22] & data[20]);
endmodule //mult_27_square_altsquare
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module mult_27_square (
	clock,
	dataa,
	ena,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[26:0]  dataa;
	input	  ena;
	output	[34:0]  result;

	wire [34:0] sub_wire0;
	wire [34:0] result = sub_wire0[34:0];

	mult_27_square_altsquare	mult_27_square_altsquare_component (
				.clock (clock),
				.data (dataa),
				.ena (ena),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AutoSizeResult NUMERIC "0"
// Retrieval info: PRIVATE: B_isConstant NUMERIC "0"
// Retrieval info: PRIVATE: ConstantB NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: PRIVATE: LPM_PIPELINE NUMERIC "3"
// Retrieval info: PRIVATE: Latency NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: SignedMult NUMERIC "1"
// Retrieval info: PRIVATE: USE_MULT NUMERIC "0"
// Retrieval info: PRIVATE: ValidConstant NUMERIC "0"
// Retrieval info: PRIVATE: WidthA NUMERIC "27"
// Retrieval info: PRIVATE: WidthB NUMERIC "8"
// Retrieval info: PRIVATE: WidthP NUMERIC "35"
// Retrieval info: PRIVATE: aclr NUMERIC "0"
// Retrieval info: PRIVATE: clken NUMERIC "1"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: PRIVATE: optimize NUMERIC "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: DATA_WIDTH NUMERIC "27"
// Retrieval info: CONSTANT: LPM_TYPE STRING "ALTSQUARE"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "3"
// Retrieval info: CONSTANT: REPRESENTATION STRING "SIGNED"
// Retrieval info: CONSTANT: RESULT_ALIGNMENT STRING "MSB"
// Retrieval info: CONSTANT: RESULT_WIDTH NUMERIC "35"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: dataa 0 0 27 0 INPUT NODEFVAL "dataa[26..0]"
// Retrieval info: USED_PORT: ena 0 0 0 0 INPUT NODEFVAL "ena"
// Retrieval info: USED_PORT: result 0 0 35 0 OUTPUT NODEFVAL "result[34..0]"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @data 0 0 27 0 dataa 0 0 27 0
// Retrieval info: CONNECT: @ena 0 0 0 0 ena 0 0 0 0
// Retrieval info: CONNECT: result 0 0 35 0 @result 0 0 35 0
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mult_27_square_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
